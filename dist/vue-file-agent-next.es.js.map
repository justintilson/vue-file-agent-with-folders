{"version":3,"file":"vue-file-agent-next.es.js","sources":["../src/lib/extensions.ts","../src/lib/icons.ts","../src/components/VueFileIcon.vue","../src/lib/drop-handler.ts","../src/lib/utils.ts","../src/components/VueFilePreview.vue","../src/components/VueFileList.vue","../src/components/VueFileListItem.vue","../../../node_modules/.pnpm/vue-slicksort@2.0.5_vue@3.5.13_typescript@4.9.5_/node_modules/vue-slicksort/dist/vue-slicksort.esm.js","../src/lib/file-record.ts","../src/lib/ajax-request.ts","../src/lib/upload-helper.ts","../src/lib/plugins.ts","../src/components/VueFileAgent.vue","../src/components/index.ts","../src/VueFileAgent.ts"],"sourcesContent":["const c = {\n  'audio': [\n    'aif',\n    'cda',\n    'mid',\n    'midi',\n    // 'mp3',\n    'mpa',\n    // 'ogg',\n    // 'wav',\n    'wma',\n    'wpl',\n  ],\n  'audio-playable': ['mp3', 'ogg', 'wav'],\n  'archive': ['7z', 'arj', 'deb', 'pkg', 'rar', 'rpm', 'tar.gz', 'z', 'zip'],\n  'disc': [\n    // 'bin',\n    'dmg',\n    'iso',\n    'toast',\n    'vcd',\n  ],\n  'database': [\n    'csv',\n    'dat',\n    'db',\n    'dbf',\n    'log',\n    'mdb',\n    'sav',\n    'sql',\n    'tar',\n    // 'xml'\n  ],\n  'executable': ['apk', 'bat', 'bin', 'cgi', 'pl', 'com', 'exe', 'gadget', 'jar', 'py', 'wsf', 'ipa'],\n  'font': ['fnt', 'fon', 'otf', 'ttf'],\n  'image': ['ai', 'bmp', 'gif', 'ico', 'jpeg', 'jpg', 'png', 'ps', 'psd', 'svg', 'tif', 'tiff'],\n  'markup': [\n    'asp',\n    'aspx',\n    'cer',\n    'cfm',\n    'cgi',\n    'pl',\n    'css',\n    'scss',\n    'htm',\n    'html',\n    'jsp',\n    // 'vue',\n    'part',\n    'php',\n    'py',\n    'rss',\n    'xml',\n    'xhtml',\n  ],\n  'presentation': ['key', 'odp', 'pps', 'ppt', 'pptx'],\n  'script': ['c', 'class', 'cpp', 'cs', 'h', 'java', 'js', 'json', 'sh', 'swift', 'vb'],\n  'sheet': ['ods', 'xlr', 'xls', 'xlsx'],\n  'system': [\n    'bak',\n    'cab',\n    'cfg',\n    'cpl',\n    'cur',\n    'dll',\n    'dmp',\n    'drv',\n    'icns',\n    // 'ico',\n    'ini',\n    'lnk',\n    'msi',\n    'sys',\n    'tmp',\n  ],\n  'video': [\n    '3g2',\n    '3gp',\n    'avi',\n    'flv',\n    'h264',\n    // 'm4v',\n    'mkv',\n    // 'mov',\n    // 'mp4',\n    'mpg',\n    'mpeg',\n    'rm',\n    'swf',\n    'vob',\n    // 'webm',\n    'wmv',\n  ],\n  'video-playable': ['mp4', 'webm', 'mov'],\n  'vue': ['vue'],\n  'doc': [\n    'doc',\n    'docx',\n    'odt',\n    'rtf',\n    'tex',\n    // 'txt',\n    'wks',\n    'wps',\n    'wpd',\n  ],\n  'text': ['txt'],\n  'ebook': ['epub'],\n  'pdf': ['pdf'],\n  'folder': ['folder'],\n  'play': ['play'],\n};\n\nexport default c;\n","import extensions from '../lib/extensions';\n\nexport class SvgIcon {\n  public category: string = '';\n  constructor(public paths: string[], public color?: string, public viewBox?: string) {}\n}\n\nconst playIconPaths = ['M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm-4 29V15l12 9-12 9z'];\n\nconst icons = {\n  'folder': new SvgIcon(\n    [\n      'M96.5 93.7h-93c-2 0-3.5-1.5-3.5-3.5V35.4h100v54.8c0 2-1.5 3.5-3.5 3.5z',\n      'M44.9 20V9.7c0-2-1.5-3.5-3.5-3.5h-38C1.5 6.3 0 7.8 0 9.7v25.7h100V23.5c0-2-1.5-3.5-3.5-3.5H44.9z',\n    ],\n    '#efce4a'\n  ),\n  'audio': new SvgIcon(\n    [\n      'M32.5 37.5h-9v25h9L53.6 77V23L32.5 37.5M71.9 50c0 6.8-3.7 12.7-9.1 15.8l2.8 4.9c7.1-4.1 11.9-11.8 11.9-20.7 0-8.8-4.8-16.6-11.9-20.7l-2.8 4.9c5.4 3.1 9.1 9 9.1 15.8z',\n      // tslint:disable-next-line\n      'M62.1 50c0 3.2-1.7 5.9-4.3 7.4l2.7 4.7c4.2-2.4 7-6.9 7-12.1 0-5.2-2.8-9.7-7-12.1l-2.7 4.7c2.6 1.5 4.3 4.2 4.3 7.4z',\n    ],\n    '#039'\n  ),\n  'video': new SvgIcon(\n    [\n      'M21 26.4v47.1h58V26.4H21zm10.9 43.5h-7.2v-7.2h7.2v7.2zm0-10.8h-7.2v-7.2h7.2v7.2zm0-10.9h-7.2V41h7.2v7.2zm0-10.9h-7.2v-7.2h7.2v7.2zm10.9 25.4V37.3L60.9 50 42.8 62.7zm32.6 7.2h-7.2v-7.2h7.2v7.2zm0-10.8h-7.2v-7.2h7.2v7.2zm0-10.9h-7.2V41h7.2v7.2zm0-10.9h-7.2v-7.2h7.2v7.2z',\n    ],\n    '#ef6f2e'\n  ),\n  'audio-playable': new SvgIcon(playIconPaths, '#039', '0 0 48 48'),\n  'video-playable': new SvgIcon(playIconPaths, '#ef6f2e', '0 0 48 48'),\n  'archive': new SvgIcon(\n    [\n      'M72.4 38.5h-7.9v-7.9l7.9 7.9zm-21.3-7.9v28.8h21.4v-19h-9.9v-9.9H51.1zm3.3-7.6H30.8v5.6h9.3l-5.9 4.5v4.8l8.6-6.6v-2.7h30.1v-2.3L54.4 23zM42.9 35.1l-8.6 6.6v4.8l8.6-6.6v-4.8zm-8.7 20l8.6-6.6v-4.8l-8.6 6.6v4.8zm8.7 2v-4.8l-8.6 6.6v2.6h-3.4v5.6h5.3v3.8H33c-.6-1-1.6-1.6-2.8-1.6-1.8 0-3.2 1.4-3.2 3.2s1.4 3.2 3.2 3.2c1.2 0 2.2-.6 2.8-1.6h3.1V77h4.8v-2.9H44c.6 1 1.6 1.6 2.8 1.6 1.8 0 3.2-1.4 3.2-3.2s-1.4-3.2-3.2-3.2c-1.2 0-2.2.6-2.8 1.6h-3.1v-3.8h13.5l18.5-3.3v-2.3H37.1l5.8-4.4z',\n    ],\n    '#ba8322'\n  ),\n  'system': new SvgIcon(\n    [\n      'M73.6 54.8c-2.1-.7-3.4-2.6-3.4-4.8s1.4-4.1 3.4-4.8c.6-.2 1-.9.8-1.5-.6-2.3-1.5-4.4-2.7-6.5-.3-.6-1.1-.8-1.7-.5-.7.4-1.6.6-2.4.6-2.8 0-5-2.3-5-5 0-.8.2-1.7.6-2.4.3-.6.1-1.3-.5-1.7-2-1.2-4.2-2.1-6.5-2.7-.6-.2-1.3.2-1.5.8-.7 2.1-2.6 3.4-4.8 3.4-2.2 0-4.1-1.4-4.8-3.4-.2-.6-.9-1-1.5-.8-2.3.6-4.4 1.5-6.5 2.7-.6.3-.8 1.1-.5 1.7.4.7.6 1.6.6 2.4 0 2.8-2.3 5-5 5-.8 0-1.7-.2-2.4-.6-.6-.3-1.3-.1-1.7.5-1.2 2-2.1 4.2-2.7 6.5-.2.6.2 1.3.8 1.5 2.1.7 3.4 2.6 3.4 4.8s-1.4 4.1-3.4 4.8c-.6.2-1 .9-.8 1.5.6 2.3 1.5 4.4 2.7 6.5.3.6 1.1.8 1.7.5.7-.4 1.6-.6 2.4-.6 2.8 0 5 2.3 5 5 0 .8-.2 1.7-.6 2.4-.3.6-.1 1.3.5 1.7 2 1.2 4.2 2.1 6.5 2.7h.3c.5 0 1-.3 1.2-.9.7-2.1 2.6-3.4 4.8-3.4 2.2 0 4.1 1.4 4.8 3.4.2.6.9 1 1.5.8 2.3-.6 4.4-1.5 6.5-2.7.6-.3.8-1.1.5-1.7-.4-.7-.6-1.6-.6-2.4 0-2.8 2.3-5 5-5 .8 0 1.7.2 2.4.6.6.3 1.3.1 1.7-.5 1.2-2 2.1-4.2 2.7-6.5.2-.5-.1-1.2-.8-1.4zM50 57.6c-4.2 0-7.6-3.4-7.6-7.6 0-4.2 3.4-7.6 7.6-7.6 4.2 0 7.6 3.4 7.6 7.6 0 4.2-3.4 7.6-7.6 7.6z',\n    ],\n    '#999'\n  ),\n  'image': new SvgIcon(\n    [\n      'm 40.400002,35 a 8,8 0 0 1 -8,8 8,8 0 0 1 -8,-8 8,8 0 0 1 8,-8 8,8 0 0 1 8,8 z',\n      'M78.9 47.3l-9.7-9.6L50 57l-9.6-9.7-19.3 19.3V73h57.8z',\n    ],\n    '#5b2d8d'\n  ),\n  'doc': new SvgIcon(\n    [\n      'M29.6 53l-5.9-18.2c-.2-.7-.4-1-.5-1-.1-.1-.2-.1-.4-.2l-2.1-.6-.1-2.6h11l.2 2.6-2.1.6v.2c0 .2.1.7.4 1.2l2.2 7 3.9-11.7 3-.1 3.6 11.7 2.5-7c.1-.5.4-1 .4-1.2v-.1l-1.8-.5-.1-2.7h8.6l.2 2.6-2.3.7c-.1 0-.2.1-.4.1 0 .1-.2.2-.4.9L43 52.8l-3.1.2-3.3-11.2-3.9 11-3.1.2z',\n      'M57.8 30.2h21.7v3.4H57.8zm0 9.2h21.7v3.4H57.8zm0 9.4h21.7v3.4H57.8zm-36.2 9.6h57.9v3.4H21.6zm0 9.4h57.9v3.4H21.6z',\n    ],\n    '#2372ba'\n  ),\n  'executable': new SvgIcon(\n    ['M33.1 29.8l-6.6 6.6L37.2 47 26.5 57.6l6.6 6.6L50.2 47zm18.8 31.1h22.6v9.2H51.9z'],\n    '#333'\n  ),\n  'ebook': new SvgIcon(\n    [\n      'M75.8 45.7c-.3-.6-.7-1.2-1.3-1.6-.1.5-.3 1-.6 1.5L58.3 69.8c-.6.9-1.9 1.1-2.9.8l-25-7c-1.5-.4-3.3-1.3-3.4-3 0-.6 0-.9.4-1.1.3-.3.8-.2 1.1-.1L52 66c3.4 1 4.4.2 6.9-3.5l14.4-22.2c.7-1.2.9-2.5.5-3.6s-1.4-2-2.7-2.4l-20.6-5.7c-.5-.1-1-.1-1.5-.1v-.1c-3.2-1.9-4.4 1.7-6 3-.6.5-1.4.8-1.7 1.3-.2.5-.1 1-.3 1.4-.6 1.4-2.4 3.6-3.3 4.3-.6.4-1.2.5-1.6 1.1-.3.4-.2 1.1-.4 1.6-.5 1.2-2.1 3.3-3.2 4.4-.4.4-1 .6-1.3 1.1-.3.4-.2 1.1-.4 1.6-.7 1.3-2.2 3.2-3.4 4.3-.6.6-1.3.9-1.6 1.5-.1.3 0 .7-.2 1.1-.2.6-.5 1.1-.7 1.7-.7.9-1 2.1-.9 3.4.2 3.1 2.5 6 5.3 6.8l25 7c2.3.6 5.2-.5 6.6-2.5l14.4-22.2c.7-1.1.9-2.4.5-3.6zm-28.9-7.9l1.1-1.6c.3-.4.9-.7 1.4-.5l16.5 4.6c.5.1.7.6.4 1l-1.1 1.6c-.3.4-.9.7-1.4.5l-16.5-4.6c-.5-.2-.7-.6-.4-1zM42.7 44l1.1-1.6c.3-.4.9-.7 1.4-.5l16.5 4.6c.5.1.7.6.4 1L60.9 49c-.3.4-.9.7-1.4.5L43.1 45c-.5-.1-.7-.6-.4-1z',\n    ],\n    '#963'\n  ),\n  'markup': new SvgIcon(\n    [\n      'M21.5 48.3l16.2-14v7.1l-11 9.2v.1l11 9.2V67L21.5 53v-4.7zm30.6-17.6h4.3L48 71.3h-4.2l8.3-40.6zM62.3 60l11-9.2v-.1l-11-9.2v-7.1l16.2 14v4.9l-16.2 14V60z',\n    ] /* no color? */\n  ),\n  'script': new SvgIcon(\n    [\n      'M42.3 44.2h15.4V48H42.3v-3.8zm0 7.7h15.4v3.8H42.3v-3.8zm0 7.7h15.4v3.8H42.3v-3.8zM69.2 25H38.5c-4.2 0-7.7 3.4-7.7 7.7v34.6h-7.7c0 4.2 3.4 7.7 7.7 7.7h30.8c4.2 0 7.7-3.4 7.7-7.7V36.5H77v-3.8c-.1-4.3-3.5-7.7-7.8-7.7zm-3.8 41.6c0 2.5-2 4.5-4.5 4.5H32.7c1.9-1.3 1.9-3.8 1.9-3.8V32.7c0-2.1 1.7-3.8 3.8-3.8s3.8 1.7 3.8 3.8v3.8h23.1v30.1zM46.2 32.7v-3.8h23.1c3.5 0 3.8 2.2 3.8 3.8H46.2z',\n    ] /* no color? */\n  ),\n  'disc': new SvgIcon(\n    [\n      'M46.9 50c0 .8.3 1.6.9 2.2 1.2 1.2 3.2 1.2 4.4 0 .6-.6.9-1.4.9-2.2 0-.8-.3-1.6-.9-2.2-.6-.6-1.4-.9-2.2-.9-.8 0-1.6.3-2.2.9-.6.6-.9 1.4-.9 2.2z',\n      'M32.3 32.3c-9.8 9.8-9.8 25.6 0 35.4 9.8 9.8 25.6 9.8 35.4 0 9.8-9.8 9.8-25.6 0-35.4-9.8-9.7-25.6-9.7-35.4 0zm37 28.2c-.9 1.7-2.1 3.2-3.5 4.6-1.4 1.4-3 2.6-4.6 3.5l-5.8-11.1s.5-.2 1.6-1.2c1.1-1.1 1.3-1.6 1.3-1.6l11 5.8zM54.4 45.6c1.2 1.2 1.8 2.8 1.8 4.4 0 1.6-.6 3.2-1.8 4.4-2.4 2.4-6.4 2.4-8.8 0-1.2-1.2-1.8-2.8-1.8-4.4 0-1.6.6-3.2 1.8-4.4a6.1 6.1 0 0 1 8.8 0zm-8.5-4.4s-1.2.7-2.2 1.8c-.9 1-1 1.2-1.3 1.7l-11-5.9c.9-1.7 2.1-3.2 3.5-4.6 1.4-1.4 3-2.6 4.6-3.5l6.4 10.5z',\n    ],\n    '#c96'\n  ),\n  'text': new SvgIcon(\n    ['M69.4 28.6v5.5H21.5v-5.5M30.6 41h47.9v5.6H30.6zm-9.1 12.4h47.9V59H21.5zm9.1 12.5h47.9v5.6H30.6z'],\n    '#6b533b'\n  ),\n  'database': new SvgIcon(\n    [\n      'M48.1 75.5c-6.5-.3-12.3-2.3-15.4-5.4-.9-.9-1.8-2.1-2.2-2.9l-.3-.5v-6.1c0-6 0-6.1.1-5.6.3 1.3 1.1 2.7 2.3 3.7.8.7 2.5 1.8 3.8 2.5 2.4 1.2 5.2 2 8.4 2.5 1.9.3 2.6.3 5.3.3s3.4 0 5.3-.3c3.1-.5 6-1.3 8.3-2.5 1.4-.7 3-1.7 3.8-2.5 1.1-1 2-2.5 2.3-3.8.1-.5.1-.4.1 5.5v6l-.3.6c-1 1.9-2.6 3.6-4.7 4.8-4.3 2.7-10.5 4-16.8 3.7z',\n      'M48.1 60.4c-5.7-.3-11-1.9-14.3-4.4-.7-.6-1.8-1.6-2.3-2.2-.4-.6-.8-1.2-1.1-1.8l-.3-.5v-6c0-5.9 0-6 .1-5.5.2.9.7 2 1.5 2.9.4.5 1.1 1.2 1.5 1.4.1.1.5.3.7.5 2.7 1.9 6.5 3.3 10.8 3.9 1.9.3 2.6.3 5.3.3s3.4 0 5.3-.3c3.1-.5 6-1.3 8.4-2.5 1.4-.7 3-1.8 3.9-2.5 1.1-1 2-2.4 2.2-3.7.1-.5.1-.4.1 5.5v5.9l-.4.8c-.7 1.2-1.1 1.8-1.9 2.7-.8.8-1.6 1.5-2.7 2.1-4.3 2.4-10.5 3.7-16.8 3.4z',\n      'M47.7 45.4c-3.8-.3-6.8-.9-9.6-2-3.4-1.3-5.8-3.1-7.1-5.2-.3-.4-.5-1-.7-1.6-.2-.6-.3-2-.1-2.7.9-4.3 6.6-7.9 14.5-9 1.9-.3 2.6-.3 5.3-.3s3.4 0 5.3.3c3.1.5 6 1.3 8.4 2.5 3.5 1.7 5.6 4 6.1 6.5.1.7.1 2.1-.1 2.7-.4 1.3-1 2.2-2 3.2-2.8 2.9-7.9 4.9-14.1 5.6-.9-.1-5.1 0-5.9 0z',\n    ],\n    '#a03537'\n  ),\n  'pdf': new SvgIcon(\n    [\n      'M46.2 21.8c-3.5 0-6.3 2.9-6.3 6.3 0 4.3 2.4 9.6 4.9 14.7-2 6.1-4.1 12.7-7 18.2-5.8 2.3-11 4-14 6.6l-.2.2c-1.1 1.2-1.8 2.7-1.8 4.4 0 3.5 2.9 6.3 6.3 6.3 1.7 0 3.4-.6 4.4-1.8 0 0 .2 0 .2-.2 2.3-2.7 5-7.8 7.5-12.2 5.5-2.1 11.5-4.4 16.9-5.8 4.1 3.4 10.1 5.5 15 5.5 3.5 0 6.3-2.9 6.3-6.3 0-3.5-2.9-6.3-6.3-6.3-4 0-9.6 1.4-13.9 2.9-3.5-3.4-6.7-7.5-9.2-11.9C50.6 37 52.6 32 52.6 28c-.2-3.5-2.9-6.2-6.4-6.2zm0 3.6c1.4 0 2.4 1.1 2.4 2.4 0 1.8-1.1 5.3-2.1 9-1.5-3.7-2.9-7.2-2.9-9 .1-1.2 1.2-2.4 2.6-2.4zm1.1 21.5c1.8 3.1 4.1 5.8 6.6 8.2-3.7 1.1-7.3 2.3-11 3.7 1.8-3.8 3.1-7.9 4.4-11.9zM72 55c1.4 0 2.4 1.1 2.4 2.4 0 1.4-1.1 2.4-2.4 2.4-2.9 0-6.9-1.2-10.1-3.1C65.6 56 69.7 55 72 55zM34.6 66.2c-1.8 3.2-3.5 6.1-4.7 7.6-.5.5-.9.6-1.7.6-1.4 0-2.4-1.1-2.4-2.4 0-.6.3-1.4.6-1.7 1.3-1.2 4.5-2.6 8.2-4.1z',\n    ],\n    '#c11e07'\n  ),\n  'sheet': new SvgIcon(\n    [\n      'M62.1 30.9h14.1v9.4H62.1zm0 14.5h14.1v9.4H62.1zm0 14.3h14.1v9.4H62.1zm-19.2 0H57v9.4H42.9zm-19 0H38v9.4H23.9zm19.2-14.2h14.1v9.4H43.1zm-19.2 0H38v9.4H23.9zm19.2-14.6h14.1v9.4H43.1zm-19.2 0H38v9.4H23.9z',\n    ],\n    '#30723f'\n  ),\n  'presentation': new SvgIcon(\n    [\n      'M 73.319289,26.32707 H 26.61477 c -2.335226,0 -4.258353,1.917194 -4.258353,4.245215 v 29.853446 c 0,2.328021 1.923127,4.245215 4.258353,4.245215 h 19.506006 l -1.923128,7.257947 h -2.197859 c -0.961564,0 -1.648395,0.684712 -1.648395,1.643309 0,0.958597 0.686831,1.643309 1.648395,1.643309 h 15.797117 c 0.961563,0 1.648394,-0.684712 1.648394,-1.643309 0,-0.958597 -0.686831,-1.643309 -1.648394,-1.643309 H 55.46168 l -1.923128,-7.39489 h 19.780737 c 2.335226,0 4.258353,-1.917193 4.258353,-4.245214 V 30.572285 c 0,-2.328021 -1.923127,-4.245215 -4.258353,-4.245215 z m 0.412099,34.372546 H 26.202672 V 30.2984 h 47.39135 z',\n      'm 38.428266,48.511741 h 3.846255 v 7.668775 h -3.846255 z m 6.456214,-2.464963 h 3.846254 V 56.180516 H 44.88448 Z m 6.318846,-2.601906 h 3.846255 v 12.735644 h -3.846255 z m 6.318847,-2.464964 h 3.846255 v 15.200608 h -3.846255 z m -0.274732,-5.614639 -6.730946,3.697445 -4.945184,-1.643308 -8.379341,4.519099 1.236296,1.369424 7.417777,-3.834387 4.945185,1.643309 7.692509,-4.245215 1.236296,1.369424 2.88469,-4.792984 -6.593578,0.410827 z',\n    ],\n    '#c24f32'\n  ),\n  'font': new SvgIcon(\n    [\n      'M40.4 56.2H28.7l-1.4 3.1c-.5 1-.7 1.9-.7 2.6 0 .9.4 1.6 1.1 2 .4.3 1.5.4 3.2.6v.9H20v-.9c1.2-.2 2.2-.6 2.9-1.4.8-.8 1.7-2.4 2.8-4.8l11.8-25.6h.5l12 26.2c1.1 2.5 2.1 4.1 2.8 4.7.6.5 1.3.8 2.3.9v.9h-16v-.9h.7c1.3 0 2.2-.2 2.7-.5.4-.3.5-.6.5-1.1 0-.3 0-.6-.1-.9 0-.1-.3-.7-.7-1.8l-1.8-4zm-.8-1.8l-4.9-11-5.1 11h10z',\n      'M80 44.2l-4.7 15.7-.5 1.9c0 .2-.1.4-.1.5 0 .2.1.4.2.5.1.2.3.2.4.2.3 0 .8-.3 1.4-.8.2-.2.8-.9 1.8-2.2l.9.4c-1.2 2-2.4 3.5-3.7 4.5-1.3.9-2.7 1.4-4.2 1.4-.9 0-1.6-.2-2.1-.7-.5-.5-.7-1-.7-1.8 0-.6.3-1.8.8-3.4l.6-1.9c-1.9 3.1-3.7 5.4-5.4 6.7-1 .8-2.1 1.1-3.2 1.1-1.5 0-2.6-.6-3.2-1.8-.7-1.2-1-2.5-1-4 0-2.2.7-4.8 2.1-7.6 1.4-2.9 3.2-5.2 5.5-6.9 1.9-1.4 3.6-2.2 5.3-2.2.9 0 1.6.3 2.2.8.6.5 1 1.4 1.2 2.8l.9-2.9 5.5-.3zm-7.8 4.5c0-1.3-.2-2.2-.6-2.8-.3-.4-.7-.6-1.2-.6s-1 .2-1.6.7c-1.1 1-2.3 3-3.5 5.9-1.3 3-1.9 5.6-1.9 7.7 0 .8.1 1.4.4 1.8.3.4.6.6.9.6.7 0 1.5-.4 2.2-1.2 1.1-1.2 2-2.6 2.9-4.3 1.6-2.9 2.4-5.5 2.4-7.8z',\n    ],\n    '#7291a1'\n  ),\n  'vue': new SvgIcon(\n    [\n      'M 66.425365,28.281905 H 56.751974 L 49.707631,39.427061 43.669624,28.281905 H 21.530262 L 49.707631,76.54823 77.885006,28.281905 Z m -37.888497,4.025337 h 6.767604 L 49.707631,57.239179 64.098226,32.307242 h 6.767597 L 49.707631,68.560446 Z',\n    ],\n    '#41B883'\n  ),\n  'other': new SvgIcon(\n    [\n      'M71 36.3L57.8 23.1c-.4-.4-.9-.6-1.4-.6h-26c-1.1 0-2 .9-2 2v51.1c0 1.1.9 2 2 2h39.3c1.1 0 2-.9 2-2V37.7c-.1-.5-.3-1-.7-1.4zm-3.9 2.3H55.5V27l11.6 11.6zm.1 34.5H32.8V26.9h18.5v13.3c0 1.4 1.2 2.6 2.6 2.6h13.3v30.3z',\n    ] /* no color? */\n  ),\n  // system icons\n  'system-close': new SvgIcon(\n    ['M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z'],\n    undefined,\n    '0 0 24 24'\n  ),\n  'system-file-preview-new': new SvgIcon(\n    [\n      'M745,353c-5.6,0-11.3,0.2-17.2,0.7C687.4,237.3,577.8,157,451,157c-162.1,0-294,131.9-294,294c0,2.1,0,4.1,0,6.2C72.6,479,10,555.8,10,647c0,108.1,87.9,196,196,196h245V618.3l-63.4,63.4c-9.6,9.6-22.1,14.4-34.6,14.4s-25.1-4.8-34.6-14.4c-19.2-19.2-19.2-50.1,0-69.3l147-147c4.6-4.6,9.9-8.1,16-10.6c12-4.9,25.5-4.9,37.4,0c6,2.5,11.4,6.1,16,10.6l147,147c19.2,19.2,19.2,50.1,0,69.3c-9.6,9.6-22.1,14.4-34.6,14.4s-25.1-4.8-34.6-14.4L549,618.3V843h196c135.1,0,245-109.9,245-245S880.1,353,745,353z',\n    ],\n    undefined,\n    '0 0 1000 1000'\n  ),\n  // system icons\n  'system-sortable-handle': new SvgIcon(['M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z'], undefined, '0 0 24 24'),\n  'system-file-av-play': new SvgIcon(\n    ['M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm-4 29V15l12 9-12 9z'],\n    undefined,\n    '0 0 48 48'\n  ),\n  // M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm-4 29V15l12 9-12 9z\n  'system-file-name-edit': new SvgIcon(\n    [\n      'M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z',\n    ],\n    undefined,\n    '0 0 24 24'\n  ),\n};\n\nfor (const category in icons) {\n  if (icons.hasOwnProperty(category)) {\n    (icons as any)[category].category = category;\n  }\n}\n\nexport default icons;\n\nexport const extensionsMap: any = {};\n\nfor (const cat in extensions) {\n  if (extensions.hasOwnProperty(cat)) {\n    for (const ext of (extensions as any)[cat]) {\n      extensionsMap[ext] = cat;\n    }\n  }\n}\n\nexport function getIconByName(name: string): SvgIcon {\n  const svgIcon = (icons as any)[name] || icons.other;\n  return svgIcon;\n}\n\nexport function getIconFromExt(ext: string): SvgIcon {\n  ext = ext.toLowerCase();\n  const cat = extensionsMap[ext];\n  return getIconByName(cat);\n}\n","<template>\n  <svg :viewBox=\"viewBoxComputed\">\n    <template v-for=\"(d, index) in icon.paths\">\n      <path v-if=\"d\" :key=\"index\" :d=\"d\" />\n    </template>\n  </svg>\n</template>\n<script lang=\"ts\">\nimport {getIconByName, getIconFromExt, SvgIcon} from '../lib/icons'\nimport {defineComponent} from 'vue'\n\nexport default /* #__PURE__ */ defineComponent({\n  name: 'VueFileIcon',\n  props: {\n    ext: {type: String, required: false},\n    name: {type: String, required: false},\n    viewBox: {type: String, required: false},\n  },\n  computed: {\n    viewBoxComputed(): string {\n      if (!this.viewBox && this.icon && this.icon.viewBox) {\n        return this.icon.viewBox\n      }\n      return this.viewBox ? this.viewBox : '0 0 100 100'\n    },\n    icon(): SvgIcon {\n      if (this.name) {\n        return getIconByName(this.name)\n      }\n      const svgIcon = getIconFromExt(this.ext ? this.ext : '')\n      return svgIcon\n    },\n  },\n})\n</script>\n<style></style>\n","import {FileAgentFile} from './interfaces'\n\nexport function getFilesFromDroppedItems(\n  dataTransfer: DataTransfer\n): Promise<FileAgentFile[] | FileList> {\n  return new Promise((resolve) => {\n    if (!includesFolder(dataTransfer)) {\n      return resolve(dataTransfer.files)\n    }\n\n    const files: FileAgentFile[] = []\n    const folderReadQueue = []\n    // tslint:disable-next-line\n    for (let i = 0; i < dataTransfer.items.length; i++) {\n      const item = dataTransfer.items[i]\n      if (item.kind !== 'file') {\n        continue\n      }\n      const fileSystemEntries = getEntries(item)\n      if (fileSystemEntries) {\n        folderReadQueue.push(fileSystemEntries)\n      } else {\n        const file = item.getAsFile()\n        if (file) {\n          files.push(file as FileAgentFile)\n        }\n      }\n    }\n    Promise.all(folderReadQueue).then((filesInFolders) => {\n      resolve(files.concat(...filesInFolders))\n    })\n  })\n}\n\nfunction getEntries(entry: any): Promise<FileAgentFile[]> | undefined {\n  // convert DataTransferItem to FileSystemEntry first if necessary\n  if (entry.getAsEntry) {\n    return getEntries(entry.getAsEntry())\n  }\n  if (entry.webkitGetAsEntry) {\n    return getEntries(entry.webkitGetAsEntry())\n  }\n  // return if item is from a browser that does not support webkitGetAsEntry\n  if (entry.getAsFile) {\n    return\n  }\n  // Processing directories with more than 100 files:\n  // https://github.com/lian-yue/vue-upload-component/commit/9c9d8aafbcef005a2cc598454383ec65205d61ee\n  return new Promise((resolve) => {\n    let directory = ''\n\n    if (entry.isFile) {\n      entry.file((file: File) => resolve([file as FileAgentFile]))\n      return\n    }\n    if (entry.isDirectory) {\n      directory = entry.fullPath\n\n      const files: FileAgentFile[] = []\n      const entryReader = entry.createReader()\n      const readEntries = () => {\n        entryReader.readEntries((entries: any[]) => {\n          const iterateEntry = (i: number) => {\n            if (!entries[i] && i === 0) {\n              return resolve(files as FileAgentFile[])\n            }\n            if (!entries[i]) {\n              return readEntries()\n            }\n            ;(getEntries(entries[i]) as Promise<FileAgentFile[]>).then(\n              (entryFiles: FileAgentFile[]) => {\n                for (const entryFile of entryFiles) {\n                  if (!entryFile.fullPath) {\n                    entryFile.fullPath = directory\n                  }\n                }\n                files.push(...entryFiles)\n\n                iterateEntry(i + 1)\n              }\n            )\n          }\n          iterateEntry(0)\n        })\n      }\n      readEntries()\n    }\n    if (!entry.isFile && !entry.isDirectory) {\n      resolve([])\n    }\n  })\n}\n\nfunction includesFolder(transfer: DataTransfer): boolean {\n  if (!transfer.files.length) {\n    return true // if dropping only folders, no files will exist\n  }\n\n  // Loop through the dropped items and log their data\n  for (const item of transfer.items) {\n    if (item.webkitGetAsEntry != null) {\n      const entry = item.webkitGetAsEntry()\n\n      if (entry && entry.isDirectory) {\n        return true\n      }\n    }\n  }\n\n  const files: FileList = transfer.files\n\n  // tslint:disable-next-line\n  for (let i = 0; i < files.length; i++) {\n    // A folder has no type and has a size that is a multiple of 4096\n    if (!files[i].type && files[i].size % 4096 === 0) {\n      return true\n    }\n  }\n  return false\n}\n","import { getFilesFromDroppedItems } from './drop-handler';\n\nexport type RGBA = [number, number, number, number];\nexport interface VideoThumbnail {\n  url: string;\n  color?: RGBA;\n  width: number;\n  height: number;\n}\nexport interface ImageThumbnail {\n  image: HTMLImageElement;\n  url: string;\n  color?: RGBA;\n}\n\nenum ImageOrientation {\n  NORMAL = 1,\n  UPSIDE_DOWN = 6,\n}\n\nclass Utils {\n  public arrayMove(arr: any[], previousIndex: number, newIndex: number): any[] {\n    // https://github.com/Jexordexan/vue-slicksort/blob/master/src/utils.js\n    const array = arr.slice(0);\n    if (newIndex >= array.length) {\n      let k = newIndex - array.length;\n      while (k-- + 1) {\n        array.push(undefined);\n      }\n    }\n    array.splice(newIndex, 0, array.splice(previousIndex, 1)[0]);\n    return array;\n  }\n\n  public getAverageColor(arr: Uint8ClampedArray): RGBA | undefined {\n    const bytesPerPixel = 4;\n    const arrLength = arr.length;\n    if (arrLength < bytesPerPixel) {\n      return;\n    }\n    const step = 5;\n    const len = arrLength - (arrLength % bytesPerPixel);\n    const preparedStep = (step || 1) * bytesPerPixel;\n\n    let redTotal = 0;\n    let greenTotal = 0;\n    let blueTotal = 0;\n    let alphaTotal = 0;\n    let count = 0;\n\n    for (let i = 0; i < len; i += preparedStep) {\n      const alpha = arr[i + 3];\n      const red = arr[i] * alpha;\n      const green = arr[i + 1] * alpha;\n      const blue = arr[i + 2] * alpha;\n\n      redTotal += red;\n      greenTotal += green;\n      blueTotal += blue;\n      alphaTotal += alpha;\n      count++;\n    }\n\n    return alphaTotal\n      ? [\n          Math.round(redTotal / alphaTotal),\n          Math.round(greenTotal / alphaTotal),\n          Math.round(blueTotal / alphaTotal),\n          Math.round(alphaTotal / count),\n        ]\n      : [0, 0, 0, 0];\n  }\n\n  public createVideoThumbnail(\n    video: HTMLVideoElement,\n    canvas: HTMLCanvasElement,\n    thumbnailSize: number,\n    calculateAverageColor?: boolean,\n    withCredentials?: boolean\n  ): Promise<VideoThumbnail> {\n    if (withCredentials) {\n    }\n    video.setAttribute('crossOrigin', withCredentials ? 'use-credentials' : 'anonymous'); // fix cross origin issue\n    return new Promise((resolve, reject) => {\n      let loadedmetadata = false;\n      let loadeddata = false;\n      const tryGetThumbnail = () => {\n        if (!(loadedmetadata && loadeddata)) {\n          return;\n        }\n        const context = canvas.getContext('2d') as CanvasRenderingContext2D;\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n        let color: RGBA | undefined;\n        if (calculateAverageColor) {\n          const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n          color = this.getAverageColor(imageData.data);\n        }\n        const url = canvas.toDataURL();\n        resolve({\n          url,\n          color,\n          width: video.videoWidth,\n          height: video.videoHeight,\n        });\n      };\n      // Load metadata of the video to get video duration and dimensions\n      video.addEventListener('loadedmetadata', () => {\n        // var video_duration = video.duration;\n        canvas.width = thumbnailSize;\n        canvas.height = (canvas.width / video.videoWidth) * video.videoHeight;\n        video.currentTime = 1; // video time\n        loadedmetadata = true;\n        tryGetThumbnail();\n      });\n\n      video.addEventListener('loadeddata', () => {\n        loadeddata = true;\n        tryGetThumbnail();\n      });\n    });\n  }\n\n  public getDataURL(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        if (!(event.target && event.target.result)) {\n          return resolve('');\n        }\n        resolve(event.target.result as string);\n      };\n      reader.readAsDataURL(file);\n    });\n  }\n\n  public getImageOrientationFromArrayBuffer(buffer: ArrayBuffer): number {\n    // -2: not jpeg\n    // -1: not defined\n    const view = new DataView(buffer);\n    if (view.getUint16(0, false) !== 0xffd8) {\n      return -2;\n    }\n    const length = view.byteLength;\n    let offset = 2;\n    while (offset < length) {\n      if (view.getUint16(offset + 2, false) <= 8) {\n        return -1;\n      }\n      const marker = view.getUint16(offset, false);\n      offset += 2;\n      if (marker === 0xffe1) {\n        if (view.getUint32((offset += 2), false) !== 0x45786966) {\n          return -1;\n        }\n        const little = view.getUint16((offset += 6), false) === 0x4949;\n        offset += view.getUint32(offset + 4, little);\n        const tags = view.getUint16(offset, little);\n        offset += 2;\n        for (let i = 0; i < tags; i++) {\n          if (view.getUint16(offset + i * 12, little) === 0x0112) {\n            return view.getUint16(offset + i * 12 + 8, little);\n          }\n        }\n        // tslint:disable-next-line\n      } else if ((marker & 0xff00) !== 0xff00) {\n        break;\n      } else {\n        offset += view.getUint16(offset, false);\n      }\n    }\n    return -1;\n  }\n\n  public getImageOrientation(file: File): Promise<number> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      if (!reader.readAsArrayBuffer) {\n        return resolve(-3);\n      }\n      reader.onload = (event) => {\n        if (!(event.target && event.target.result)) {\n          return resolve(-3);\n        }\n        resolve(this.getImageOrientationFromArrayBuffer(event.target.result as ArrayBuffer));\n      };\n      // https://stackoverflow.com/questions/3248946/what-is-the-maximum-size-of-jpeg-metadata\n      // https://twitter.com/jaffathecake/status/1085443592678752256\n      // reader.readAsArrayBuffer(file);\n      reader.readAsArrayBuffer(file.slice(0, 65536));\n    });\n  }\n\n  public rotateCanvas(\n    srcOrientation: number,\n    canvas: HTMLCanvasElement,\n    ctx: CanvasRenderingContext2D,\n    width: number,\n    height: number\n  ) {\n    // set proper canvas dimensions before transform & export\n    if (4 < srcOrientation && srcOrientation < 9) {\n      canvas.width = height;\n      canvas.height = width;\n    } else {\n      canvas.width = width;\n      canvas.height = height;\n    }\n\n    // transform context before drawing image\n    switch (srcOrientation) {\n      case 2:\n        ctx.transform(-1, 0, 0, 1, width, 0);\n        break;\n      case 3:\n        ctx.transform(-1, 0, 0, -1, width, height);\n        break;\n      case 4:\n        ctx.transform(1, 0, 0, -1, 0, height);\n        break;\n      case 5:\n        ctx.transform(0, 1, 1, 0, 0, 0);\n        break;\n      case 6:\n        ctx.transform(0, 1, -1, 0, height, 0);\n        break;\n      case 7:\n        ctx.transform(0, -1, -1, 0, height, width);\n        break;\n      case 8:\n        ctx.transform(0, -1, 1, 0, 0, width);\n        break;\n      default:\n        break;\n    }\n  }\n\n  public getImageResized(\n    image: HTMLImageElement,\n    widthLimit: number,\n    heightLimit?: number,\n    orientation?: number,\n    calculateAverageColor?: boolean\n  ): ImageThumbnail | null {\n    let width = image.width;\n    let height = image.height;\n    const thumbnailSize = widthLimit;\n    if (widthLimit && heightLimit) {\n      width = widthLimit;\n      height = heightLimit;\n    } else {\n      if (width > height) {\n        if (width > thumbnailSize) {\n          height *= thumbnailSize / width;\n          width = thumbnailSize;\n        }\n      } else {\n        if (height > thumbnailSize) {\n          width *= thumbnailSize / height;\n          height = thumbnailSize;\n        }\n      }\n    }\n\n    width = Math.floor(width);\n    height = Math.floor(height);\n\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    if (!context) {\n      return null;\n    }\n\n    canvas.width = width;\n    canvas.height = height;\n\n    if (orientation !== undefined) {\n      this.rotateCanvas(orientation, canvas, context, width, height);\n    }\n\n    context.drawImage(image, 0, 0, width, height);\n    let avgColor = null;\n    try {\n      let rgba: RGBA | undefined;\n      if (calculateAverageColor) {\n        const imageData = context.getImageData(0, 0, width, height);\n        rgba = this.getAverageColor(imageData.data);\n      }\n      if (rgba) {\n        avgColor = rgba;\n      }\n    } catch (e) {\n      /* security error, img on diff domain */\n    }\n    return {\n      image,\n      url: canvas.toDataURL('image/png'),\n      color: avgColor,\n    } as ImageThumbnail;\n  }\n\n  public resizeImageUrl(\n    image: HTMLImageElement,\n    url: string,\n    thumbnailSize: number,\n    calculateAverageColor?: boolean\n  ): Promise<ImageThumbnail | null> {\n    return new Promise((resolve, reject) => {\n      image.onload = () => {\n        if (!calculateAverageColor) {\n          resolve({\n            image,\n            url,\n            color: undefined,\n          } as ImageThumbnail);\n          return;\n        }\n        const resized = this.getImageResized(image, thumbnailSize, undefined, undefined, calculateAverageColor);\n        if (resized) {\n          resized.url = url;\n        }\n        resolve(resized);\n      };\n      image.onerror = () => {\n        reject('Image loading failed: ' + url);\n      };\n      image.src = url;\n    });\n  }\n\n  public resizeImageFile(\n    image: HTMLImageElement,\n    file: File,\n    thumbnailSize: number,\n    calculateAverageColor?: boolean\n  ): Promise<ImageThumbnail | null> {\n    return new Promise((resolve, reject) => {\n      if (file.type.indexOf('image') === -1) {\n        reject(new Error('Not an image'));\n        return;\n      }\n      const createObjectURL = (window.URL || window.webkitURL || {}).createObjectURL;\n      const revokeObjectURL = (window.URL || window.webkitURL || {}).revokeObjectURL;\n      let shouldRevoke = false;\n      const orientationPromise = this.getImageOrientation(file);\n      image.onload = () => {\n        orientationPromise.then((orientation) => {\n          const resized = this.getImageResized(image, thumbnailSize, undefined, orientation, calculateAverageColor);\n          if (shouldRevoke) {\n            revokeObjectURL(image.src);\n          }\n          resolve(resized);\n        });\n      };\n      if (!(file instanceof File)) {\n        return reject('Invalid file object. Use url or a valid instance of File class');\n      }\n      if (typeof createObjectURL === 'function' && typeof revokeObjectURL === 'function') {\n        shouldRevoke = true;\n        image.src = createObjectURL(file);\n        return;\n      }\n      this.getDataURL(file).then((dataUrl) => {\n        image.src = dataUrl;\n      });\n    });\n  }\n\n  public resizeImage(\n    thumbnailSize: number,\n    file?: File,\n    url?: string,\n    calculateAverageColor?: boolean,\n    withCredentials?: boolean\n  ): Promise<ImageThumbnail | null> {\n    const image = new Image();\n    image.setAttribute('crossOrigin', withCredentials ? 'use-credentials' : 'anonymous');\n    return url\n      ? this.resizeImageUrl(image, url, thumbnailSize, calculateAverageColor)\n      : this.resizeImageFile(image, file as File, thumbnailSize, calculateAverageColor);\n  }\n\n  public getSizeFormatted(bytes: number) {\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) {\n      return '0 B';\n    }\n    let i = Math.floor(Math.log(bytes) / Math.log(1024));\n    i = parseInt('' + i, 10);\n    return Math.round(bytes / Math.pow(1024, i)) + ' ' + sizes[i];\n  }\n\n  public getSizeParsed(size: string): number {\n    size = ('' + size).toUpperCase();\n    const matches = size.match(/([\\d|.]+?)\\s*?([A-Z]+)/);\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n    if (!matches) {\n      return parseFloat(size);\n    }\n    const i = sizes.indexOf(matches[2]);\n    if (i === -1) {\n      return parseFloat(size);\n    }\n    return parseFloat(matches[1]) * Math.pow(1024, i);\n  }\n\n  public getColorForText(text: string): string {\n    const getHashCode = (value: string) => {\n      let hash = 0;\n      if (value.length === 0) {\n        return hash;\n      }\n      for (let i = 0; i < value.length; i++) {\n        // tslint:disable-next-line\n        hash = value.charCodeAt(i) + ((hash << 5) - hash);\n        // tslint:disable-next-line\n        hash = hash & hash; // Convert to 32bit integer\n      }\n      return hash;\n    };\n    const intToHSL = (value: number) => {\n      const h = value % 360;\n      const s = value % 100;\n      const l = 50;\n      return 'hsl(' + h + ',' + s + '%,' + l + '%, 0.75)';\n    };\n    return intToHSL(getHashCode(text.toLowerCase()));\n  }\n\n  public validateType(file: File, accept?: string): boolean {\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept\n    // https://gitlab.com/meno/dropzone/blob/master/src/dropzone.js#L2511\n    if (!accept) {\n      return true;\n    } // If there are no accepted mime types, it's OK\n    const acceptedFiles = accept.split(',');\n\n    const mimeType = file.type;\n    const baseMimeType = mimeType.replace(/\\/.*$/, '');\n\n    for (let validType of acceptedFiles) {\n      validType = validType.trim();\n      if (validType.charAt(0) === '.') {\n        // extension\n        if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {\n          return true;\n        }\n      } else if (/\\/\\*$/.test(validType)) {\n        // This is something like a image/* mime type\n        if (baseMimeType === validType.replace(/\\/.*$/, '')) {\n          return true;\n        }\n      } else {\n        if (mimeType === validType) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public validateSize(file: File, maxSize?: string): boolean {\n    if (!maxSize) {\n      return true;\n    }\n    const bytes = this.getSizeParsed(maxSize);\n    return file.size <= bytes;\n  }\n\n  public getFilesFromDroppedItems(dataTransfer: DataTransfer) {\n    return getFilesFromDroppedItems(dataTransfer);\n  }\n}\n\nexport default new Utils();\n","<template>\n  <div\n    :class=\"[\n      'file-preview-wrapper-' + fileRecord.ext(),\n      fileRecord.isImage() ? 'file-preview-wrapper-image' : 'file-preview-wrapper-other',\n      'file-category-' + fileRecord.icon().category,\n      {'file-is-playing-av': fileRecord.isPlayingAv},\n      {'is-deletable': deletable === true},\n      {'is-editable': editable === true},\n      {'is-edit-input-focused': isEditInputFocused},\n      {'has-error': fileRecord.error},\n    ]\"\n  >\n    <div\n      v-if=\"fileRecord.isPlayableAudio() || fileRecord.isPlayableVideo()\"\n      ref=\"wrapper\"\n      class=\"file-av-wrapper\"\n    >\n      <div class=\"file-av-action\" @click=\"playAv(fileRecord)\">\n        <span class=\"file-av-stop\">\n          <VueFileIcon name=\"system-close\" />\n        </span>\n        <span class=\"file-av-play\">\n          <VueFileIcon name=\"system-file-av-play\" />\n        </span>\n      </div>\n    </div>\n    <span\n      class=\"file-preview\"\n      :class=\"{\n        'image-preview': fileRecord.isImage(),\n        'other-preview': !fileRecord.isImage(),\n        'dark-content': fileRecord.isImage() && fileRecord.isDarkColor(),\n      }\"\n      :style=\"{\n        'background-color': fileRecord.color(),\n      }\"\n    >\n      <span v-if=\"fileRecord.error\" class=\"file-error-wrapper\" @click=\"dismissError()\">\n        <span class=\"file-error-message file-error-message-client\">\n          {{ fileRecord.getErrorMessage(errorText) }}\n        </span>\n      </span>\n      <span class=\"file-preview-overlay\" />\n      <span\n        v-if=\"fileRecord.isImage() || fileRecord.isPlayableVideo()\"\n        class=\"thumbnail\"\n        style=\"position: absolute; top: 0; right: 0; bottom: 0; left: 0; overflow: hidden\"\n      >\n        <a\n          v-if=\"hasLinkableUrl\"\n          :href=\"fileRecord.url()\"\n          target=\"_blank\"\n          :title=\"fileRecord.name()\"\n        >\n          <img class=\"file-preview-img\" :src=\"fileRecord.src()\" />\n        </a>\n        <img v-else class=\"file-preview-img\" :src=\"fileRecord.src()\" />\n      </span>\n      <span class=\"file-ext\">{{ fileRecord.ext() }}</span>\n      <span class=\"file-size\">{{ fileRecord.size() }}</span>\n      <span\n        v-if=\"deletable\"\n        class=\"file-delete\"\n        @click=\"removeFileRecord(fileRecord)\"\n        @touchstart=\"filenameClearPressed()\"\n        @mousedown=\"filenameClearPressed()\"\n      >\n        <VueFileIcon name=\"system-close\" />\n      </span>\n      <span class=\"file-name\" @click=\"editFileName()\">\n        <input\n          v-if=\"editable === true\"\n          ref=\"input\"\n          class=\"file-name-input\"\n          :disabled=\"disabled === true\"\n          type=\"text\"\n          :value=\"fileRecord.name(true)\"\n          @focus=\"editInputFocused()\"\n          @blur=\"editInputBlured()\"\n          @change=\"filenameChanged()\"\n          @input=\"filenameChanged()\"\n          @keyup.enter=\"filenameChanged(true)\"\n          @keyup.esc=\"filenameChanged(false)\"\n        />\n        <span v-if=\"editable === true\" class=\"file-name-edit-icon\">\n          <VueFileIcon name=\"system-file-name-edit\" />\n        </span>\n        <span class=\"file-name-text\">{{ getPathAndName(fileRecord) }}</span>\n      </span>\n      <span\n        v-if=\"fileRecord.dimensions.width && fileRecord.dimensions.height\"\n        class=\"image-dimension\"\n      >\n        <span class=\"image-dimension-width\">{{ fileRecord.dimensions.width }}</span\n        ><span class=\"image-dimension-height\">{{ fileRecord.dimensions.height }}</span>\n      </span>\n      <span\n        v-if=\"fileRecord.hasProgress()\"\n        class=\"file-progress\"\n        :class=\"{\n          'file-progress-full': fileRecord.progress() >= 99.9999,\n          'file-progress-done': fileRecord.progress() >= 100,\n          'has-file-progress': fileRecord.progress() > 0,\n        }\"\n      >\n        <span class=\"file-progress-bar\" :style=\"{width: fileRecord.progress() + '%'}\" />\n      </span>\n      <span class=\"file-icon\">\n        <a\n          v-if=\"hasLinkableUrl\"\n          :href=\"fileRecord.url()\"\n          target=\"_blank\"\n          :title=\"fileRecord.name()\"\n        >\n          <VueFileIcon :ext=\"fileRecord.ext()\" />\n        </a>\n        <VueFileIcon v-else :ext=\"fileRecord.ext()\" />\n      </span>\n    </span>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {defineComponent, PropType} from 'vue'\nimport VueFileIcon from './VueFileIcon.vue'\nimport FileRecord, {ErrorText} from '../lib/file-record'\nimport utils from '../lib/utils'\nimport {FileAgentFile} from '../lib/interfaces'\n\nexport default /* #__PURE__ */ defineComponent({\n  name: 'VueFilePreview',\n  components: {\n    VueFileIcon,\n  },\n  props: {\n    averageColor: Boolean,\n    deletable: Boolean,\n    disabled: Boolean,\n    editable: Boolean,\n    errorText: {\n      type: Object as PropType<ErrorText>,\n      required: false,\n    },\n    linkable: Boolean,\n    thumbnailSize: Number,\n    fileRecord: {\n      type: Object as PropType<FileRecord>,\n      required: true,\n    },\n    withCredentials: Boolean,\n  },\n  emits: ['dismisserror', 'remove', 'rename'],\n  data() {\n    return {\n      isEditInputFocused: false,\n      isEditCancelable: true,\n    }\n  },\n  computed: {\n    hasLinkableUrl(): boolean {\n      if (!this.linkable) {\n        return false\n      }\n      return (\n        !!this.fileRecord.url() &&\n        !this.fileRecord.isPlayableVideo() &&\n        !this.fileRecord.isPlayableAudio()\n      )\n    },\n  },\n  watch: {\n    fileRecord: {\n      handler() {\n        // fileRecord is updated, but the component not redrawn when used inside a loop\n        // -> force update in the meantime\n        this.$forceUpdate()\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    getPathAndName(fileRecord: FileRecord): string {\n      let name = fileRecord.name(false)\n\n      const file = fileRecord.file as FileAgentFile\n\n      if (file.fullPath) {\n        name = `${file.fullPath}/${name}`\n      }\n\n      return name\n    },\n    createThumbnail(fileRecord: FileRecord, video: HTMLVideoElement) {\n      if (fileRecord.videoThumbnail) {\n        video.poster = fileRecord.src()\n        return\n      }\n      const canvas = document.createElement('canvas')\n      utils\n        .createVideoThumbnail(\n          video,\n          canvas,\n          this.fileRecord.thumbnailSize,\n          this.averageColor !== false,\n          this.withCredentials === true\n        )\n        .then((thumbnail) => {\n          fileRecord.imageColor = thumbnail.color\n          fileRecord.videoThumbnail = thumbnail.url\n          fileRecord.dimensions.width = thumbnail.width\n          fileRecord.dimensions.height = thumbnail.height\n          video.poster = fileRecord.src()\n        })\n    },\n    playAv(fileRecord: FileRecord) {\n      if (fileRecord.stopAv) {\n        fileRecord.stopAv()\n        return\n      }\n      const {createObjectURL} = window.URL || window.webkitURL || {}\n      const {revokeObjectURL} = window.URL || window.webkitURL || {}\n\n      const wrapper = this.$refs.wrapper as HTMLElement\n      const player = document.createElement(fileRecord.isAudio() ? 'audio' : 'video')\n      if (player instanceof HTMLVideoElement && fileRecord.isPlayableVideo()) {\n        this.createThumbnail(fileRecord, player)\n      }\n      player.controls = true\n      // player.style.width = this.prvWidth + 'px';\n      wrapper.appendChild(player)\n      const url = (fileRecord.url() as string) || createObjectURL(fileRecord.file)\n      player.src = url\n      player.play()\n      fileRecord.isPlayingAv = true\n      fileRecord.stopAv = () => {\n        // player.src = null;\n        player.src = ''\n        wrapper.removeChild(player)\n        revokeObjectURL(url)\n        fileRecord.isPlayingAv = false\n        fileRecord.stopAv = null\n      }\n    },\n    removeFileRecord(fileRecord: FileRecord) {\n      if (this.clearFilename()) {\n        return\n      }\n      if (this.disabled === true) {\n        return\n      }\n      this.$emit('remove', fileRecord)\n    },\n    editFileName() {\n      if (this.editable !== true) {\n        return\n      }\n      if (!this.$refs.input) {\n        return\n      }\n      ;(this.$refs.input as HTMLInputElement).focus()\n    },\n    editInputFocused() {\n      this.isEditInputFocused = true\n      this.isEditCancelable = true\n    },\n    editInputBlured() {\n      const {fileRecord} = this\n      fileRecord.oldFileName = this.fileRecord.name()\n      const oldFilenameWithoutExt = this.fileRecord.name(true)\n      const {value} = this.$refs.input as HTMLInputElement\n      fileRecord.customName = value\n      const newValueWithoutExt = this.fileRecord.name(true)\n      if (newValueWithoutExt !== oldFilenameWithoutExt) {\n        fileRecord.oldCustomName = oldFilenameWithoutExt\n        this.$emit('rename', fileRecord)\n      }\n      const timeout = 100\n      window.setTimeout(() => {\n        this.$nextTick(() => {\n          if (!this.isEditCancelable) {\n            return\n          }\n          this.isEditInputFocused = false\n        })\n      }, timeout)\n    },\n    filenameChanged(completed?: boolean) {\n      if (completed) {\n        ;(this.$refs.input as HTMLInputElement).blur() // @see editInputBlured method\n      }\n      if (completed === false) {\n        this.clearFilename()\n      }\n    },\n    filenameClearPressed() {\n      if (!(this.editable === true && this.isEditInputFocused)) {\n        return\n      }\n      this.isEditCancelable = false\n    },\n    clearFilename() {\n      if (!(this.editable === true && this.isEditInputFocused)) {\n        return false\n      }\n      ;(this.$refs.input as HTMLInputElement).value = ''\n      this.isEditCancelable = true\n      this.editInputBlured()\n      return true\n    },\n    dismissError() {\n      if (this.fileRecord.error && (this.fileRecord.error.size || this.fileRecord.error.type)) {\n        return\n      }\n\n      this.$emit('dismisserror', this.fileRecord)\n    },\n  },\n})\n</script>\n","<template>\n  <div>\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\nimport FileRecord from '../lib/file-record'\nimport {defineComponent} from 'vue'\n\nexport default /* #__PURE__ */ defineComponent({\n  name: 'VueFileList',\n  props: {\n    list: {type: Array<FileRecord>, required: true},\n    axis: {type: String, required: true},\n    appendTo: {type: String, required: true},\n  },\n})\n</script>\n","<template>\n  <div>\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\nimport {defineComponent} from 'vue'\n\nexport default /* #__PURE__ */ defineComponent({\n  name: 'VueFileListItem',\n  props: {\n    index: Number,\n  },\n})\n</script>\n","import { defineComponent, h } from 'vue';\n\n// Export Sortable Element Component Mixin\nconst ElementMixin = defineComponent({\n    inject: ['manager'],\n    props: {\n        index: {\n            type: Number,\n            required: true,\n        },\n        disabled: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    data() {\n        return {};\n    },\n    watch: {\n        index(newIndex) {\n            if (this.$el && this.$el.sortableInfo) {\n                this.$el.sortableInfo.index = newIndex;\n            }\n        },\n        disabled(isDisabled) {\n            if (isDisabled) {\n                this.removeDraggable();\n            }\n            else {\n                this.setDraggable(this.index);\n            }\n        },\n    },\n    mounted() {\n        const { disabled, index } = this.$props;\n        if (!disabled) {\n            this.setDraggable(index);\n        }\n    },\n    beforeUnmount() {\n        if (!this.disabled)\n            this.removeDraggable();\n    },\n    methods: {\n        setDraggable(index) {\n            const node = this.$el;\n            node.sortableInfo = {\n                index,\n                manager: this.manager,\n            };\n            this.ref = { node };\n            this.manager.add(this.ref);\n        },\n        removeDraggable() {\n            this.manager.remove(this.ref);\n        },\n    },\n});\n\nclass Manager {\n    constructor() {\n        this.refs = [];\n        this.active = null;\n    }\n    add(ref) {\n        if (!this.refs) {\n            this.refs = [];\n        }\n        this.refs.push(ref);\n    }\n    remove(ref) {\n        const index = this.getIndex(ref);\n        if (index !== -1) {\n            this.refs.splice(index, 1);\n        }\n    }\n    isActive() {\n        return !!this.active;\n    }\n    getActive() {\n        return this.refs.find(({ node }) => { var _a, _b; return ((_a = node === null || node === void 0 ? void 0 : node.sortableInfo) === null || _a === void 0 ? void 0 : _a.index) == ((_b = this === null || this === void 0 ? void 0 : this.active) === null || _b === void 0 ? void 0 : _b.index); }) || null;\n    }\n    getIndex(ref) {\n        return this.refs.indexOf(ref);\n    }\n    getRefs() {\n        return this.refs;\n    }\n    getOrderedRefs() {\n        return this.refs.sort((a, b) => {\n            return a.node.sortableInfo.index - b.node.sortableInfo.index;\n        });\n    }\n}\n\nconst isTouch = (e) => {\n    return e.touches != null;\n};\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction hasOwnProperty(obj, prop) {\n    return !!obj && Object.prototype.hasOwnProperty.call(obj, prop);\n}\nfunction arrayMove(arr, previousIndex, newIndex) {\n    const array = arr.slice(0);\n    if (newIndex >= array.length) {\n        let k = newIndex - array.length;\n        while (k-- + 1) {\n            array.push(undefined);\n        }\n    }\n    array.splice(newIndex, 0, array.splice(previousIndex, 1)[0]);\n    return array;\n}\nfunction arrayRemove(arr, previousIndex) {\n    const array = arr.slice(0);\n    if (previousIndex >= array.length)\n        return array;\n    array.splice(previousIndex, 1);\n    return array;\n}\nfunction arrayInsert(arr, newIndex, value) {\n    const array = arr.slice(0);\n    if (newIndex === array.length) {\n        array.push(value);\n    }\n    else {\n        array.splice(newIndex, 0, value);\n    }\n    return array;\n}\nconst events = {\n    start: ['touchstart', 'mousedown'],\n    move: ['touchmove', 'mousemove'],\n    end: ['touchend', 'mouseup'],\n    cancel: ['touchcancel', 'keyup'],\n};\nfunction closest(el, fn) {\n    while (el) {\n        if (fn(el))\n            return el;\n        el = el.parentNode;\n    }\n}\nfunction limit(min, max, value) {\n    if (value < min) {\n        return min;\n    }\n    if (value > max) {\n        return max;\n    }\n    return value;\n}\nfunction getCSSPixelValue(stringValue) {\n    if (stringValue.substr(-2) === 'px') {\n        return parseFloat(stringValue);\n    }\n    return 0;\n}\nfunction getElementMargin(element) {\n    const style = window.getComputedStyle(element);\n    return {\n        top: getCSSPixelValue(style.marginTop),\n        right: getCSSPixelValue(style.marginRight),\n        bottom: getCSSPixelValue(style.marginBottom),\n        left: getCSSPixelValue(style.marginLeft),\n    };\n}\nfunction getPointerOffset(e, reference = 'page') {\n    const x = `${reference}X`;\n    const y = `${reference}Y`;\n    return {\n        x: isTouch(e) ? e.touches[0][x] : e[x],\n        y: isTouch(e) ? e.touches[0][y] : e[y],\n    };\n}\nfunction offsetParents(node) {\n    const nodes = [node];\n    for (; node; node = node.offsetParent) {\n        nodes.unshift(node);\n    }\n    return nodes;\n}\nfunction commonOffsetParent(node1, node2) {\n    const parents1 = offsetParents(node1);\n    const parents2 = offsetParents(node2);\n    if (parents1[0] != parents2[0])\n        throw 'No common ancestor!';\n    for (let i = 0; i < parents1.length; i++) {\n        if (parents1[i] != parents2[i])\n            return parents1[i - 1];\n    }\n}\nfunction getEdgeOffset(node, container, offset = { top: 0, left: 0 }) {\n    // Get the actual offsetTop / offsetLeft value, no matter how deep the node is nested\n    if (node) {\n        const nodeOffset = {\n            top: offset.top + node.offsetTop,\n            left: offset.left + node.offsetLeft,\n        };\n        if (node.offsetParent !== container.offsetParent) {\n            return getEdgeOffset(node.offsetParent, container, nodeOffset);\n        }\n        else {\n            return nodeOffset;\n        }\n    }\n    return { top: 0, left: 0 };\n}\nfunction cloneNode(node) {\n    const fields = node.querySelectorAll('input, textarea, select');\n    const clonedNode = node.cloneNode(true);\n    const clonedFields = [...clonedNode.querySelectorAll('input, textarea, select')]; // Convert NodeList to Array\n    clonedFields.forEach((field, index) => {\n        if (field.type !== 'file' && fields[index]) {\n            field.value = fields[index].value;\n        }\n    });\n    return clonedNode;\n}\nfunction getLockPixelOffsets(lockOffset, width, height) {\n    if (typeof lockOffset == 'string') {\n        lockOffset = +lockOffset;\n    }\n    if (!Array.isArray(lockOffset)) {\n        lockOffset = [lockOffset, lockOffset];\n    }\n    if (lockOffset.length !== 2) {\n        throw new Error(`lockOffset prop of SortableContainer should be a single value or an array of exactly two values. Given ${lockOffset}`);\n    }\n    const [minLockOffset, maxLockOffset] = lockOffset;\n    return [getLockPixelOffset(minLockOffset, width, height), getLockPixelOffset(maxLockOffset, width, height)];\n}\nfunction getLockPixelOffset(lockOffset, width, height) {\n    let offsetX = lockOffset;\n    let offsetY = lockOffset;\n    let unit = 'px';\n    if (typeof lockOffset === 'string') {\n        const match = /^[+-]?\\d*(?:\\.\\d*)?(px|%)$/.exec(lockOffset);\n        if (match === null) {\n            throw new Error(`lockOffset value should be a number or a string of a number followed by \"px\" or \"%\". Given ${lockOffset}`);\n        }\n        offsetX = offsetY = parseFloat(lockOffset);\n        unit = match[1];\n    }\n    if (!isFinite(offsetX) || !isFinite(offsetY)) {\n        throw new Error(`lockOffset value should be a finite. Given ${lockOffset}`);\n    }\n    if (unit === '%') {\n        offsetX = (offsetX * width) / 100;\n        offsetY = (offsetY * height) / 100;\n    }\n    return {\n        x: offsetX,\n        y: offsetY,\n    };\n}\nfunction getDistance(x1, y1, x2, y2) {\n    const x = x1 - x2;\n    const y = y1 - y2;\n    return Math.sqrt(x * x + y * y);\n}\nfunction getRectCenter(clientRect) {\n    return {\n        x: clientRect.left + clientRect.width / 2,\n        y: clientRect.top + clientRect.height / 2,\n    };\n}\nfunction resetTransform(nodes = []) {\n    for (let i = 0, len = nodes.length; i < len; i++) {\n        const node = nodes[i];\n        const el = node.node;\n        if (!el)\n            return;\n        // Clear the cached offsetTop / offsetLeft value\n        node.edgeOffset = null;\n        // Remove the transforms / transitions\n        setTransform(el);\n    }\n}\nfunction setTransform(el, transform = '', duration = '') {\n    if (!el)\n        return;\n    el.style['transform'] = transform;\n    el.style['transitionDuration'] = duration;\n}\nfunction withinBounds(pos, top, bottom) {\n    const upper = Math.max(top, bottom);\n    const lower = Math.min(top, bottom);\n    return lower <= pos && pos <= upper;\n}\nfunction isPointWithinRect({ x, y }, { top, left, width, height }) {\n    const withinX = withinBounds(x, left, left + width);\n    const withinY = withinBounds(y, top, top + height);\n    return withinX && withinY;\n}\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst timeout = setTimeout;\n// Export Sortable Container Component Mixin\nconst ContainerMixin = defineComponent({\n    inject: {\n        SlicksortHub: {\n            from: 'SlicksortHub',\n            default: null,\n        },\n    },\n    provide() {\n        return {\n            manager: this.manager,\n        };\n    },\n    props: {\n        list: { type: Array, required: true },\n        axis: { type: String, default: 'y' },\n        distance: { type: Number, default: 0 },\n        pressDelay: { type: Number, default: 0 },\n        pressThreshold: { type: Number, default: 5 },\n        useDragHandle: { type: Boolean, default: false },\n        useWindowAsScrollContainer: { type: Boolean, default: false },\n        hideSortableGhost: { type: Boolean, default: true },\n        lockToContainerEdges: { type: Boolean, default: false },\n        lockOffset: { type: [String, Number, Array], default: '50%' },\n        transitionDuration: { type: Number, default: 300 },\n        appendTo: { type: String, default: 'body' },\n        draggedSettlingDuration: { type: Number, default: null },\n        group: { type: String, default: '' },\n        accept: { type: [Boolean, Array, Function], default: null },\n        cancelKey: { type: String, default: 'Escape' },\n        block: { type: Array, default: () => [] },\n        lockAxis: { type: String, default: '' },\n        helperClass: { type: String, default: '' },\n        contentWindow: { type: Object, default: null },\n        shouldCancelStart: {\n            type: Function,\n            default: (e) => {\n                // Cancel sorting if the event target is an `input`, `textarea`, `select` or `option`\n                const disabledElements = ['input', 'textarea', 'select', 'option', 'button'];\n                return disabledElements.indexOf(e.target.tagName.toLowerCase()) !== -1;\n            },\n        },\n        getHelperDimensions: {\n            type: Function,\n            default: ({ node }) => ({\n                width: node.offsetWidth,\n                height: node.offsetHeight,\n            }),\n        },\n    },\n    emits: ['sort-start', 'sort-move', 'sort-end', 'sort-cancel', 'sort-insert', 'sort-remove', 'update:list'],\n    data() {\n        let useHub = false;\n        if (this.group) {\n            // If the group option is set, it is assumed the user intends\n            // to drag between containers and the required plugin has been installed\n            if (this.SlicksortHub) {\n                useHub = true;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                throw new Error('Slicksort plugin required to use \"group\" prop');\n            }\n        }\n        return {\n            sorting: false,\n            hub: useHub ? this.SlicksortHub : null,\n            manager: new Manager(),\n        };\n    },\n    mounted() {\n        if (this.hub) {\n            this.id = this.hub.getId();\n        }\n        this.container = this.$el;\n        this.document = this.container.ownerDocument || document;\n        this._window = this.contentWindow || window;\n        this.scrollContainer = this.useWindowAsScrollContainer ? { scrollLeft: 0, scrollTop: 0 } : this.container;\n        this.events = {\n            start: this.handleStart,\n            move: this.handleMove,\n            end: this.handleEnd,\n        };\n        for (const key in this.events) {\n            if (hasOwnProperty(this.events, key)) {\n                // @ts-ignore\n                events[key].forEach((eventName) => this.container.addEventListener(eventName, this.events[key]));\n            }\n        }\n        if (this.hub) {\n            this.hub.addContainer(this);\n        }\n    },\n    beforeUnmount() {\n        for (const key in this.events) {\n            if (hasOwnProperty(this.events, key)) {\n                // @ts-ignore\n                events[key].forEach((eventName) => this.container.removeEventListener(eventName, this.events[key]));\n            }\n        }\n        if (this.hub) {\n            this.hub.removeContainer(this);\n        }\n        if (this.dragendTimer)\n            clearTimeout(this.dragendTimer);\n        if (this.cancelTimer)\n            clearTimeout(this.cancelTimer);\n        if (this.pressTimer)\n            clearTimeout(this.pressTimer);\n        if (this.autoscrollInterval)\n            clearInterval(this.autoscrollInterval);\n    },\n    methods: {\n        handleStart(e) {\n            const { distance, shouldCancelStart } = this.$props;\n            if ((!isTouch(e) && e.button === 2) || shouldCancelStart(e)) {\n                return false;\n            }\n            this._touched = true;\n            this._pos = getPointerOffset(e);\n            const target = e.target;\n            const node = closest(target, (el) => el.sortableInfo != null);\n            if (node && node.sortableInfo && this.nodeIsChild(node) && !this.sorting) {\n                const { useDragHandle } = this.$props;\n                const { index } = node.sortableInfo;\n                if (useDragHandle && !closest(target, (el) => el.sortableHandle != null))\n                    return;\n                this.manager.active = { index };\n                /*\n                 * Fixes a bug in Firefox where the :active state of anchor tags\n                 * prevent subsequent 'mousemove' events from being fired\n                 * (see https://github.com/clauderic/react-sortable-hoc/issues/118)\n                 */\n                if (target.tagName.toLowerCase() === 'a') {\n                    e.preventDefault();\n                }\n                if (!distance) {\n                    if (this.pressDelay === 0) {\n                        this.handlePress(e);\n                    }\n                    else {\n                        this.pressTimer = timeout(() => this.handlePress(e), this.pressDelay);\n                    }\n                }\n            }\n        },\n        nodeIsChild(node) {\n            return node.sortableInfo.manager === this.manager;\n        },\n        handleMove(e) {\n            const { distance, pressThreshold } = this.$props;\n            if (!this.sorting && this._touched) {\n                const offset = getPointerOffset(e);\n                this._delta = {\n                    x: this._pos.x - offset.x,\n                    y: this._pos.y - offset.y,\n                };\n                const delta = Math.abs(this._delta.x) + Math.abs(this._delta.y);\n                if (!distance && (!pressThreshold || (pressThreshold && delta >= pressThreshold))) {\n                    if (this.cancelTimer)\n                        clearTimeout(this.cancelTimer);\n                    this.cancelTimer = timeout(this.cancel, 0);\n                }\n                else if (distance && delta >= distance && this.manager.isActive()) {\n                    this.handlePress(e);\n                }\n            }\n        },\n        handleEnd() {\n            if (!this._touched)\n                return;\n            const { distance } = this.$props;\n            this._touched = false;\n            if (!distance) {\n                this.cancel();\n            }\n        },\n        cancel() {\n            if (!this.sorting) {\n                if (this.pressTimer)\n                    clearTimeout(this.pressTimer);\n                this.manager.active = null;\n                if (this.hub)\n                    this.hub.cancel();\n            }\n        },\n        handleSortCancel(e) {\n            if (isTouch(e) || e.key === this.cancelKey) {\n                this.newIndex = this.index;\n                this.canceling = true;\n                this.translate = { x: 0, y: 0 };\n                this.animateNodes();\n                this.handleSortEnd(e);\n            }\n        },\n        handlePress(e) {\n            e.stopPropagation();\n            const active = this.manager.getActive();\n            if (active) {\n                const { getHelperDimensions, helperClass, hideSortableGhost, appendTo } = this.$props;\n                const { node } = active;\n                const { index } = node.sortableInfo;\n                const margin = getElementMargin(node);\n                const containerBoundingRect = this.container.getBoundingClientRect();\n                const dimensions = getHelperDimensions({ index, node });\n                this.node = node;\n                this.margin = margin;\n                this.width = dimensions.width;\n                this.height = dimensions.height;\n                this.marginOffset = {\n                    x: this.margin.left + this.margin.right,\n                    y: Math.max(this.margin.top, this.margin.bottom),\n                };\n                this.boundingClientRect = node.getBoundingClientRect();\n                this.containerBoundingRect = containerBoundingRect;\n                this.index = index;\n                this.newIndex = index;\n                const clonedNode = cloneNode(node);\n                this.helper = this.document.querySelector(appendTo).appendChild(clonedNode);\n                this.helper.style.position = 'fixed';\n                this.helper.style.top = `${this.boundingClientRect.top - margin.top}px`;\n                this.helper.style.left = `${this.boundingClientRect.left - margin.left}px`;\n                this.helper.style.width = `${this.width}px`;\n                this.helper.style.height = `${this.height}px`;\n                this.helper.style.boxSizing = 'border-box';\n                this.helper.style.pointerEvents = 'none';\n                if (hideSortableGhost) {\n                    this.sortableGhost = node;\n                    node.style.visibility = 'hidden';\n                    node.style.opacity = '0';\n                }\n                if (this.hub) {\n                    this.hub.sortStart(this);\n                    this.hub.helper = this.helper;\n                    this.hub.ghost = this.sortableGhost;\n                }\n                this.intializeOffsets(e, this.boundingClientRect);\n                this.offsetEdge = getEdgeOffset(node, this.container);\n                if (helperClass) {\n                    this.helper.classList.add(...helperClass.split(' '));\n                }\n                this.listenerNode = isTouch(e) ? node : this._window;\n                // @ts-ignore\n                events.move.forEach((eventName) => this.listenerNode.addEventListener(eventName, this.handleSortMove));\n                // @ts-ignore\n                events.end.forEach((eventName) => this.listenerNode.addEventListener(eventName, this.handleSortEnd));\n                // @ts-ignore\n                events.cancel.forEach((eventName) => this.listenerNode.addEventListener(eventName, this.handleSortCancel));\n                this.sorting = true;\n                this.$emit('sort-start', { event: e, node, index });\n            }\n        },\n        handleSortMove(e) {\n            e.preventDefault(); // Prevent scrolling on mobile\n            this.updatePosition(e);\n            if (this.hub) {\n                const payload = this.list[this.index];\n                this.hub.handleSortMove(e, payload);\n            }\n            if (!this.hub || this.hub.isDest(this)) {\n                this.animateNodes();\n                this.autoscroll();\n            }\n            this.$emit('sort-move', { event: e });\n        },\n        handleDropOut() {\n            const removed = this.list[this.index];\n            const newValue = arrayRemove(this.list, this.index);\n            this.$emit('sort-remove', {\n                oldIndex: this.index,\n            });\n            this.$emit('update:list', newValue);\n            return removed;\n        },\n        handleDropIn(payload) {\n            const newValue = arrayInsert(this.list, this.newIndex, payload);\n            this.$emit('sort-insert', {\n                newIndex: this.newIndex,\n                value: payload,\n            });\n            this.$emit('update:list', newValue);\n            this.handleDragEnd();\n        },\n        handleDragOut() {\n            if (this.autoscrollInterval) {\n                clearInterval(this.autoscrollInterval);\n                this.autoscrollInterval = null;\n            }\n            if (this.hub.isSource(this)) {\n                // Trick to animate all nodes up\n                this.translate = {\n                    x: 10000,\n                    y: 10000,\n                };\n                this.animateNodes();\n            }\n            else {\n                this.manager.getRefs().forEach((ref) => {\n                    ref.node.style['transform'] = '';\n                });\n                this.dragendTimer = timeout(this.handleDragEnd, this.transitionDuration || 0);\n            }\n        },\n        handleDragEnd() {\n            if (this.autoscrollInterval) {\n                clearInterval(this.autoscrollInterval);\n                this.autoscrollInterval = null;\n            }\n            resetTransform(this.manager.getRefs());\n            if (this.sortableGhost) {\n                this.sortableGhost.remove();\n                this.sortableGhost = null;\n            }\n            if (this.dragendTimer) {\n                clearTimeout(this.dragendTimer);\n                this.dragendTimer = null;\n            }\n            this.manager.active = null;\n            this._touched = false;\n            this.sorting = false;\n        },\n        intializeOffsets(e, clientRect) {\n            const { useWindowAsScrollContainer, containerBoundingRect, _window } = this;\n            this.marginOffset = {\n                x: this.margin.left + this.margin.right,\n                y: Math.max(this.margin.top, this.margin.bottom),\n            };\n            this._axis = {\n                x: this.axis.indexOf('x') >= 0,\n                y: this.axis.indexOf('y') >= 0,\n            };\n            this.initialOffset = getPointerOffset(e);\n            // initialScroll;\n            this.initialScroll = {\n                top: this.scrollContainer.scrollTop,\n                left: this.scrollContainer.scrollLeft,\n            };\n            // initialWindowScroll;\n            this.initialWindowScroll = {\n                top: window.pageYOffset,\n                left: window.pageXOffset,\n            };\n            this.translate = { x: 0, y: 0 };\n            this.minTranslate = {};\n            this.maxTranslate = {};\n            if (this._axis.x) {\n                this.minTranslate.x =\n                    (useWindowAsScrollContainer ? 0 : containerBoundingRect.left) - clientRect.left - this.width / 2;\n                this.maxTranslate.x =\n                    (useWindowAsScrollContainer ? _window.innerWidth : containerBoundingRect.left + containerBoundingRect.width) -\n                        clientRect.left -\n                        this.width / 2;\n            }\n            if (this._axis.y) {\n                this.minTranslate.y =\n                    (useWindowAsScrollContainer ? 0 : containerBoundingRect.top) - clientRect.top - this.height / 2;\n                this.maxTranslate.y =\n                    (useWindowAsScrollContainer\n                        ? _window.innerHeight\n                        : containerBoundingRect.top + containerBoundingRect.height) -\n                        clientRect.top -\n                        this.height / 2;\n            }\n        },\n        handleDragIn(e, sortableGhost, helper) {\n            if (this.hub.isSource(this)) {\n                return;\n            }\n            if (this.dragendTimer) {\n                this.handleDragEnd();\n                clearTimeout(this.dragendTimer);\n                this.dragendTimer = null;\n            }\n            const nodes = this.manager.getRefs();\n            this.index = nodes.length;\n            this.manager.active = { index: this.index };\n            const containerBoundingRect = this.container.getBoundingClientRect();\n            const helperBoundingRect = helper.getBoundingClientRect();\n            this.containerBoundingRect = containerBoundingRect;\n            this.sortableGhost = cloneNode(sortableGhost);\n            this.container.appendChild(this.sortableGhost);\n            const ghostRect = this.sortableGhost.getBoundingClientRect();\n            this.boundingClientRect = ghostRect;\n            this.margin = getElementMargin(this.sortableGhost);\n            this.width = ghostRect.width;\n            this.height = ghostRect.height;\n            // XY coords of the inserted node, relative to the top-left corner of the container\n            this.offsetEdge = getEdgeOffset(this.sortableGhost, this.container);\n            this.intializeOffsets(e, ghostRect);\n            // Move the initialOffset back to the insertion point of the\n            // sortableGhost (end of the list), as if we had started the drag there.\n            this.initialOffset.x += ghostRect.x - helperBoundingRect.x;\n            this.initialOffset.y += ghostRect.y - helperBoundingRect.y;\n            // Turn on dragging\n            this.sorting = true;\n        },\n        handleSortEnd(e) {\n            // Remove the event listeners if the node is still in the DOM\n            if (this.listenerNode) {\n                events.move.forEach((eventName) => \n                // @ts-ignore\n                this.listenerNode.removeEventListener(eventName, this.handleSortMove));\n                events.end.forEach((eventName) => \n                // @ts-ignore\n                this.listenerNode.removeEventListener(eventName, this.handleSortEnd));\n                events.cancel.forEach((eventName) => \n                // @ts-ignore\n                this.listenerNode.removeEventListener(eventName, this.handleSortCancel));\n            }\n            const nodes = this.manager.getRefs();\n            // Remove the helper class(es) early to give it a chance to transition back\n            if (this.helper && this.helperClass) {\n                this.helper.classList.remove(...this.helperClass.split(' '));\n            }\n            // Stop autoscroll\n            if (this.autoscrollInterval)\n                clearInterval(this.autoscrollInterval);\n            this.autoscrollInterval = null;\n            const onEnd = () => {\n                // Remove the helper from the DOM\n                if (this.helper) {\n                    this.helper.remove();\n                    this.helper = null;\n                }\n                if (this.hideSortableGhost && this.sortableGhost) {\n                    this.sortableGhost.style.visibility = '';\n                    this.sortableGhost.style.opacity = '';\n                }\n                resetTransform(nodes);\n                // Update state\n                if (this.hub && !this.hub.isDest(this)) {\n                    this.canceling ? this.hub.cancel() : this.hub.handleSortEnd();\n                }\n                else if (this.canceling) {\n                    this.$emit('sort-cancel', { event: e });\n                }\n                else {\n                    this.$emit('sort-end', {\n                        event: e,\n                        oldIndex: this.index,\n                        newIndex: this.newIndex,\n                    });\n                    this.$emit('update:list', arrayMove(this.list, this.index, this.newIndex));\n                }\n                this.manager.active = null;\n                this._touched = false;\n                this.canceling = false;\n                this.sorting = false;\n            };\n            if (this.transitionDuration || this.draggedSettlingDuration) {\n                this.transitionHelperIntoPlace(nodes, onEnd);\n            }\n            else {\n                onEnd();\n            }\n        },\n        transitionHelperIntoPlace(nodes, cb) {\n            if (this.draggedSettlingDuration === 0 || nodes.length === 0 || !this.helper) {\n                return Promise.resolve();\n            }\n            const indexNode = nodes[this.index].node;\n            let targetX = 0;\n            let targetY = 0;\n            const scrollDifference = {\n                top: window.pageYOffset - this.initialWindowScroll.top,\n                left: window.pageXOffset - this.initialWindowScroll.left,\n            };\n            if (this.hub && !this.hub.isDest(this) && !this.canceling) {\n                const dest = this.hub.getDest();\n                if (!dest)\n                    return;\n                const destIndex = dest.newIndex;\n                const destRefs = dest.manager.getOrderedRefs();\n                const destNode = destIndex < destRefs.length ? destRefs[destIndex].node : dest.sortableGhost;\n                const ancestor = commonOffsetParent(indexNode, destNode);\n                const sourceOffset = getEdgeOffset(indexNode, ancestor);\n                const targetOffset = getEdgeOffset(destNode, ancestor);\n                targetX = targetOffset.left - sourceOffset.left - scrollDifference.left;\n                targetY = targetOffset.top - sourceOffset.top - scrollDifference.top;\n            }\n            else {\n                const newIndexNode = nodes[this.newIndex].node;\n                const deltaScroll = {\n                    left: this.scrollContainer.scrollLeft - this.initialScroll.left + scrollDifference.left,\n                    top: this.scrollContainer.scrollTop - this.initialScroll.top + scrollDifference.top,\n                };\n                targetX = -deltaScroll.left;\n                if (this.translate && this.translate.x > 0) {\n                    // Diff against right edge when moving to the right\n                    targetX +=\n                        newIndexNode.offsetLeft + newIndexNode.offsetWidth - (indexNode.offsetLeft + indexNode.offsetWidth);\n                }\n                else {\n                    targetX += newIndexNode.offsetLeft - indexNode.offsetLeft;\n                }\n                targetY = -deltaScroll.top;\n                if (this.translate && this.translate.y > 0) {\n                    // Diff against the bottom edge when moving down\n                    targetY +=\n                        newIndexNode.offsetTop + newIndexNode.offsetHeight - (indexNode.offsetTop + indexNode.offsetHeight);\n                }\n                else {\n                    targetY += newIndexNode.offsetTop - indexNode.offsetTop;\n                }\n            }\n            const duration = this.draggedSettlingDuration !== null ? this.draggedSettlingDuration : this.transitionDuration;\n            setTransform(this.helper, `translate3d(${targetX}px,${targetY}px, 0)`, `${duration}ms`);\n            // Register an event handler to clean up styles when the transition\n            // finishes.\n            const cleanup = (event) => {\n                if (!event || event.propertyName === 'transform') {\n                    clearTimeout(cleanupTimer);\n                    setTransform(this.helper);\n                    cb();\n                }\n            };\n            // Force cleanup in case 'transitionend' never fires\n            const cleanupTimer = setTimeout(cleanup, duration + 10);\n            this.helper.addEventListener('transitionend', cleanup);\n        },\n        updatePosition(e) {\n            const { lockAxis, lockToContainerEdges } = this.$props;\n            const offset = getPointerOffset(e);\n            const translate = {\n                x: offset.x - this.initialOffset.x,\n                y: offset.y - this.initialOffset.y,\n            };\n            // Adjust for window scroll\n            translate.y -= window.pageYOffset - this.initialWindowScroll.top;\n            translate.x -= window.pageXOffset - this.initialWindowScroll.left;\n            this.translate = translate;\n            if (lockToContainerEdges) {\n                const [minLockOffset, maxLockOffset] = getLockPixelOffsets(this.lockOffset, this.height, this.width);\n                const minOffset = {\n                    x: this.width / 2 - minLockOffset.x,\n                    y: this.height / 2 - minLockOffset.y,\n                };\n                const maxOffset = {\n                    x: this.width / 2 - maxLockOffset.x,\n                    y: this.height / 2 - maxLockOffset.y,\n                };\n                if (this.minTranslate.x && this.maxTranslate.x)\n                    translate.x = limit(this.minTranslate.x + minOffset.x, this.maxTranslate.x - maxOffset.x, translate.x);\n                if (this.minTranslate.y && this.maxTranslate.y)\n                    translate.y = limit(this.minTranslate.y + minOffset.y, this.maxTranslate.y - maxOffset.y, translate.y);\n            }\n            if (lockAxis === 'x') {\n                translate.y = 0;\n            }\n            else if (lockAxis === 'y') {\n                translate.x = 0;\n            }\n            if (this.helper) {\n                this.helper.style['transform'] = `translate3d(${translate.x}px,${translate.y}px, 0)`;\n            }\n        },\n        animateNodes() {\n            const { transitionDuration, hideSortableGhost } = this.$props;\n            const nodes = this.manager.getOrderedRefs();\n            const deltaScroll = {\n                left: this.scrollContainer.scrollLeft - this.initialScroll.left,\n                top: this.scrollContainer.scrollTop - this.initialScroll.top,\n            };\n            const sortingOffset = {\n                left: this.offsetEdge.left + this.translate.x + deltaScroll.left,\n                top: this.offsetEdge.top + this.translate.y + deltaScroll.top,\n            };\n            const scrollDifference = {\n                top: window.pageYOffset - this.initialWindowScroll.top,\n                left: window.pageXOffset - this.initialWindowScroll.left,\n            };\n            this.newIndex = null;\n            for (let i = 0, len = nodes.length; i < len; i++) {\n                const { node } = nodes[i];\n                const index = node.sortableInfo.index;\n                const width = node.offsetWidth;\n                const height = node.offsetHeight;\n                const offset = {\n                    width: this.width > width ? width / 2 : this.width / 2,\n                    height: this.height > height ? height / 2 : this.height / 2,\n                };\n                const translate = {\n                    x: 0,\n                    y: 0,\n                };\n                let { edgeOffset } = nodes[i];\n                // If we haven't cached the node's offsetTop / offsetLeft value\n                if (!edgeOffset) {\n                    nodes[i].edgeOffset = edgeOffset = getEdgeOffset(node, this.container);\n                }\n                // Get a reference to the next and previous node\n                const nextNode = i < nodes.length - 1 && nodes[i + 1];\n                const prevNode = i > 0 && nodes[i - 1];\n                // Also cache the next node's edge offset if needed.\n                // We need this for calculating the animation in a grid setup\n                if (nextNode && !nextNode.edgeOffset) {\n                    nextNode.edgeOffset = getEdgeOffset(nextNode.node, this.container);\n                }\n                // If the node is the one we're currently animating, skip it\n                if (index === this.index) {\n                    /*\n                     * With windowing libraries such as `react-virtualized`, the sortableGhost\n                     * node may change while scrolling down and then back up (or vice-versa),\n                     * so we need to update the reference to the new node just to be safe.\n                     */\n                    if (hideSortableGhost) {\n                        this.sortableGhost = node;\n                        node.style.visibility = 'hidden';\n                        node.style.opacity = '0';\n                    }\n                    continue;\n                }\n                if (transitionDuration) {\n                    node.style['transitionDuration'] = `${transitionDuration}ms`;\n                }\n                if (this._axis.x) {\n                    if (this._axis.y) {\n                        // Calculations for a grid setup\n                        if (index < this.index &&\n                            ((sortingOffset.left + scrollDifference.left - offset.width <= edgeOffset.left &&\n                                sortingOffset.top + scrollDifference.top <= edgeOffset.top + offset.height) ||\n                                sortingOffset.top + scrollDifference.top + offset.height <= edgeOffset.top)) {\n                            // If the current node is to the left on the same row, or above the node that's being dragged\n                            // then move it to the right\n                            translate.x = this.width + this.marginOffset.x;\n                            if (edgeOffset.left + translate.x > this.containerBoundingRect.width - offset.width && nextNode) {\n                                // If it moves passed the right bounds, then animate it to the first position of the next row.\n                                // We just use the offset of the next node to calculate where to move, because that node's original position\n                                // is exactly where we want to go\n                                translate.x = nextNode.edgeOffset.left - edgeOffset.left;\n                                translate.y = nextNode.edgeOffset.top - edgeOffset.top;\n                            }\n                            if (this.newIndex === null) {\n                                this.newIndex = index;\n                            }\n                        }\n                        else if (index > this.index &&\n                            ((sortingOffset.left + scrollDifference.left + offset.width >= edgeOffset.left &&\n                                sortingOffset.top + scrollDifference.top + offset.height >= edgeOffset.top) ||\n                                sortingOffset.top + scrollDifference.top + offset.height >= edgeOffset.top + height)) {\n                            // If the current node is to the right on the same row, or below the node that's being dragged\n                            // then move it to the left\n                            translate.x = -(this.width + this.marginOffset.x);\n                            if (edgeOffset.left + translate.x < this.containerBoundingRect.left + offset.width && prevNode) {\n                                // If it moves passed the left bounds, then animate it to the last position of the previous row.\n                                // We just use the offset of the previous node to calculate where to move, because that node's original position\n                                // is exactly where we want to go\n                                translate.x = prevNode.edgeOffset.left - edgeOffset.left;\n                                translate.y = prevNode.edgeOffset.top - edgeOffset.top;\n                            }\n                            this.newIndex = index;\n                        }\n                    }\n                    else {\n                        if (index > this.index && sortingOffset.left + scrollDifference.left + offset.width >= edgeOffset.left) {\n                            translate.x = -(this.width + this.marginOffset.x);\n                            this.newIndex = index;\n                        }\n                        else if (index < this.index &&\n                            sortingOffset.left + scrollDifference.left <= edgeOffset.left + offset.width) {\n                            translate.x = this.width + this.marginOffset.x;\n                            if (this.newIndex == null) {\n                                this.newIndex = index;\n                            }\n                        }\n                    }\n                }\n                else if (this._axis.y) {\n                    if (index > this.index && sortingOffset.top + scrollDifference.top + offset.height >= edgeOffset.top) {\n                        translate.y = -(this.height + this.marginOffset.y);\n                        this.newIndex = index;\n                    }\n                    else if (index < this.index &&\n                        sortingOffset.top + scrollDifference.top <= edgeOffset.top + offset.height) {\n                        translate.y = this.height + this.marginOffset.y;\n                        if (this.newIndex == null) {\n                            this.newIndex = index;\n                        }\n                    }\n                }\n                node.style['transform'] = `translate3d(${translate.x}px,${translate.y}px,0)`;\n            }\n            if (this.newIndex == null) {\n                this.newIndex = this.index;\n            }\n        },\n        autoscroll() {\n            const translate = this.translate;\n            const direction = {\n                x: 0,\n                y: 0,\n            };\n            const speed = {\n                x: 1,\n                y: 1,\n            };\n            const acceleration = {\n                x: 10,\n                y: 10,\n            };\n            if (translate.y >= this.maxTranslate.y - this.height / 2) {\n                direction.y = 1; // Scroll Down\n                speed.y = acceleration.y * Math.abs((this.maxTranslate.y - this.height / 2 - translate.y) / this.height);\n            }\n            else if (translate.x >= this.maxTranslate.x - this.width / 2) {\n                direction.x = 1; // Scroll Right\n                speed.x = acceleration.x * Math.abs((this.maxTranslate.x - this.width / 2 - translate.x) / this.width);\n            }\n            else if (translate.y <= this.minTranslate.y + this.height / 2) {\n                direction.y = -1; // Scroll Up\n                speed.y = acceleration.y * Math.abs((translate.y - this.height / 2 - this.minTranslate.y) / this.height);\n            }\n            else if (translate.x <= this.minTranslate.x + this.width / 2) {\n                direction.x = -1; // Scroll Left\n                speed.x = acceleration.x * Math.abs((translate.x - this.width / 2 - this.minTranslate.x) / this.width);\n            }\n            if (this.autoscrollInterval) {\n                clearInterval(this.autoscrollInterval);\n                this.autoscrollInterval = null;\n            }\n            if (direction.x !== 0 || direction.y !== 0) {\n                this.autoscrollInterval = window.setInterval(() => {\n                    const offset = {\n                        left: 1 * speed.x * direction.x,\n                        top: 1 * speed.y * direction.y,\n                    };\n                    if (this.useWindowAsScrollContainer) {\n                        this._window.scrollBy(offset.left, offset.top);\n                    }\n                    else {\n                        this.scrollContainer.scrollTop += offset.top;\n                        this.scrollContainer.scrollLeft += offset.left;\n                    }\n                    this.translate.x += offset.left;\n                    this.translate.y += offset.top;\n                    this.animateNodes();\n                }, 5);\n            }\n        },\n    },\n});\n\n// Export Sortable Element Handle Directive\nconst HandleDirective = {\n    beforeMount(el) {\n        el.sortableHandle = true;\n    },\n};\n\nconst SlickItem = defineComponent({\n    name: 'SlickItem',\n    mixins: [ElementMixin],\n    props: {\n        tag: {\n            type: String,\n            default: 'div',\n        },\n    },\n    render() {\n        var _a, _b;\n        return h(this.tag, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a));\n    },\n});\n\nconst SlickList = defineComponent({\n    name: 'SlickList',\n    mixins: [ContainerMixin],\n    props: {\n        tag: {\n            type: String,\n            default: 'div',\n        },\n        itemKey: {\n            type: [String, Function],\n            default: 'id',\n        },\n    },\n    render() {\n        var _a, _b;\n        if (this.$slots.item) {\n            return h(this.tag, this.list.map((item, index) => {\n                let key;\n                if (item == null) {\n                    return;\n                }\n                else if (typeof this.itemKey === 'function') {\n                    key = this.itemKey(item);\n                }\n                else if (typeof item === 'object' &&\n                    hasOwnProperty(item, this.itemKey) &&\n                    typeof item[this.itemKey] == 'string') {\n                    key = item[this.itemKey];\n                }\n                else if (typeof item === 'string') {\n                    key = item;\n                }\n                else {\n                    throw new Error('Cannot find key for item, use the item-key prop and pass a function or string');\n                }\n                return h(SlickItem, {\n                    key,\n                    index,\n                }, {\n                    default: () => { var _a, _b; return (_b = (_a = this.$slots).item) === null || _b === void 0 ? void 0 : _b.call(_a, { item, index }); },\n                });\n            }));\n        }\n        return h(this.tag, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a));\n    },\n});\n\nconst DragHandle = defineComponent({\n    props: {\n        tag: {\n            type: String,\n            default: 'span',\n        },\n    },\n    mounted() {\n        this.$el.sortableHandle = true;\n    },\n    render() {\n        var _a, _b;\n        return h(this.tag, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a));\n    },\n});\n\nlet containerIDCounter = 1;\n/**\n * Always allow when dest === source\n * Defer to 'dest.accept()' if it is a function\n * Allow any group in the accept lists\n * Deny any group in the block list\n * Allow the same group by default, this can be overridden with the block prop\n */\nfunction canAcceptElement(dest, source, payload) {\n    if (source.id === dest.id)\n        return true;\n    if (dest.block && dest.block.includes(source.group))\n        return false;\n    if (typeof dest.accept === 'function') {\n        return dest.accept({ dest, source, payload });\n    }\n    if (typeof dest.accept === 'boolean') {\n        return dest.accept;\n    }\n    if (dest.accept && dest.accept.includes(source.group))\n        return true;\n    if (dest.group === source.group)\n        return true;\n    return false;\n}\nfunction findClosestDest({ x, y }, refs, currentDest) {\n    // Quickly check if we are within the bounds of the current destination\n    if (isPointWithinRect({ x, y }, currentDest.container.getBoundingClientRect())) {\n        return currentDest;\n    }\n    let closest = null;\n    let minDistance = Infinity;\n    for (let i = 0; i < refs.length; i++) {\n        const ref = refs[i];\n        const rect = ref.container.getBoundingClientRect();\n        const isWithin = isPointWithinRect({ x, y }, rect);\n        if (isWithin) {\n            // If we are within another destination, stop here\n            return ref;\n        }\n        const center = getRectCenter(rect);\n        const distance = getDistance(x, y, center.x, center.y);\n        if (distance < minDistance) {\n            closest = ref;\n            minDistance = distance;\n        }\n    }\n    // Try to guess the closest destination\n    return closest;\n}\nclass SlicksortHub {\n    constructor() {\n        this.helper = null;\n        this.ghost = null;\n        this.refs = [];\n        this.source = null;\n        this.dest = null;\n    }\n    getId() {\n        return '' + containerIDCounter++;\n    }\n    isSource({ id }) {\n        var _a;\n        return ((_a = this.source) === null || _a === void 0 ? void 0 : _a.id) === id;\n    }\n    getSource() {\n        return this.source;\n    }\n    isDest({ id }) {\n        var _a;\n        return ((_a = this.dest) === null || _a === void 0 ? void 0 : _a.id) === id;\n    }\n    getDest() {\n        return this.dest;\n    }\n    addContainer(ref) {\n        this.refs.push(ref);\n    }\n    removeContainer(ref) {\n        this.refs = this.refs.filter((c) => c.id !== ref.id);\n    }\n    sortStart(ref) {\n        this.source = ref;\n        this.dest = ref;\n    }\n    handleSortMove(e, payload) {\n        var _a, _b, _c, _d;\n        const dest = this.dest;\n        const source = this.source;\n        if (!dest || !source)\n            return;\n        const refs = this.refs;\n        const pointer = getPointerOffset(e, 'client');\n        const newDest = findClosestDest(pointer, refs, dest) || dest;\n        if (dest.id !== newDest.id && canAcceptElement(newDest, source, payload)) {\n            this.dest = newDest;\n            dest.handleDragOut();\n            newDest.handleDragIn(e, this.ghost, this.helper);\n        }\n        if (dest.id !== ((_a = this.source) === null || _a === void 0 ? void 0 : _a.id)) {\n            (_b = this.dest) === null || _b === void 0 ? void 0 : _b.updatePosition(e);\n            (_c = this.dest) === null || _c === void 0 ? void 0 : _c.animateNodes();\n            (_d = this.dest) === null || _d === void 0 ? void 0 : _d.autoscroll();\n        }\n    }\n    handleSortEnd() {\n        var _a, _b, _c, _d;\n        if (((_a = this.source) === null || _a === void 0 ? void 0 : _a.id) === ((_b = this.dest) === null || _b === void 0 ? void 0 : _b.id))\n            return;\n        const payload = (_c = this.source) === null || _c === void 0 ? void 0 : _c.handleDropOut();\n        (_d = this.dest) === null || _d === void 0 ? void 0 : _d.handleDropIn(payload);\n        this.reset();\n    }\n    reset() {\n        this.source = null;\n        this.dest = null;\n        this.helper = null;\n        this.ghost = null;\n    }\n    cancel() {\n        var _a;\n        (_a = this.dest) === null || _a === void 0 ? void 0 : _a.handleDragEnd();\n        this.reset();\n    }\n}\n\nconst plugin = {\n    install(app) {\n        app.directive('drag-handle', HandleDirective);\n        app.provide('SlicksortHub', new SlicksortHub());\n    },\n};\n\nexport { ContainerMixin, DragHandle, ElementMixin, HandleDirective, SlickItem, SlickList, arrayMove, plugin };\n","import { getIconFromExt, SvgIcon } from './icons';\nimport utils from './utils';\nimport { RGBA, ImageThumbnail, VideoThumbnail } from './utils';\n\ninterface Dimensions {\n  height: number;\n  width: number;\n}\n\ninterface Options {\n  accept?: string;\n  maxSize?: string;\n  read: boolean;\n  thumbnailSize?: number;\n  averageColor?: boolean;\n  withCredentials?: boolean;\n}\n\ninterface ErrorText {\n  common?: string;\n  type?: string;\n  size?: string;\n  upload?: string;\n}\n\ninterface ErrorFlags {\n  common?: boolean;\n  type?: boolean;\n  size?: boolean;\n  upload?: false | string;\n}\n\ninterface RawFileRecord {\n  url: string | undefined;\n  urlResized: string | null;\n  src: string;\n  name: string;\n  lastModified: number;\n  sizeText: string;\n  size: number;\n  type: string;\n  ext: string;\n  color: string;\n  file: File;\n  progress: number;\n  error?: false | ErrorFlags;\n  dimensions: Dimensions;\n  videoThumbnail: string;\n  imageColor: RGBA;\n  customName: string;\n  upload: UploadData;\n}\n\ninterface DummyFile {\n  name: string;\n  size: number;\n  type: string;\n  lastModified: number;\n  lastModifiedDate: Date;\n}\n\ninterface UploadData {\n  data: any;\n  error: string | false;\n}\n\nexport type { Dimensions, ErrorText, Options, RawFileRecord };\n\nclass FileRecord {\n  public static getFromRaw(\n    rawFileRecord: RawFileRecord,\n    options: Options,\n    isSync: boolean,\n  ): Promise<FileRecord> | FileRecord {\n    const fileRecord = new FileRecord(rawFileRecord, options);\n    const promise = fileRecord.setUrl(rawFileRecord.url as string);\n    if (isSync) {\n      return fileRecord;\n    }\n    return promise;\n  }\n\n  public static fromRaw(rawFileRecord: RawFileRecord, options: Options): Promise<FileRecord> {\n    return FileRecord.getFromRaw(rawFileRecord, options, false) as Promise<FileRecord>;\n  }\n\n  public static fromRawSync(rawFileRecord: RawFileRecord, options: Options): FileRecord {\n    return FileRecord.getFromRaw(rawFileRecord, options, true) as FileRecord;\n  }\n\n  public static fromRawArray(rawFileRecords: RawFileRecord[], options: Options): Promise<FileRecord[]> {\n    const promises: Array<Promise<FileRecord>> = [];\n    for (const rawFileRecord of rawFileRecords) {\n      promises.push(FileRecord.fromRaw(rawFileRecord, options));\n    }\n    return Promise.all(promises);\n  }\n\n  public static fromRawArraySync(rawFileRecords: RawFileRecord[], options: Options): FileRecord[] {\n    const fileRecords: Array<FileRecord> = [];\n    for (const rawFileRecord of rawFileRecords) {\n      fileRecords.push(FileRecord.fromRawSync(rawFileRecord, options));\n    }\n    return fileRecords;\n  }\n\n  public static toRawArray(fileRecords: FileRecord[]): RawFileRecord[] {\n    const rawFileRecords: RawFileRecord[] = [];\n    for (const fileRecord of fileRecords) {\n      rawFileRecords.push(fileRecord.toRaw());\n    }\n    return rawFileRecords;\n  }\n\n  public static readFile(fileRecord: FileRecord): Promise<FileRecord> {\n    return new Promise((resolve, reject) => {\n      if (!fileRecord.read) {\n        fileRecord.setUrl(null).then(\n          () => {\n            resolve(fileRecord);\n          },\n          (err) => {\n            // ignore error\n            resolve(fileRecord);\n          }\n        );\n        return;\n      }\n      utils.getDataURL(fileRecord.file).then((dataUrl) => {\n        fileRecord.setUrl(dataUrl).then(() => {\n          resolve(fileRecord);\n        }, reject);\n      }, reject);\n    });\n  }\n\n  public static readFiles(fileRecords: FileRecord[]): Promise<FileRecord[]> {\n    const promises: Array<Promise<FileRecord>> = [];\n    for (const fileRecord of fileRecords) {\n      promises.push(FileRecord.readFile(fileRecord));\n    }\n    return Promise.all(promises);\n  }\n\n  public urlValue: null | string = null;\n  public urlResized: null | string = null;\n  public image: HTMLImageElement | {} = {};\n  public isPlayingAv: boolean = false;\n\n  public oldFileName: string | null = null;\n  public oldCustomName: string | null = null;\n  public upload: UploadData = { data: null, error: false };\n\n  public raw: RawFileRecord;\n  public progressInternal: number;\n  public accept?: string;\n  public dimensions: Dimensions;\n  public error: false | ErrorFlags;\n  public file: File;\n  public height: undefined | number | string;\n  public width: undefined | number | string;\n  public id: string;\n  public imageColor?: RGBA;\n  public lastKnownSrc: null | string;\n  public maxSize?: string;\n  public options: Options;\n  public read: boolean;\n  public thumbnailSize: number;\n  public videoThumbnail: any;\n  public customName: any;\n  public xhr?: XMLHttpRequest;\n  public xhrQueue?: () => any;\n  public stopAv?: (() => any) | null;\n  public tusUpload?: any;\n  public calculateAverageColor: boolean;\n\n  public constructor(data: RawFileRecord, options: Options) {\n    this.urlValue = null;\n    this.urlResized = null;\n    this.lastKnownSrc = null;\n    this.image = {};\n    this.isPlayingAv = false;\n    this.oldFileName = null;\n    this.oldCustomName = null;\n\n    this.raw = data;\n    this.file = data.file instanceof File ? data.file : (this.createDummyFile(data) as any);\n    this.progressInternal = !isNaN(data.progress as number) ? (data.progress as number) : 0;\n    // this.width = FileRecord.defaultWidth;\n    // this.height = FileRecord.defaultHeight;\n    this.thumbnailSize = options.thumbnailSize || 360;\n    this.read = !!options.read;\n    this.dimensions = data.dimensions || { width: 0, height: 0 };\n    this.dimensions.width = this.dimensions.width || 0;\n    this.dimensions.height = this.dimensions.height || 0;\n    this.error = data.error || false;\n    this.options = options;\n    this.maxSize = options.maxSize;\n    this.accept = options.accept;\n    this.id = Math.random() + ':' + new Date().getTime();\n    this.videoThumbnail = data.videoThumbnail;\n    this.imageColor = data.imageColor;\n    this.customName = data.customName;\n    this.calculateAverageColor = options.averageColor !== undefined ? options.averageColor : true;\n    this.validate();\n  }\n\n  public createDummyFile(data: RawFileRecord): DummyFile {\n    const file: DummyFile = {} as DummyFile;\n    file.lastModified = data.lastModified;\n    const d = new Date();\n    if (file.lastModified) {\n      d.setTime(file.lastModified);\n    }\n    file.lastModifiedDate = d;\n    file.name = data.name;\n    file.size = data.size;\n    file.type = data.type;\n    return file;\n  }\n\n  public hasProgress(): boolean {\n    return !isNaN(this.progressInternal); // && this._progress <= 100;\n  }\n\n  progress(value: number): void;\n  progress(): number;\n  public progress(value?: number): number | void {\n    if (value !== undefined) {\n      this.progressInternal = value;\n      return;\n    }\n    return this.progressInternal;\n  }\n\n  url(value: string): string | undefined | Promise<this>;\n  url(): string | undefined;\n  public url(value?: string): string | undefined | Promise<this> {\n    if (value !== undefined) {\n      return this.setUrl(value);\n    }\n    return this.urlValue || undefined;\n  }\n\n  public src(): string {\n    if (this.isImage()) {\n      return this.urlResized || this.urlValue || (this.file as any).url;\n    }\n    if (this.isPlayableVideo()) {\n      return this.videoThumbnail || '';\n    }\n    return '';\n  }\n\n  public size(): string {\n    if (!this.file) {\n      return '';\n    }\n    return utils.getSizeFormatted(this.file.size);\n  }\n\n  public ext(): string {\n    if (this.file && this.file.name.indexOf('.') !== -1) {\n      return (this.file.name as any).split('.').pop();\n    }\n    return '?';\n    // return this.file.type.split('/').shift();\n  }\n\n  public name(withoutExt?: boolean): string {\n    const ext = this.ext();\n    if (this.customName) {\n      return this.customName + (withoutExt ? '' : ext !== '?' ? '.' + ext : '');\n    }\n    const name = this.file && this.file.name;\n    if (withoutExt) {\n      if (ext !== '?') {\n        return name.substr(0, name.length - (ext.length + 1));\n      }\n    }\n    return name;\n  }\n\n  public isDarkColor(): boolean {\n    if (this.imageColor) {\n      const rgb = this.imageColor;\n      const darkPoint = 20;\n      return rgb[0] <= darkPoint && rgb[1] <= darkPoint && rgb[2] <= darkPoint;\n    }\n    return false;\n  }\n\n  public color(): string {\n    if (this.imageColor) {\n      const rgb = this.imageColor;\n      return 'rgb(' + rgb[0] + ', ' + rgb[1] + ', ' + rgb[2] + ')';\n    }\n    if (this.isImage()) {\n      return 'transparent';\n    }\n    const ext = this.ext();\n    const svgIcon = this.icon();\n    // var svgIcon = getIconFromExt(ext);\n    if (svgIcon.color) {\n      return svgIcon.color;\n    }\n    return utils.getColorForText(ext);\n  }\n\n  public isImage(): boolean {\n    return this.file && this.file.type !== 'image/x-wmf' && !!this.file.type.match(/image((?!vnd).)*$/i);\n  }\n\n  public isVideo(): boolean {\n    return this.file && this.file.type.indexOf('video') !== -1;\n  }\n\n  public isPlayableVideo(): boolean {\n    return this.icon().category === 'video-playable';\n  }\n\n  public isAudio(): boolean {\n    return this.file && this.file.type.indexOf('audio') !== -1;\n  }\n\n  public isPlayableAudio(): boolean {\n    return this.icon().category === 'audio-playable';\n  }\n\n  public isText(): boolean {\n    return this.file && this.file.type.indexOf('text') !== -1;\n  }\n\n  public setUrl(url: string | null): Promise<this> {\n    this.urlValue = url;\n    return new Promise((resolve, reject) => {\n      if (this.isImage()) {\n        this.resizeImage().then(\n          () => {\n            resolve(this);\n          },\n          (err) => {\n            resolve(this);\n          }\n        );\n        return;\n      }\n      resolve(this);\n    });\n  }\n\n  public imageResized(resized: ImageThumbnail | null) {\n    if (!resized) {\n      return;\n    }\n    this.urlResized = resized.url;\n    this.image = resized.image;\n    if (resized.image && resized.image.width && resized.image.height) {\n      this.dimensions.width = resized.image.width;\n      this.dimensions.height = resized.image.height;\n    }\n    this.lastKnownSrc = this.urlResized;\n    this.imageColor = resized.color;\n  }\n\n  public resizeImage(): Promise<this> {\n    return new Promise((resolve, reject) => {\n      utils\n        .resizeImage(this.thumbnailSize, this.file, this.urlValue as string, this.calculateAverageColor)\n        .then((resized) => {\n          this.imageResized(resized);\n          resolve(this);\n        })\n        .catch(reject);\n    });\n  }\n\n  public icon(): SvgIcon {\n    const ext = this.ext();\n    const svgIcon = getIconFromExt(ext);\n    return svgIcon;\n  }\n\n  public getErrorMessage(errorText?: ErrorText): string {\n    const error = this.error;\n    if (!error) {\n      return '';\n    }\n    errorText = errorText || {};\n    errorText = {\n      common: errorText.common || 'Invalid file.',\n      type: errorText.type || 'Invalid file type.',\n      size: errorText.size || 'Files should not exceed ' + this.maxSize + ' in size',\n    };\n    if (error.type) {\n      return errorText.type as string;\n    } else if (error.size) {\n      return errorText.size as string;\n    } else if (error.upload) {\n      return this.upload.error ? this.upload.error : error.upload;\n    }\n    return errorText.common as string;\n  }\n\n  public toRaw(): RawFileRecord {\n    const raw = this.raw || ({} as RawFileRecord);\n    raw.url = this.url();\n    raw.urlResized = this.urlResized;\n    raw.src = this.src();\n    raw.name = this.name();\n    raw.lastModified = this.file.lastModified;\n    raw.sizeText = this.size();\n    raw.size = this.file.size;\n    raw.type = this.file.type;\n    raw.ext = this.ext();\n    raw.color = this.color();\n    raw.file = this.file;\n    raw.progress = this.progress(); // pass it as a function\n    raw.upload = this.upload;\n    if (!('error' in raw)) {\n      Object.defineProperty(raw, 'error', {\n        get: () => {\n          return this.error;\n        },\n      });\n    }\n    raw.dimensions = this.dimensions;\n    return raw;\n  }\n\n  public validate(): void {\n    const validType = utils.validateType(this.file, this.accept);\n    const validSize = utils.validateSize(this.file, this.maxSize as string);\n    if (!validType || !validSize) {\n      this.error = {\n        type: !validType,\n        size: !validSize,\n      };\n    } else {\n      this.error = false;\n    }\n  }\n}\n\nexport default FileRecord;\n","export type ConfigureFn = (request: XMLHttpRequest) => any;\nexport interface AjaxResponse {\n  data: any;\n  status: number;\n  statusText: string;\n  headers: string;\n  request: XMLHttpRequest;\n}\nexport type AjaxRequestData = FormData | any;\nexport interface AjaxError extends Error {\n  error: true;\n  code: string;\n  request: XMLHttpRequest;\n  response?: AjaxResponse;\n}\n\n/* inspired by axios */\nclass AjaxRequest {\n  public createError(\n    message: string,\n    code: string | null,\n    request: XMLHttpRequest,\n    response?: AjaxResponse\n  ): AjaxError {\n    const error: AjaxError = new Error(message) as AjaxError;\n    error.error = true;\n    if (code) {\n      error.code = code;\n    }\n    error.request = request;\n    error.response = response;\n    return error;\n  }\n\n  public settle(resolve: any, reject: any, response: AjaxResponse) {\n    const validateStatus = (status: number) => {\n      return status >= 200 && status < 300;\n    };\n    // Note: status is not exposed by XDomainRequest\n    if (!response.status || !validateStatus || validateStatus(response.status)) {\n      resolve(response);\n    } else {\n      reject(this.createError('Request failed with status code ' + response.status, null, response.request, response));\n    }\n  }\n\n  public request(\n    method: string,\n    url: string,\n    formData: AjaxRequestData | null = null,\n    configureFn?: ConfigureFn\n  ): Promise<AjaxResponse> {\n    return new Promise((resolve, reject) => {\n      // tslint:disable-next-line\n      let request = new XMLHttpRequest();\n      const loadEvent = 'onreadystatechange';\n\n      request.open(method, url, true);\n\n      // Listen for ready state\n      request[loadEvent] = () => {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n\n        // Prepare the response\n        const responseHeaders = request.getAllResponseHeaders();\n        let responseData: any = request.responseText;\n        const contentType = request.getResponseHeader('Content-Type');\n        if (contentType && contentType.indexOf('application/json') !== -1) {\n          responseData = JSON.parse(responseData);\n        } else {\n          try {\n            responseData = JSON.parse(responseData);\n          } catch (e) {\n            /* ignore, possibly non json response */\n          }\n        }\n        const response: AjaxResponse = {\n          data: responseData,\n          // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n          status: request.status === 1223 ? 204 : request.status,\n          statusText: request.status === 1223 ? 'No Content' : request.statusText,\n          headers: responseHeaders,\n          request,\n        };\n\n        this.settle(resolve, reject, response);\n\n        // Clean up request\n        (request as any) = null;\n      };\n\n      // Handle browser request cancellation (as opposed to a manual cancellation)\n      request.onabort = () => {\n        if (!request) {\n          return;\n        }\n\n        reject(this.createError('Request aborted', 'ECONNABORTED', request));\n\n        // Clean up request\n        (request as any) = null;\n      };\n\n      // Handle low level network errors\n      request.onerror = () => {\n        // Real errors are hidden from us by the browser\n        // onerror should only fire if it's a network error\n        reject(this.createError('Network Error', null, request));\n\n        // Clean up request\n        (request as any) = null;\n      };\n\n      // Handle timeout\n      request.ontimeout = () => {\n        reject(this.createError('timeout exceeded', 'ECONNABORTED', request));\n\n        // Clean up request\n        (request as any) = null;\n      };\n\n      // // Handle progress if needed\n      // if (typeof config.onDownloadProgress === 'function') {\n      //   request.addEventListener('progress', config.onDownloadProgress);\n      // }\n\n      // Not all browsers support upload events\n      // if (typeof progressCallback === 'function' && request.upload) {\n      //   request.upload.addEventListener('progress', progressCallback);\n      // }\n\n      if (typeof configureFn === 'function') {\n        configureFn(request);\n      }\n\n      request.send(formData);\n    });\n  }\n\n  public post(url: string, formData: AjaxRequestData, configureFn?: ConfigureFn) {\n    return this.request('POST', url, formData, configureFn);\n  }\n\n  public delete(url: string, formData: AjaxRequestData, configureFn?: ConfigureFn) {\n    return this.request('DELETE', url, formData, configureFn);\n  }\n\n  public put(url: string, formData: AjaxRequestData, configureFn?: ConfigureFn) {\n    return this.request('PUT', url, formData, configureFn);\n  }\n}\n\nexport default new AjaxRequest();\n","import ajax from './ajax-request';\nimport { ConfigureFn, AjaxResponse, AjaxError } from './ajax-request';\nimport FileRecord from './file-record';\n\ntype ProgressFn = (event: ProgressEvent) => void;\nexport type CreateFormDataFn = (fileRecord: FileRecord) => FormData;\n\nexport interface TusOptions {\n  retryDelays?: number[];\n  metadata?: any;\n}\n\nexport type TusOptionsFn = (fileRecord: FileRecord) => TusOptions;\n\nclass UploadHelper {\n  public addHeaders(xhr: XMLHttpRequest, headers: object): XMLHttpRequest {\n    xhr.setRequestHeader('Accept', 'application/json');\n    if (headers) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          xhr.setRequestHeader(key, (headers as any)[key]);\n        }\n      }\n    }\n    return xhr;\n  }\n\n  public doUpload(\n    url: string,\n    headers: object,\n    formData: FormData,\n    progressCallback: ProgressFn,\n    configureFn?: ConfigureFn\n  ): Promise<AjaxResponse> {\n    return ajax.post(url, formData, (xhr) => {\n      this.addHeaders(xhr, headers);\n      xhr.upload.addEventListener('progress', progressCallback, false);\n      if (typeof configureFn === 'function') {\n        configureFn(xhr);\n      }\n    });\n  }\n\n  public doDeleteUpload(\n    url: string,\n    headers: object,\n    uploadData: any,\n    configureFn?: ConfigureFn\n  ): Promise<AjaxResponse> {\n    if (typeof uploadData !== 'string') {\n      uploadData = JSON.stringify(uploadData);\n    }\n    return ajax.delete(url, uploadData, (xhr) => {\n      xhr.setRequestHeader('Content-Type', 'application/json');\n      this.addHeaders(xhr, headers);\n      if (typeof configureFn === 'function') {\n        configureFn(xhr);\n      }\n    });\n  }\n\n  public doUpdateUpload(\n    url: string,\n    headers: object,\n    uploadData: any,\n    configureFn?: ConfigureFn\n  ): Promise<AjaxResponse> {\n    if (typeof uploadData !== 'string') {\n      uploadData = JSON.stringify(uploadData);\n    }\n    return ajax.put(url, uploadData, (xhr) => {\n      xhr.setRequestHeader('Content-Type', 'application/json');\n      this.addHeaders(xhr, headers);\n      if (typeof configureFn === 'function') {\n        configureFn(xhr);\n      }\n    });\n  }\n\n  // doUploadAxios(axios, formData, progressCallback){\n  //   return axios.post('/upload', formData, {\n  //     onUploadProgress: progressCallback,\n  //   });\n  // }\n\n  // doDeleteUploadAxios(axios, data, configureFn){\n  //   return axios.delete('/upload', data, {\n  //   });\n  // }\n\n  public prepareUploadError(fileRecord: FileRecord, err: AjaxError, timeout?: number) {\n    let errorText = err.message;\n    if (err.response && err.response.data) {\n      try {\n        const errorMsg = err.response.data.error || JSON.parse(err.response.data).error;\n        errorText = errorMsg;\n      } catch (e) {\n        // ignore\n      }\n    }\n    if (!fileRecord.error) {\n      fileRecord.error = {};\n    }\n    fileRecord.error.upload = errorText;\n    fileRecord.upload.data = undefined;\n    fileRecord.upload.error = errorText;\n    if (timeout) {\n      window.setTimeout(() => {\n        if (!fileRecord.error) {\n          fileRecord.error = {};\n        }\n        fileRecord.error.upload = false;\n        if (!fileRecord.error.size && !fileRecord.error.type) {\n          fileRecord.error = false;\n        }\n      }, timeout);\n    }\n  }\n\n  public upload(\n    url: string,\n    headers: object,\n    fileRecords: FileRecord[],\n    createFormData?: CreateFormDataFn,\n    progressFn?: (progress: number) => void,\n    configureFn?: ConfigureFn\n  ) {\n    let updateOverallProgress = () => {\n      /* no op */\n    };\n    if (progressFn) {\n      updateOverallProgress = () => {\n        let prgTotal = 0;\n        for (const fileRecord of fileRecords) {\n          prgTotal += fileRecord.progress() as number;\n        }\n        progressFn(prgTotal / fileRecords.length);\n      };\n    }\n    const promises: Array<Promise<AjaxResponse | AjaxError>> = [];\n    let failedUploadsCount = 0;\n    for (const fileRecord of fileRecords) {\n      let formData;\n      if (typeof createFormData === 'function') {\n        formData = createFormData(fileRecord);\n      } else {\n        formData = new FormData();\n        formData.append('file', fileRecord.file as File);\n        formData.append('filename', fileRecord.name());\n      }\n      const promise = this.doUpload(\n        url,\n        headers,\n        formData,\n        (progressEvent) => {\n          const percentCompleted = (progressEvent.loaded * 100) / progressEvent.total;\n          // do not complete until promise resolved\n          fileRecord.progress(percentCompleted >= 100 ? 99.9999 : percentCompleted);\n          updateOverallProgress();\n        },\n        (xhr) => {\n          fileRecord.xhr = xhr;\n          if (typeof configureFn === 'function') {\n            configureFn(xhr);\n          }\n        }\n      );\n      promises.push(\n        new Promise((resolve, reject) => {\n          promise.then(\n            (response) => {\n              delete fileRecord.xhr;\n              fileRecord.upload.data = response.data;\n              fileRecord.upload.error = false;\n              fileRecord.progress(100);\n              if (fileRecord.xhrQueue) {\n                fileRecord.xhrQueue();\n                delete fileRecord.xhrQueue;\n              }\n              resolve(response);\n            } /* */,\n            (err) => {\n              this.prepareUploadError(fileRecord, err);\n              resolve(err);\n              failedUploadsCount++;\n            } /* */\n          );\n        })\n      );\n    }\n    // return Promise.all(promises);\n    return new Promise((resolve, reject) => {\n      Promise.all(promises).then((responses) => {\n        if (failedUploadsCount === promises.length) {\n          // all uploads failed\n          reject(responses);\n          return;\n        }\n        resolve(responses);\n      }, reject);\n    });\n  }\n\n  public deleteUpload(\n    url: string,\n    headers: object,\n    fileRecord: FileRecord,\n    uploadData?: any,\n    configureFn?: ConfigureFn\n  ) {\n    return new Promise((resolve, reject) => {\n      if (fileRecord.xhr) {\n        fileRecord.xhr.abort();\n      }\n      if (uploadData === undefined) {\n        uploadData = fileRecord.upload.data;\n      }\n      if (uploadData) {\n        this.doDeleteUpload(url, headers, uploadData, (xhr) => {\n          if (typeof configureFn === 'function') {\n            configureFn(xhr);\n          }\n        }).then(\n          (result) => {\n            resolve(result);\n          },\n          (err) => {\n            this.prepareUploadError(fileRecord, err);\n            reject(err);\n          }\n        );\n      }\n    });\n  }\n\n  public updateUpload(\n    url: string,\n    headers: object,\n    fileRecord: FileRecord,\n    uploadData: any,\n    configureFn?: ConfigureFn\n  ) {\n    return new Promise((resolve, reject) => {\n      if (fileRecord.xhr) {\n        // probably updated while being uploaded.\n        fileRecord.xhrQueue = () => {\n          this.updateUpload(url, headers, fileRecord, uploadData);\n        };\n        return resolve(undefined);\n      }\n      if (uploadData === undefined) {\n        uploadData = fileRecord.upload.data || {};\n        uploadData.old_filename = fileRecord.oldFileName;\n        uploadData.filename = fileRecord.name();\n      }\n      if (uploadData) {\n        this.doUpdateUpload(url, headers, uploadData, (xhr) => {\n          if (typeof configureFn === 'function') {\n            configureFn(xhr);\n          }\n        }).then(\n          (response) => {\n            fileRecord.upload.data = response.data;\n            fileRecord.upload.error = false;\n            resolve(response);\n          },\n          (err) => {\n            this.prepareUploadError(fileRecord, err);\n            reject(err);\n          }\n        );\n      }\n    });\n  }\n\n  public doTusUpload(\n    tus: any,\n    url: string,\n    fileRecord: FileRecord,\n    headers: object,\n    progressCallback: ProgressFn,\n    tusOptionsFn?: TusOptionsFn,\n    uploadWithCredentials?: boolean\n  ) {\n    const tusOptions: TusOptions = tusOptionsFn ? tusOptionsFn(fileRecord) : {};\n    return new Promise((resolve, reject) => {\n      if (!tus) {\n        return reject(new Error('tus required. Please install tus-js-client'));\n      }\n      // https://github.com/tus/tus-js-client\n      // Create a new tus upload\n      const file = fileRecord.file;\n      const upload = new tus.Upload(file, {\n        endpoint: url,\n        headers,\n        retryDelays: tusOptions.retryDelays ? tusOptions.retryDelays : [0, 3000, 5000, 10000, 20000],\n        metadata: tusOptions.metadata\n          ? tusOptions.metadata\n          : {\n              filename: file.name,\n              filetype: file.type,\n            },\n        onError(error: any) {\n          reject(error);\n          // console.log(\"Failed because: \" + error)\n        },\n        onProgress(bytesUploaded: number, bytesTotal: number) {\n          const event = { loaded: bytesUploaded, total: bytesTotal } as ProgressEvent;\n          progressCallback(event);\n        },\n        onSuccess() {\n          resolve(upload);\n        },\n        onBeforeRequest: function (req: any) {\n          const xhr: XMLHttpRequest = req.getUnderlyingObject();\n          xhr.withCredentials = uploadWithCredentials === true;\n        },\n      });\n      fileRecord.tusUpload = upload;\n      // Start the upload\n      upload.start();\n    });\n  }\n\n  public tusUpload(\n    tus: any,\n    url: string,\n    headers: object,\n    fileRecords: FileRecord[],\n    progressFn?: (progress: number) => void,\n    tusOptionsFn?: TusOptionsFn,\n    uploadWithCredentials?: boolean\n  ) {\n    let updateOverallProgress = () => {\n      /* no op */\n    };\n    if (progressFn) {\n      updateOverallProgress = () => {\n        let prgTotal = 0;\n        for (const fileRecord of fileRecords) {\n          prgTotal += fileRecord.progress() as number;\n        }\n        progressFn(prgTotal / fileRecords.length);\n      };\n    }\n    const promises = [];\n    for (const fileRecord of fileRecords) {\n      const promise = this.doTusUpload(\n        tus,\n        url,\n        fileRecord,\n        headers,\n        (progressEvent: ProgressEvent) => {\n          const percentCompleted = (progressEvent.loaded * 100) / progressEvent.total;\n          // do not complete until promise resolved\n          fileRecord.progress(percentCompleted >= 100 ? 99.9999 : percentCompleted);\n          updateOverallProgress();\n        },\n        tusOptionsFn,\n        uploadWithCredentials\n      );\n      promise.then(\n        (response) => {\n          // delete fileRecord.tusUpload;\n          fileRecord.progress(100);\n        },\n        (err) => {\n          this.prepareUploadError(fileRecord, err);\n        }\n      );\n      promises.push(promise);\n    }\n    return Promise.all(promises);\n  }\n\n  public tusDeleteUpload(tus: any, url: string, headers: object, fileRecord: FileRecord) {\n    return new Promise((resolve, reject) => {\n      if (!tus) {\n        return reject('tus required');\n      }\n      if (!fileRecord.tusUpload) {\n        return resolve(undefined);\n      }\n      // const shouldTerminate = true;\n      const abort = (shouldTerminate: boolean) => {\n        return new Promise((res, rej) => {\n          fileRecord.tusUpload.abort(shouldTerminate, (err: any) => {\n            if (err) {\n              this.prepareUploadError(fileRecord, err);\n              rej(err);\n              return;\n            }\n            res(undefined);\n          });\n        });\n      };\n      abort(false).then(() => {\n        window.setTimeout(() => {\n          abort(true).then(resolve, reject);\n        }, 1000);\n      });\n    });\n  }\n}\n\nexport default new UploadHelper();\n","var plugins = {\n  tus: null as any,\n};\n\nexport default plugins;","<template>\n  <div\n    :id=\"'vfa-' + uniqueId\"\n    :class=\"[\n      'is-sortable-' + (isSortable ? 'enabled' : 'disabled'),\n      {\n        'is-sortable-hold': sortable === 'hold',\n        'is-sortable-handle': sortable === 'handle',\n        'is-sortable-immediately': sortable === true,\n        'is-sorting': isSorting,\n        'is-sorting-active': isSortingActive,\n        'is-drag-over': isDragging,\n        'is-disabled': disabled === true,\n        'is-readonly': readonly === true,\n        'is-drag-valid': !(disabled === true || readonly === true || (hasMultiple && !canAddMore)),\n      },\n      'theme-' + theme,\n    ]\"\n    @dragover=\"dragOver\"\n    @dragenter=\"dragEnter\"\n    @dragleave=\"dragLeave\"\n    @drop=\"drop\"\n  >\n    <slot name=\"before-outer\" />\n    <div\n      class=\"grid-block-wrapper vue-file-agent file-input-wrapper\"\n      :class=\"{\n        'is-compact': !!compact,\n        'is-single': !hasMultiple,\n        'has-multiple': hasMultiple,\n        'no-meta': meta === false,\n      }\"\n    >\n      <slot name=\"before-inner\" />\n      <canvas ref=\"thumbnailCanvas\" style=\"position: fixed; visibility: hidden; z-index: -3\" />\n      <div\n        v-if=\"overallProgress\"\n        class=\"overall-progress\"\n        :class=\"{'overall-progress-full': overallProgress >= 100}\"\n      >\n        <div class=\"overall-progress-bar\" :style=\"{width: overallProgress + '%'}\" />\n        <div class=\"overall-progress-left\" :style=\"{width: 100 - overallProgress + '%'}\" />\n      </div>\n\n      <component\n        :is=\"isSortable ? 'SlickList' : 'VueFileList'\"\n        v-model:list=\"fileRecords\"\n        :axis=\"theme == 'list' ? 'y' : 'xy'\"\n        :append-to=\"'#vfa-' + uniqueId + ' .vue-file-agent'\"\n        :transition-duration=\"transitionDuration\"\n        :press-delay=\"sortable === 'hold' ? 200 : 0\"\n        :use-drag-handle=\"sortable === 'handle'\"\n        :helper-class=\"'active-sorting-item'\"\n        @sort-start=\"sortStart()\"\n        @sort-end=\"sortEnd($event)\"\n      >\n        <transition-group name=\"grid-box\" tag=\"div\" class=\"\">\n          <component\n            :is=\"isSortable ? 'SlickItem' : 'VueFileListItem'\"\n            v-for=\"(element, index) in fileRecords\"\n            :key=\"element.id\"\n            class=\"file-preview-wrapper grid-box-item grid-block\"\n            :index=\"index\"\n          >\n            <slot name=\"file-preview-before\" :file-record=\"element\" :file-data=\"element\" />\n            <slot name=\"file-preview\" :file-record=\"element\" :file-data=\"element\">\n              <VueFilePreview\n                :average-color=\"averageColor\"\n                :file-record=\"element\"\n                :deletable=\"isDeletable\"\n                :editable=\"editable === true\"\n                :linkable=\"linkable === true\"\n                :error-text=\"errorText\"\n                :disabled=\"disabled\"\n                :thumbnail-size=\"thumbnailSize\"\n                :with-credentials=\"withCredentials\"\n                class=\"\"\n                @remove=\"removeFileRecord($event)\"\n                @rename=\"filenameChanged($event)\"\n                @dismisserror=\"dismissError($event)\"\n              />\n            </slot>\n            <slot name=\"file-preview-after\" :file-record=\"element\" :file-data=\"element\" />\n          </component>\n          <template v-if=\"canAddMore && readonly !== true\">\n            <slot name=\"file-preview-new\">\n              <div key=\"new\" class=\"file-preview-wrapper grid-box-item grid-block file-preview-new\">\n                <span class=\"file-preview\">\n                  <span style=\"position: absolute; top: 0; right: 0; bottom: 0; left: 0\">\n                    <VueFileIcon name=\"system-file-preview-new\" />\n                    <span class=\"help-text\">{{ helpTextComputed }}</span>\n                  </span>\n                </span>\n              </div>\n            </slot>\n          </template>\n        </transition-group>\n      </component>\n      <input\n        v-if=\"readonly !== true\"\n        ref=\"fileInput\"\n        title=\"\"\n        :disabled=\"disabled === true || (hasMultiple && !canAddMore)\"\n        type=\"file\"\n        :multiple=\"hasMultiple\"\n        class=\"file-input\"\n        :accept=\"accept || '*'\"\n        :capture=\"capture\"\n        @change=\"filesChanged\"\n      />\n      <slot name=\"after-inner\" />\n    </div>\n    <slot name=\"after-outer\" />\n  </div>\n</template>\n<script lang=\"ts\">\nimport {defineComponent, PropType} from 'vue'\nimport {SlickItem, SlickList} from 'vue-slicksort'\nimport utils from '../lib/utils'\nimport VueFileIcon from './VueFileIcon.vue'\nimport VueFilePreview from './VueFilePreview.vue'\nimport VueFileList from './VueFileList.vue'\nimport VueFileListItem from './VueFileListItem.vue'\nimport {ErrorText, default as FileRecord, RawFileRecord} from '../lib/file-record'\nimport uploader, {CreateFormDataFn} from '../lib/upload-helper'\nimport plugins from '../lib/plugins'\nimport {ConfigureFn} from '../lib/ajax-request'\nimport {Sortable, SortEvent} from '../types'\nimport {FileAgentFile} from '../lib/interfaces'\n\nlet dragCounter = 0\n\nexport default /* #__PURE__ */ defineComponent({\n  name: 'VueFileAgent',\n  components: {\n    VueFileIcon,\n    VueFilePreview,\n    VueFileList,\n    VueFileListItem,\n    SlickList,\n    SlickItem,\n  },\n  directives: {\n    // https://github.com/Jexordexan/vue-slicksort/blob/master/src/HandleDirective.js\n    vfaSortableHandle: {\n      beforeMount(el: HTMLElement) {\n        ;(el as any).sortableHandle = true\n      },\n    },\n  },\n  props: {\n    accept: String,\n    auto: {\n      type: Boolean,\n      required: false,\n      default: undefined,\n    },\n    averageColor: Boolean,\n    capture: {\n      type: String as PropType<boolean | 'user' | 'environment'>,\n      required: false,\n    },\n    compact: Boolean,\n    deletable: Boolean,\n    disabled: Boolean,\n    editable: Boolean,\n    errorText: {\n      type: Object as PropType<ErrorText>,\n      required: false,\n    },\n    helpText: String,\n    linkable: Boolean,\n    maxFiles: Number,\n    maxSize: String,\n    meta: {\n      type: Boolean,\n      default: true,\n    },\n    multiple: Boolean,\n    // progress: any\n    read: Boolean,\n    readonly: Boolean,\n    resumable: Boolean,\n    sortable: {\n      type: [String, Boolean] as PropType<Sortable>,\n    },\n    theme: String,\n    thumbnailSize: Number,\n    uploadConfig: {\n      type: Function as PropType<CreateFormDataFn>,\n      required: false,\n    },\n    uploadHeaders: {\n      type: Object,\n    },\n    uploadUrl: String,\n    uploadWithCredentials: Boolean,\n    rawModelValue: Array<RawFileRecord>,\n  },\n  emits: [\n    'beforedelete',\n    'change',\n    'delete',\n    'drop',\n    'rename',\n    'select',\n    'sort',\n    'upload',\n    'upload:error',\n    'upload:delete',\n    'upload:delete:error',\n    'upload:update',\n    'upload:update:error',\n    'update:modelValue',\n    'update:rawModelValue',\n  ],\n  data() {\n    return {\n      fileRecords: [] as FileRecord[],\n      rawFileRecords: [] as RawFileRecord[],\n      isDragging: false,\n      isSorting: false,\n      isSortingActive: false,\n      transitionDuration: 300,\n      overallProgress: 0,\n      uniqueId: '',\n      sortTimeout: 0,\n    }\n  },\n  computed: {\n    withCredentials(): boolean | undefined {\n      return this.uploadWithCredentials\n    },\n    canAddMore(): boolean {\n      if (!this.hasMultiple) {\n        return this.fileRecords.length === 0\n      }\n      if (!this.maxFiles) {\n        return true\n      }\n      return this.fileRecords.length < this.maxFiles\n    },\n    helpTextComputed(): string {\n      if (this.helpText) {\n        return this.helpText\n      }\n      return `Choose ${this.hasMultiple ? 'files' : 'file'} or drag & drop here`\n    },\n    isDeletable(): boolean {\n      if (typeof this.deletable === 'string') {\n        return this.deletable !== 'false'\n      }\n      return !!this.deletable\n    },\n    isSortable(): boolean {\n      return !!this.sortable\n    },\n    hasMultiple(): boolean {\n      if (typeof this.multiple === 'string') {\n        return this.multiple !== 'false'\n      }\n      if (this.multiple === undefined) {\n        return Array.isArray(this.fileRecords)\n      }\n      return !!this.multiple\n    },\n    shouldRead(): boolean {\n      return this.read\n    },\n    dragOptions() {\n      return {\n        animation: this.transitionDuration,\n        group: this.uniqueId,\n        disabled: this.isSortable,\n        ghostClass: 'ghost',\n      }\n    },\n  },\n  watch: {\n    rawModelValue: {\n      handler() {\n        this.checkValue()\n      },\n      deep: true,\n    },\n  },\n  created() {\n    this.uniqueId = new Date().getTime().toString(36) + Math.random().toString(36).slice(2)\n    this.checkValue()\n  },\n  methods: {\n    createThumbnail(fileRecord: FileRecord, video: HTMLVideoElement): Promise<void> {\n      return new Promise((resolve, reject) => {\n        const canvas = document.createElement('canvas')\n        utils\n          .createVideoThumbnail(\n            video,\n            canvas,\n            fileRecord.thumbnailSize,\n            this.averageColor !== false,\n            this.withCredentials\n          )\n          .then((thumbnail) => {\n            fileRecord.imageColor = thumbnail.color\n            fileRecord.videoThumbnail = thumbnail.url\n            fileRecord.dimensions.width = thumbnail.width\n            fileRecord.dimensions.height = thumbnail.height\n            resolve()\n          }, reject)\n      })\n    },\n    initVideo(fileRecord: FileRecord): void {\n      if (!fileRecord.isPlayableVideo()) {\n        return\n      }\n      const {createObjectURL} = window.URL || window.webkitURL || {}\n      const {revokeObjectURL} = window.URL || window.webkitURL || {}\n      const video = document.createElement('video')\n      video.src = createObjectURL(fileRecord.file)\n      this.createThumbnail(fileRecord, video).then(() => {\n        revokeObjectURL(video.src)\n      })\n      video.load()\n    },\n    getFileRecordOrRawInstance(\n      fileRecordOrRaw: FileRecord | RawFileRecord,\n      raw: boolean\n    ): FileRecord | RawFileRecord {\n      let i\n      if (fileRecordOrRaw instanceof FileRecord) {\n        i = this.fileRecords.indexOf(fileRecordOrRaw)\n      } else {\n        i = this.rawFileRecords.indexOf(fileRecordOrRaw)\n      }\n      if (i === -1) {\n        return fileRecordOrRaw\n      }\n      return raw ? this.rawFileRecords[i] : this.fileRecords[i]\n    },\n    getFileRecordRawInstance(fileRecordOrRaw: FileRecord | RawFileRecord): RawFileRecord {\n      return this.getFileRecordOrRawInstance(fileRecordOrRaw, true) as RawFileRecord\n    },\n    getFileRecordInstance(fileRecordOrRaw: FileRecord | RawFileRecord): FileRecord {\n      return this.getFileRecordOrRawInstance(fileRecordOrRaw, false) as FileRecord\n    },\n    prepareConfigureFn(configureXhr?: ConfigureFn) {\n      const withCredentials = this.uploadWithCredentials\n      if (withCredentials !== true && withCredentials !== false) {\n        return configureXhr\n      }\n      return (request: XMLHttpRequest) => {\n        request.withCredentials = withCredentials\n        if (typeof configureXhr === 'function') {\n          configureXhr(request)\n        }\n      }\n    },\n    upload(\n      url: string,\n      headers: object,\n      fileRecordsOrRaw: FileRecord[] | RawFileRecord[],\n      createFormData?: (fileRecord: FileRecord) => FormData,\n      configureXhr?: ConfigureFn\n    ): Promise<any> {\n      const validFileRecords: FileRecord[] = []\n      const validFilesRawData: RawFileRecord[] = []\n      for (const fileRecordOrRaw of fileRecordsOrRaw) {\n        const fileRecord = this.getFileRecordInstance(fileRecordOrRaw)\n        if (!fileRecord.error) {\n          validFileRecords.push(fileRecord)\n          validFilesRawData.push(this.getFileRecordRawInstance(fileRecord))\n        }\n      }\n      if (this.resumable) {\n        return uploader.tusUpload(\n          plugins.tus,\n          url,\n          headers,\n          validFileRecords,\n          (overallProgress) => {\n            this.overallProgress = overallProgress\n          },\n          this.resumable === true ? undefined : this.resumable,\n          this.uploadWithCredentials\n        )\n      }\n      return new Promise((resolve, reject) => {\n        uploader\n          .upload(\n            url,\n            headers,\n            validFileRecords,\n            createFormData,\n            (overallProgress) => {\n              this.overallProgress = overallProgress\n            },\n            this.prepareConfigureFn(configureXhr)\n          )\n          .then(\n            (res: any) => {\n              for (let i = 0; i < res.length; i++) {\n                res[i].fileRecord = validFilesRawData[i]\n              }\n              this.$emit('upload', res)\n              resolve(res)\n            },\n            (err: any) => {\n              for (let i = 0; i < err.length; i++) {\n                err[i].fileRecord = validFilesRawData[i]\n              }\n              this.$emit('upload:error', err)\n              reject(err)\n            }\n          )\n      })\n    },\n    deleteUpload(\n      url: string,\n      headers: object,\n      fileRecordOrRaw: FileRecord | RawFileRecord,\n      uploadData?: any,\n      configureXhr?: ConfigureFn\n    ): Promise<any> {\n      if (this.fileRecords.length < 1) {\n        this.overallProgress = 0\n      }\n      const fileRecord = this.getFileRecordInstance(fileRecordOrRaw)\n      const rawFileRecord = this.getFileRecordRawInstance(fileRecordOrRaw)\n      if (this.resumable) {\n        return uploader.tusDeleteUpload(plugins.tus, url, headers, fileRecord)\n      }\n      return new Promise((resolve, reject) => {\n        uploader\n          .deleteUpload(\n            url,\n            headers,\n            fileRecord as FileRecord,\n            uploadData,\n            this.prepareConfigureFn(configureXhr)\n          )\n          .then(\n            (res: any) => {\n              res.fileRecord = rawFileRecord\n              this.$emit('upload:delete', res)\n              resolve(res)\n            },\n            (err: any) => {\n              err.fileRecord = rawFileRecord\n              this.$emit('upload:delete:error', err)\n              reject(err)\n            }\n          )\n      })\n    },\n    updateUpload(\n      url: string,\n      headers: object,\n      fileRecord: FileRecord | RawFileRecord,\n      uploadData?: any,\n      configureXhr?: ConfigureFn\n    ): Promise<any> {\n      fileRecord = this.getFileRecordInstance(fileRecord)\n      const rawFileRecord = this.getFileRecordRawInstance(fileRecord)\n      return new Promise((resolve, reject) => {\n        uploader\n          .updateUpload(\n            url,\n            headers,\n            fileRecord as FileRecord,\n            uploadData,\n            this.prepareConfigureFn(configureXhr)\n          )\n          .then(\n            (res: any) => {\n              res.fileRecords = rawFileRecord\n              this.$emit('upload:update', res)\n              resolve(res)\n            },\n            (err) => {\n              err.fileRecords = rawFileRecord\n              this.$emit('upload:update:error', err)\n              reject(err)\n            }\n          )\n      })\n    },\n    autoUpload(fileRecords: FileRecord[]): Promise<any> {\n      if (!this.uploadUrl || this.auto === false) {\n        return Promise.resolve(false)\n      }\n      return this.upload(\n        this.uploadUrl,\n        this.uploadHeaders as object,\n        fileRecords,\n        this.uploadConfig\n      )\n    },\n    autoDeleteUpload(fileRecord: FileRecord | RawFileRecord): Promise<any> {\n      if (!this.uploadUrl || this.auto === false) {\n        return Promise.resolve(false)\n      }\n      return this.deleteUpload(\n        this.uploadUrl,\n        this.uploadHeaders as object,\n        fileRecord,\n        this.uploadConfig\n      )\n    },\n    autoUpdateUpload(fileRecord: FileRecord): Promise<any> {\n      if (!this.uploadUrl || this.auto === false) {\n        return Promise.resolve(false)\n      }\n      return this.updateUpload(\n        this.uploadUrl,\n        this.uploadHeaders as object,\n        fileRecord,\n        this.uploadConfig\n      )\n    },\n    equalFiles(file1: FileAgentFile, file2: FileAgentFile): boolean {\n      return (\n        true &&\n        file1.name === file2.name &&\n        file1.size === file2.size &&\n        file1.type === file2.type &&\n        file1.fullPath === file2.fullPath &&\n        // file1.lastModifiedDate.getTime() === file2.lastModifiedDate.getTime() &&\n        file1.lastModified === file2.lastModified\n      )\n    },\n    isFileAddedAlready(file: FileAgentFile): boolean {\n      for (const fileRecord of this.fileRecords) {\n        if (this.equalFiles(file, fileRecord.file as FileAgentFile)) {\n          return true\n        }\n      }\n      return false\n    },\n    handleFiles(files: File[] | FileList): void {\n      if (this.disabled === true || this.readonly === true) {\n        return\n      }\n      if (this.hasMultiple && !this.canAddMore) {\n        return\n      }\n      const fileRecords: FileRecord[] = []\n      const filesFiltered: File[] = []\n      // tslint:disable-next-line\n      for (let i = 0; i < files.length; i++) {\n        if (this.hasMultiple && this.isFileAddedAlready(files[i] as FileAgentFile)) {\n          continue\n        }\n        // skip hidden/system files\n        if (!files[i].name.startsWith('.')) {\n          filesFiltered.push(files[i])\n        }\n      }\n      files = filesFiltered\n      if (\n        this.hasMultiple &&\n        this.maxFiles &&\n        files.length > this.maxFiles - this.fileRecords.length\n      ) {\n        files = files.slice(0, this.maxFiles - this.fileRecords.length)\n      }\n      for (const file of files) {\n        fileRecords.push(\n          new FileRecord(\n            {\n              file,\n            } as RawFileRecord,\n            {\n              read: this.shouldRead,\n              maxSize: this.maxSize,\n              accept: this.accept,\n              thumbnailSize: this.thumbnailSize,\n              averageColor: this.averageColor,\n              withCredentials: this.withCredentials,\n            }\n          )\n        )\n      }\n\n      for (const fileRecord of fileRecords) {\n        if (fileRecord.file.size <= 20 * 1024 * 1024) {\n          // <= 20MB\n          this.initVideo(fileRecord)\n        }\n      }\n      if (this.hasMultiple) {\n        // splice: for list transitions to work properly\n        this.fileRecords.splice(this.fileRecords.length, 0, ...fileRecords)\n      } else {\n        this.fileRecords = fileRecords\n      }\n\n      FileRecord.readFiles(fileRecords).then((fileRecordsNew: FileRecord[]) => {\n        const allFileRecordsRaw = FileRecord.toRawArray(this.fileRecords)\n        this.rawFileRecords = allFileRecordsRaw\n\n        this.$emit('update:rawModelValue', this.rawFileRecords)\n        this.$emit('select', fileRecordsNew)\n      })\n      this.autoUpload(fileRecords)\n    },\n    filesChanged(event: Event): void {\n      let files: File[] | FileList = (event.target as HTMLInputElement).files as FileList\n      this.$emit('change', event)\n      if (!files[0]) {\n        return\n      }\n      if (!this.hasMultiple) {\n        files = [files[0]]\n      }\n      this.handleFiles(files)\n      if (this.$refs.fileInput) {\n        ;(this.$refs.fileInput as any).value = null // do not use ''\n        // because chrome won't fire change event for same file\n      }\n    },\n    drop(event: DragEvent): void {\n      event.stopPropagation()\n      event.preventDefault()\n      dragCounter = 0\n      this.isDragging = false\n      if (this.disabled === true || this.readonly === true) {\n        return\n      }\n      if (!event.dataTransfer) {\n        return\n      }\n      utils.getFilesFromDroppedItems(event.dataTransfer).then((files) => {\n        this.$emit('drop', event)\n        if (!files || !files[0]) {\n          return\n        }\n        if (!this.hasMultiple) {\n          files = [files[0]] as FileAgentFile[]\n        }\n        this.handleFiles(files)\n      })\n    },\n    dragEnter(event: DragEvent): void {\n      if (!event.dataTransfer) {\n        return\n      }\n      this.isDragging = true\n      event.stopPropagation()\n      event.preventDefault()\n      dragCounter++\n      event.dataTransfer.dropEffect = 'copy' // Explicitly show this is a copy.\n    },\n    dragOver(event: DragEvent): void {\n      if (!event.dataTransfer) {\n        return\n      }\n      this.isDragging = true\n      event.stopPropagation()\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'copy' // Explicitly show this is a copy.\n    },\n    dragLeave(event: DragEvent): void {\n      if (!event.dataTransfer) {\n        return\n      }\n      dragCounter--\n      if (dragCounter === 0) {\n        this.isDragging = false\n      }\n    },\n    removeFileRecord(fileRecord: FileRecord): void {\n      this.$emit('beforedelete', fileRecord)\n\n      if (!this.uploadUrl || this.auto === false) {\n        const i = this.fileRecords.indexOf(fileRecord)\n\n        if (i !== -1) {\n          this.fileRecords.splice(i, 1)[0]\n          this.rawFileRecords.splice(i, 1)[0]\n          this.$emit('update:rawModelValue', this.rawFileRecords)\n        }\n\n        return\n      }\n      this.deleteFileRecord(fileRecord)\n    },\n    dismissError(fileRecord: FileRecord): void {\n      const i = this.fileRecords.indexOf(fileRecord)\n\n      if (i !== -1) {\n        this.fileRecords[i].error = false\n        this.rawFileRecords[i].error = false\n        this.$emit('update:rawModelValue', this.rawFileRecords)\n      }\n    },\n    deleteFileRecord(fileRecordOrRaw: FileRecord): void {\n      const i = this.fileRecords.indexOf(fileRecordOrRaw)\n      let fileRecord = this.fileRecords[i]\n      let rawFileRecord = this.rawFileRecords[i]\n\n      this.$emit('update:rawModelValue', this.rawFileRecords)\n      this.$emit('delete', fileRecord)\n\n      fileRecord = this.fileRecords.splice(i, 1)[0]\n      rawFileRecord = this.rawFileRecords.splice(i, 1)[0]\n\n      this.autoDeleteUpload(fileRecord).then(\n        () => {\n          /* no op */\n        },\n        () => {\n          this.fileRecords.splice(i, 0, fileRecord)\n          this.rawFileRecords.splice(i, 0, rawFileRecord)\n        }\n      )\n    },\n    filenameChanged(fileRecord: FileRecord): void {\n      const i = this.fileRecords.indexOf(fileRecord)\n      this.fileRecords[i] = fileRecord\n      this.rawFileRecords[i] = fileRecord.toRaw()\n\n      this.$emit('update:rawModelValue', this.rawFileRecords)\n      this.$emit('rename', fileRecord)\n\n      this.autoUpdateUpload(fileRecord).then(\n        () => {\n          /* no op */\n        },\n        () => {\n          fileRecord.customName = fileRecord.oldCustomName\n          this.rawFileRecords[i] = fileRecord.toRaw()\n\n          this.$emit('update:rawModelValue', this.rawFileRecords)\n        }\n      )\n    },\n    checkValue(): void {\n      if (this.rawFileRecords === this.rawModelValue) {\n        this.$emit('update:modelValue', this.fileRecords)\n        return\n      }\n\n      let rawFileRecords: RawFileRecord[] = this.rawModelValue || []\n      rawFileRecords = Array.isArray(rawFileRecords) ? rawFileRecords : [rawFileRecords]\n\n      const fdPromises: Array<Promise<FileRecord>> = []\n      const rawFileRecordsNew: RawFileRecord[] = []\n\n      for (let i = 0; i < rawFileRecords.length; i++) {\n        const existingIndex = this.rawFileRecords.indexOf(rawFileRecords[i])\n        if (existingIndex !== -1) {\n          fdPromises.push(\n            FileRecord.fromRaw(rawFileRecords[i], {\n              read: this.shouldRead,\n              maxSize: this.maxSize,\n              accept: this.accept,\n              thumbnailSize: this.thumbnailSize,\n              averageColor: this.averageColor,\n              withCredentials: this.withCredentials,\n            })\n          )\n          rawFileRecordsNew[i] = this.rawFileRecords[existingIndex]\n        } else {\n          fdPromises.push(\n            FileRecord.fromRaw(rawFileRecords[i], {\n              read: this.shouldRead,\n              maxSize: this.maxSize,\n              accept: this.accept,\n              thumbnailSize: this.thumbnailSize,\n              averageColor: this.averageColor,\n              withCredentials: this.withCredentials,\n            })\n          )\n          rawFileRecordsNew.push(rawFileRecords[i])\n        }\n      }\n\n      this.rawFileRecords = rawFileRecordsNew\n      Promise.all(fdPromises).then((fileRecords) => {\n        this.fileRecords = fileRecords\n\n        this.$emit('update:modelValue', this.fileRecords)\n        this.$emit('update:rawModelValue', this.rawFileRecords)\n      })\n    },\n    sortStart(): void {\n      if (this.sortTimeout) {\n        window.clearTimeout(this.sortTimeout)\n      }\n      this.isSorting = true\n      this.isSortingActive = true\n    },\n    sortEnd(sortData: SortEvent): void {\n      this.isSortingActive = false\n      if (this.sortTimeout) {\n        clearTimeout(this.sortTimeout)\n      }\n      this.sortTimeout = window.setTimeout(() => {\n        this.isSorting = false\n      }, this.transitionDuration + 100)\n      this.sort(sortData.oldIndex, sortData.newIndex)\n    },\n    sort(from: number, to: number) {\n      if (from !== to) {\n        const rawFileRecords = utils.arrayMove(this.rawFileRecords, from, to)\n        this.$nextTick(() => {\n          this.$emit('update:rawModelValue', rawFileRecords)\n          this.$emit(\n            'sort',\n            {\n              oldIndex: from,\n              newIndex: to,\n            },\n            rawFileRecords\n          )\n        })\n      }\n    },\n  },\n})\n</script>\n<style lang=\"scss\">\n@import '../scss/vue-file-agent.scss';\n</style>\n","import VueFileIcon from './VueFileIcon.vue';\nimport VueFilePreview from './VueFilePreview.vue';\nimport VueFileList from './VueFileList.vue';\nimport VueFileListItem from './VueFileListItem.vue';\nimport VueFileAgent from './VueFileAgent.vue';\n\nexport default {\n  VueFileIcon,\n  VueFilePreview,\n  VueFileList,\n  VueFileListItem,\n  VueFileAgent,\n}\n","import {App, Plugin} from 'vue'\nimport Components from './components'\nimport './scss/vue-file-agent.scss'\n\n// All available components\n// Keep this list in sync with /components/index.ts please\nimport VueFileIcon from './components/VueFileIcon.vue'\nimport VueFilePreview from './components/VueFilePreview.vue'\nimport VueFileList from './components/VueFileList.vue'\nimport VueFileListItem from './components/VueFileListItem.vue'\nimport VueFileAgent from './components/VueFileAgent.vue'\n\n// Export available utils\nexport {default as plugins} from './lib/plugins'\n\n// Export components\nexport {VueFileIcon, VueFilePreview, VueFileList, VueFileListItem, VueFileAgent}\n\n// Export types\nexport type {Sortable, SortEvent} from './types'\nexport type {RawFileRecord} from './lib/file-record'\n\n// Export common stuff\nexport type {default as FileRecord} from './lib/file-record'\n\n// Inject all components into the global @vue/runtime-core\n// This allows intellisense in templates w/out direct importing\ndeclare module '@vue/runtime-core' {\n  export interface GlobalComponents {\n    VueFileIcon: typeof VueFileIcon\n    VueFilePreview: typeof VueFilePreview\n    VueFileList: typeof VueFileList\n    VueFileListItem: typeof VueFileListItem\n    VueFileAgent: typeof VueFileAgent\n  }\n}\n\n// Main app plugin\nconst plugin: Plugin = {\n  install(app: App) {\n    Object.entries(Components).forEach(([name, component]) => {\n      app.component(name, component)\n    })\n  },\n}\n\nexport {plugin as VueFileAgentNext}\nexport default plugin\n"],"names":["c","SvgIcon","paths","color","viewBox","__publicField","playIconPaths","icons","category","extensionsMap","cat","extensions","ext","getIconByName","name","getIconFromExt","_sfc_main$4","defineComponent","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_Fragment","_renderList","_ctx","d","index","getFilesFromDroppedItems","dataTransfer","resolve","includesFolder","files","folderReadQueue","i","item","fileSystemEntries","getEntries","file","filesInFolders","entry","directory","entryReader","readEntries","entries","iterateEntry","entryFiles","entryFile","transfer","Utils","arr","previousIndex","newIndex","array","k","arrLength","step","len","preparedStep","redTotal","greenTotal","blueTotal","alphaTotal","count","alpha","red","green","blue","video","canvas","thumbnailSize","calculateAverageColor","withCredentials","reject","loadedmetadata","loadeddata","tryGetThumbnail","context","imageData","url","reader","event","buffer","view","length","offset","marker","little","tags","srcOrientation","ctx","width","height","image","widthLimit","heightLimit","orientation","avgColor","rgba","resized","createObjectURL","revokeObjectURL","shouldRevoke","orientationPromise","dataUrl","bytes","sizes","size","matches","text","value","h","s","hash","accept","acceptedFiles","mimeType","baseMimeType","validType","maxSize","utils","_sfc_main$3","VueFileIcon","fileRecord","thumbnail","wrapper","player","oldFilenameWithoutExt","timeout","completed","_hoisted_1","_hoisted_5","_hoisted_7","_hoisted_8","_hoisted_12","_hoisted_14","_hoisted_15","_resolveComponent","_normalizeClass","_createElementVNode","$event","_createVNode","_component_VueFileIcon","_createCommentVNode","_hoisted_6","_hoisted_9","_toDisplayString","_hoisted_10","_hoisted_11","_hoisted_13","_hoisted_17","_hoisted_18","_createBlock","_sfc_main$2","_sfc_render","_sfc_main$1","ElementMixin","isDisabled","disabled","node","Manager","ref","_a","_b","a","b","isTouch","hasOwnProperty","obj","prop","arrayMove","arrayRemove","arrayInsert","events","closest","el","fn","limit","min","max","getCSSPixelValue","stringValue","getElementMargin","element","style","getPointerOffset","reference","x","y","offsetParents","nodes","commonOffsetParent","node1","node2","parents1","parents2","getEdgeOffset","container","nodeOffset","cloneNode","fields","clonedNode","field","getLockPixelOffsets","lockOffset","minLockOffset","maxLockOffset","getLockPixelOffset","offsetX","offsetY","unit","match","resetTransform","setTransform","transform","duration","ContainerMixin","useHub","key","eventName","distance","shouldCancelStart","target","useDragHandle","pressThreshold","delta","active","getHelperDimensions","helperClass","hideSortableGhost","appendTo","margin","containerBoundingRect","dimensions","payload","removed","newValue","clientRect","useWindowAsScrollContainer","_window","sortableGhost","helper","helperBoundingRect","ghostRect","onEnd","cb","indexNode","targetX","targetY","scrollDifference","dest","destIndex","destRefs","destNode","ancestor","sourceOffset","targetOffset","newIndexNode","deltaScroll","cleanup","cleanupTimer","lockAxis","lockToContainerEdges","translate","minOffset","maxOffset","transitionDuration","sortingOffset","edgeOffset","nextNode","prevNode","direction","speed","acceleration","SlickItem","SlickList","FileRecord","data","options","rawFileRecord","isSync","promise","rawFileRecords","promises","fileRecords","err","withoutExt","rgb","darkPoint","svgIcon","errorText","error","raw","validSize","AjaxRequest","message","code","request","response","validateStatus","status","method","formData","configureFn","loadEvent","responseHeaders","responseData","contentType","ajax","UploadHelper","xhr","headers","progressCallback","uploadData","createFormData","progressFn","updateOverallProgress","prgTotal","failedUploadsCount","progressEvent","percentCompleted","responses","result","tus","tusOptionsFn","uploadWithCredentials","tusOptions","upload","bytesUploaded","bytesTotal","req","abort","shouldTerminate","res","rej","uploader","plugins","dragCounter","_sfc_main","VueFilePreview","VueFileList","VueFileListItem","fileRecordOrRaw","configureXhr","fileRecordsOrRaw","validFileRecords","validFilesRawData","overallProgress","file1","file2","filesFiltered","fileRecordsNew","allFileRecordsRaw","fdPromises","rawFileRecordsNew","existingIndex","sortData","from","to","_hoisted_2","_hoisted_3","_hoisted_4","args","_renderSlot","_normalizeStyle","_resolveDynamicComponent","_withCtx","_TransitionGroup","_component_VueFilePreview","Components","VueFileAgent","plugin","app","component"],"mappings":";;;;AAAA,MAAMA,IAAI;AAAA,EACR,OAAS;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAEA;AAAA,IAGA;AAAA,IACA;AAAA,EACF;AAAA,EACA,kBAAkB,CAAC,OAAO,OAAO,KAAK;AAAA,EACtC,SAAW,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,UAAU,KAAK,KAAK;AAAA,EACzE,MAAQ;AAAA,IAEN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,UAAY;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAEF;AAAA,EACA,YAAc,CAAC,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,UAAU,OAAO,MAAM,OAAO,KAAK;AAAA,EAClG,MAAQ,CAAC,OAAO,OAAO,OAAO,KAAK;AAAA,EACnC,OAAS,CAAC,MAAM,OAAO,OAAO,OAAO,QAAQ,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM;AAAA,EAC5F,QAAU;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,cAAgB,CAAC,OAAO,OAAO,OAAO,OAAO,MAAM;AAAA,EACnD,QAAU,CAAC,KAAK,SAAS,OAAO,MAAM,KAAK,QAAQ,MAAM,QAAQ,MAAM,SAAS,IAAI;AAAA,EACpF,OAAS,CAAC,OAAO,OAAO,OAAO,MAAM;AAAA,EACrC,QAAU;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,OAAS;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAEA;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAEA;AAAA,EACF;AAAA,EACA,kBAAkB,CAAC,OAAO,QAAQ,KAAK;AAAA,EACvC,KAAO,CAAC,KAAK;AAAA,EACb,KAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,MAAQ,CAAC,KAAK;AAAA,EACd,OAAS,CAAC,MAAM;AAAA,EAChB,KAAO,CAAC,KAAK;AAAA,EACb,QAAU,CAAC,QAAQ;AAAA,EACnB,MAAQ,CAAC,MAAM;AACjB;AC/GO,MAAMC,EAAQ;AAAA,EAEnB,YAAmBC,GAAwBC,GAAuBC,GAAkB;AAD7E,IAAAC,EAAA,kBAAmB;AACP,SAAA,QAAAH,GAAwB,KAAA,QAAAC,GAAuB,KAAA,UAAAC;AAAA,EAAmB;AACvF;AAEA,MAAME,KAAgB,CAAC,0FAA0F,GAE3GC,IAAQ;AAAA,EACZ,QAAU,IAAIN;AAAA,IACZ;AAAA,MACE;AAAA,MACA;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAAA,EACA,OAAS,IAAIA;AAAA,IACX;AAAA,MACE;AAAA,MAEA;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAAA,EACA,OAAS,IAAIA;AAAA,IACX;AAAA,MACE;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAAA,EACA,kBAAkB,IAAIA,EAAQK,IAAe,QAAQ,WAAW;AAAA,EAChE,kBAAkB,IAAIL,EAAQK,IAAe,WAAW,WAAW;AAAA,EACnE,SAAW,IAAIL;AAAA,IACb;AAAA,MACE;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAAA,EACA,QAAU,IAAIA;AAAA,IACZ;AAAA,MACE;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAAA,EACA,OAAS,IAAIA;AAAA,IACX;AAAA,MACE;AAAA,MACA;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAAA,EACA,KAAO,IAAIA;AAAA,IACT;AAAA,MACE;AAAA,MACA;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAAA,EACA,YAAc,IAAIA;AAAA,IAChB,CAAC,iFAAiF;AAAA,IAClF;AAAA,EACF;AAAA,EACA,OAAS,IAAIA;AAAA,IACX;AAAA,MACE;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAAA,EACA,QAAU,IAAIA;AAAA,IACZ;AAAA,MACE;AAAA,IACF;AAAA,EACF;AAAA,EACA,QAAU,IAAIA;AAAA,IACZ;AAAA,MACE;AAAA,IACF;AAAA,EACF;AAAA,EACA,MAAQ,IAAIA;AAAA,IACV;AAAA,MACE;AAAA,MACA;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAAA,EACA,MAAQ,IAAIA;AAAA,IACV,CAAC,iGAAiG;AAAA,IAClG;AAAA,EACF;AAAA,EACA,UAAY,IAAIA;AAAA,IACd;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAAA,EACA,KAAO,IAAIA;AAAA,IACT;AAAA,MACE;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAAA,EACA,OAAS,IAAIA;AAAA,IACX;AAAA,MACE;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAAA,EACA,cAAgB,IAAIA;AAAA,IAClB;AAAA,MACE;AAAA,MACA;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAAA,EACA,MAAQ,IAAIA;AAAA,IACV;AAAA,MACE;AAAA,MACA;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAAA,EACA,KAAO,IAAIA;AAAA,IACT;AAAA,MACE;AAAA,IACF;AAAA,IACA;AAAA,EACF;AAAA,EACA,OAAS,IAAIA;AAAA,IACX;AAAA,MACE;AAAA,IACF;AAAA,EACF;AAAA,EAEA,gBAAgB,IAAIA;AAAA,IAClB,CAAC,uGAAuG;AAAA,IACxG;AAAA,IACA;AAAA,EACF;AAAA,EACA,2BAA2B,IAAIA;AAAA,IAC7B;AAAA,MACE;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EAEA,0BAA0B,IAAIA,EAAQ,CAAC,+CAA+C,GAAG,QAAW,WAAW;AAAA,EAC/G,uBAAuB,IAAIA;AAAA,IACzB,CAAC,0FAA0F;AAAA,IAC3F;AAAA,IACA;AAAA,EACF;AAAA,EAEA,yBAAyB,IAAIA;AAAA,IAC3B;AAAA,MACE;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAEA,WAAWO,KAAYD;AACjB,EAAAA,EAAM,eAAeC,CAAQ,MAC9BD,EAAcC,GAAU,WAAWA;AAMjC,MAAMC,KAAqB,CAAA;AAElC,WAAWC,KAAOC;AACZ,MAAAA,EAAW,eAAeD,CAAG;AACpB,eAAAE,KAAQD,EAAmBD;AACpC,MAAAD,GAAcG,KAAOF;AAKpB,SAASG,GAAcC,GAAuB;AAE5C,SADUP,EAAcO,MAASP,EAAM;AAEhD;AAEO,SAASQ,GAAeH,GAAsB;AACnD,EAAAA,IAAMA,EAAI;AACV,QAAMF,IAAMD,GAAcG;AAC1B,SAAOC,GAAcH,CAAG;AAC1B;ACrLA,MAA+BM,KAAgB,gBAAAC,EAAA;AAAA,EAC7C,MAAM;AAAA,EACN,OAAO;AAAA,IACL,KAAK,EAAC,MAAM,QAAQ,UAAU,GAAK;AAAA,IACnC,MAAM,EAAC,MAAM,QAAQ,UAAU,GAAK;AAAA,IACpC,SAAS,EAAC,MAAM,QAAQ,UAAU,GAAK;AAAA,EACzC;AAAA,EACA,UAAU;AAAA,IACR,kBAA0B;AACxB,aAAI,CAAC,KAAK,WAAW,KAAK,QAAQ,KAAK,KAAK,UACnC,KAAK,KAAK,UAEZ,KAAK,UAAU,KAAK,UAAU;AAAA,IACvC;AAAA,IACA,OAAgB;AACd,aAAI,KAAK,OACAJ,GAAc,KAAK,IAAI,IAEhBE,GAAe,KAAK,MAAM,KAAK,MAAM,EAAE;AAAA,IAEzD;AAAA,EACF;AACF,CAAC;;;;;;eA/BGG,GAEWC,GAAAC,GAAAC,GAAAC,GAAA;;KADIC,EAAA,EAAA,GAAAC,EAAAC,GAAA,MAAAC,GAAAC,EAAA,KAAA,OAAA,CAAAC,GAAAC,YAAbL,EAAqCC,GAAA,MAAA;AAAA,MAAJG,KAAAL,EAAA,GAAAC,EAAA,QAAA;AAAA,QAAA,KAAAK;AAAA;;;;;;ACDhC,SAASC,GACdC,GACqC;AAC9B,SAAA,IAAI,QAAQ,CAACC,MAAY;AAC1B,QAAA,CAACC,GAAeF,CAAY;AACvB,aAAAC,EAAQD,EAAa,KAAK;AAGnC,UAAMG,IAAyB,CAAA,GACzBC,IAAkB,CAAA;AAExB,aAASC,IAAI,GAAGA,IAAIL,EAAa,MAAM,QAAQK,KAAK;AAC5C,YAAAC,IAAON,EAAa,MAAMK;AAC5B,UAAAC,EAAK,SAAS;AAChB;AAEI,YAAAC,IAAoBC,EAAWF,CAAI;AACzC,UAAIC;AACF,QAAAH,EAAgB,KAAKG,CAAiB;AAAA,WACjC;AACC,cAAAE,IAAOH,EAAK;AAClB,QAAIG,KACFN,EAAM,KAAKM,CAAqB;AAAA,MAEpC;AAAA,IACF;AACA,YAAQ,IAAIL,CAAe,EAAE,KAAK,CAACM,MAAmB;AACpD,MAAAT,EAAQE,EAAM,OAAO,GAAGO,CAAc,CAAC;AAAA,IAAA,CACxC;AAAA,EAAA,CACF;AACH;AAEA,SAASF,EAAWG,GAAkD;AAEpE,MAAIA,EAAM;AACD,WAAAH,EAAWG,EAAM,WAAA,CAAY;AAEtC,MAAIA,EAAM;AACD,WAAAH,EAAWG,EAAM,iBAAA,CAAkB;AAG5C,MAAI,CAAAA,EAAM;AAKH,WAAA,IAAI,QAAQ,CAACV,MAAY;AAC9B,UAAIW,IAAY;AAEhB,UAAID,EAAM,QAAQ;AAChB,QAAAA,EAAM,KAAK,CAACF,MAAeR,EAAQ,CAACQ,CAAqB,CAAC,CAAC;AAC3D;AAAA,MACF;AACA,UAAIE,EAAM,aAAa;AACrB,QAAAC,IAAYD,EAAM;AAElB,cAAMR,IAAyB,CAAA,GACzBU,IAAcF,EAAM,gBACpBG,IAAc,MAAM;AACZ,UAAAD,EAAA,YAAY,CAACE,MAAmB;AACpC,kBAAAC,IAAe,CAACX,MAAc;AAClC,kBAAI,CAACU,EAAQV,MAAMA,MAAM;AACvB,uBAAOJ,EAAQE,CAAwB;AAErC,kBAAA,CAACY,EAAQV;AACX,uBAAOS,EAAY;AAEnB,cAAAN,EAAWO,EAAQV,EAAE,EAA+B;AAAA,gBACpD,CAACY,MAAgC;AAC/B,6BAAWC,KAAaD;AAClB,oBAACC,EAAU,aACbA,EAAU,WAAWN;AAGnB,kBAAAT,EAAA,KAAK,GAAGc,CAAU,GAExBD,EAAaX,IAAI,CAAC;AAAA,gBACpB;AAAA,cAAA;AAAA,YACF;AAEF,YAAAW,EAAa,CAAC;AAAA,UAAA,CACf;AAAA,QAAA;AAES,QAAAF;MACd;AACA,MAAI,CAACH,EAAM,UAAU,CAACA,EAAM,eAC1BV,EAAQ,CAAE,CAAA;AAAA,IACZ,CACD;AACH;AAEA,SAASC,GAAeiB,GAAiC;AACnD,MAAA,CAACA,EAAS,MAAM;AACX,WAAA;AAIE,aAAAb,KAAQa,EAAS;AACtB,QAAAb,EAAK,oBAAoB,MAAM;AAC3B,YAAAK,IAAQL,EAAK;AAEf,UAAAK,KAASA,EAAM;AACV,eAAA;AAAA,IAEX;AAGF,QAAMR,IAAkBgB,EAAS;AAGjC,WAAS,IAAI,GAAG,IAAIhB,EAAM,QAAQ;AAE5B,QAAA,CAACA,EAAM,GAAG,QAAQA,EAAM,GAAG,OAAO,SAAS;AACtC,aAAA;AAGJ,SAAA;AACT;ACnGA,MAAMiB,GAAM;AAAA,EACH,UAAUC,GAAYC,GAAuBC,GAAyB;AAErE,UAAAC,IAAQH,EAAI,MAAM,CAAC;AACrB,QAAAE,KAAYC,EAAM,QAAQ;AACxB,UAAAC,IAAIF,IAAWC,EAAM;AACzB,aAAOC,MAAM;AACX,QAAAD,EAAM,KAAK,MAAS;AAAA,IAExB;AACM,WAAAA,EAAA,OAAOD,GAAU,GAAGC,EAAM,OAAOF,GAAe,CAAC,EAAE,EAAE,GACpDE;AAAA,EACT;AAAA,EAEO,gBAAgBH,GAA0C;AAE/D,UAAMK,IAAYL,EAAI;AACtB,QAAIK,IAAY;AACd;AAEF,UAAMC,IAAO,GACPC,IAAMF,IAAaA,IAAY,GAC/BG,IAAgBF,IAAa;AAEnC,QAAIG,IAAW,GACXC,IAAa,GACbC,IAAY,GACZC,IAAa,GACbC,IAAQ;AAEZ,aAAS7B,IAAI,GAAGA,IAAIuB,GAAKvB,KAAKwB,GAAc;AACpC,YAAAM,IAAQd,EAAIhB,IAAI,IAChB+B,IAAMf,EAAIhB,KAAK8B,GACfE,IAAQhB,EAAIhB,IAAI,KAAK8B,GACrBG,IAAOjB,EAAIhB,IAAI,KAAK8B;AAEd,MAAAL,KAAAM,GACEL,KAAAM,GACDL,KAAAM,GACCL,KAAAE,GACdD;AAAA,IACF;AAEA,WAAOD,IACH;AAAA,MACE,KAAK,MAAMH,IAAWG,CAAU;AAAA,MAChC,KAAK,MAAMF,IAAaE,CAAU;AAAA,MAClC,KAAK,MAAMD,IAAYC,CAAU;AAAA,MACjC,KAAK,MAAMA,IAAaC,CAAK;AAAA,IAE/B,IAAA,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,EACjB;AAAA,EAEO,qBACLK,GACAC,GACAC,GACAC,GACAC,GACyB;AAGzB,WAAAJ,EAAM,aAAa,eAAeI,IAAkB,oBAAoB,WAAW,GAC5E,IAAI,QAAQ,CAAC1C,GAAS2C,MAAW;AACtC,UAAIC,IAAiB,IACjBC,IAAa;AACjB,YAAMC,IAAkB,MAAM;AACxB,YAAA,EAAEF,KAAkBC;AACtB;AAEI,cAAAE,IAAUR,EAAO,WAAW,IAAI;AACtC,QAAAQ,EAAQ,UAAUT,GAAO,GAAG,GAAGC,EAAO,OAAOA,EAAO,MAAM;AACtD,YAAApE;AACJ,YAAIsE,GAAuB;AACnB,gBAAAO,IAAYD,EAAQ,aAAa,GAAG,GAAGR,EAAO,OAAOA,EAAO,MAAM;AAChE,UAAApE,IAAA,KAAK,gBAAgB6E,EAAU,IAAI;AAAA,QAC7C;AACM,cAAAC,IAAMV,EAAO;AACX,QAAAvC,EAAA;AAAA,UACN,KAAAiD;AAAA,UACA,OAAA9E;AAAA,UACA,OAAOmE,EAAM;AAAA,UACb,QAAQA,EAAM;AAAA,QAAA,CACf;AAAA,MAAA;AAGG,MAAAA,EAAA,iBAAiB,kBAAkB,MAAM;AAE7C,QAAAC,EAAO,QAAQC,GACfD,EAAO,SAAUA,EAAO,QAAQD,EAAM,aAAcA,EAAM,aAC1DA,EAAM,cAAc,GACHM,IAAA,IACDE;MAAA,CACjB,GAEKR,EAAA,iBAAiB,cAAc,MAAM;AAC5B,QAAAO,IAAA,IACGC;MAAA,CACjB;AAAA,IAAA,CACF;AAAA,EACH;AAAA,EAEO,WAAWtC,GAA6B;AAC7C,WAAO,IAAI,QAAQ,CAACR,GAAS2C,MAAW;AAChC,YAAAO,IAAS,IAAI;AACZ,MAAAA,EAAA,SAAS,CAACC,MAAU;AACzB,YAAI,EAAEA,EAAM,UAAUA,EAAM,OAAO;AACjC,iBAAOnD,EAAQ,EAAE;AAEX,QAAAA,EAAAmD,EAAM,OAAO,MAAgB;AAAA,MAAA,GAEvCD,EAAO,cAAc1C,CAAI;AAAA,IAAA,CAC1B;AAAA,EACH;AAAA,EAEO,mCAAmC4C,GAA6B;AAG/D,UAAAC,IAAO,IAAI,SAASD,CAAM;AAChC,QAAIC,EAAK,UAAU,GAAG,EAAK,MAAM;AACxB,aAAA;AAET,UAAMC,IAASD,EAAK;AACpB,QAAIE,IAAS;AACb,WAAOA,IAASD,KAAQ;AACtB,UAAID,EAAK,UAAUE,IAAS,GAAG,EAAK,KAAK;AAChC,eAAA;AAET,YAAMC,IAASH,EAAK,UAAUE,GAAQ,EAAK;AAE3C,UADUA,KAAA,GACNC,MAAW,OAAQ;AACrB,YAAIH,EAAK,UAAWE,KAAU,GAAI,EAAK,MAAM;AACpC,iBAAA;AAET,cAAME,IAASJ,EAAK,UAAWE,KAAU,GAAI,EAAK,MAAM;AACxD,QAAAA,KAAUF,EAAK,UAAUE,IAAS,GAAGE,CAAM;AAC3C,cAAMC,IAAOL,EAAK,UAAUE,GAAQE,CAAM;AAChC,QAAAF,KAAA;AACV,iBAASnD,IAAI,GAAGA,IAAIsD,GAAMtD;AACxB,cAAIiD,EAAK,UAAUE,IAASnD,IAAI,IAAIqD,CAAM,MAAM;AAC9C,mBAAOJ,EAAK,UAAUE,IAASnD,IAAI,KAAK,GAAGqD,CAAM;AAAA,MAIvD,OAAA;AAAA,aAAYD,IAAS,WAAY;AAC/B;AAEU,QAAAD,KAAAF,EAAK,UAAUE,GAAQ,EAAK;AAAA;AAAA,IAE1C;AACO,WAAA;AAAA,EACT;AAAA,EAEO,oBAAoB/C,GAA6B;AACtD,WAAO,IAAI,QAAQ,CAACR,GAAS2C,MAAW;AAChC,YAAAO,IAAS,IAAI;AACf,UAAA,CAACA,EAAO;AACV,eAAOlD,EAAQ,EAAE;AAEZ,MAAAkD,EAAA,SAAS,CAACC,MAAU;AACzB,YAAI,EAAEA,EAAM,UAAUA,EAAM,OAAO;AACjC,iBAAOnD,EAAQ,EAAE;AAEnB,QAAAA,EAAQ,KAAK,mCAAmCmD,EAAM,OAAO,MAAqB,CAAC;AAAA,MAAA,GAKrFD,EAAO,kBAAkB1C,EAAK,MAAM,GAAG,KAAK,CAAC;AAAA,IAAA,CAC9C;AAAA,EACH;AAAA,EAEO,aACLmD,GACApB,GACAqB,GACAC,GACAC,GACA;AAWA,YATI,IAAIH,KAAkBA,IAAiB,KACzCpB,EAAO,QAAQuB,GACfvB,EAAO,SAASsB,MAEhBtB,EAAO,QAAQsB,GACftB,EAAO,SAASuB,IAIVH,GAAgB;AAAA,MACtB,KAAK;AACH,QAAAC,EAAI,UAAU,IAAI,GAAG,GAAG,GAAGC,GAAO,CAAC;AACnC;AAAA,MACF,KAAK;AACH,QAAAD,EAAI,UAAU,IAAI,GAAG,GAAG,IAAIC,GAAOC,CAAM;AACzC;AAAA,MACF,KAAK;AACH,QAAAF,EAAI,UAAU,GAAG,GAAG,GAAG,IAAI,GAAGE,CAAM;AACpC;AAAA,MACF,KAAK;AACH,QAAAF,EAAI,UAAU,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC9B;AAAA,MACF,KAAK;AACH,QAAAA,EAAI,UAAU,GAAG,GAAG,IAAI,GAAGE,GAAQ,CAAC;AACpC;AAAA,MACF,KAAK;AACH,QAAAF,EAAI,UAAU,GAAG,IAAI,IAAI,GAAGE,GAAQD,CAAK;AACzC;AAAA,MACF,KAAK;AACH,QAAAD,EAAI,UAAU,GAAG,IAAI,GAAG,GAAG,GAAGC,CAAK;AACnC;AAAA,IAGJ;AAAA,EACF;AAAA,EAEO,gBACLE,GACAC,GACAC,GACAC,GACAzB,GACuB;AACvB,QAAIoB,IAAQE,EAAM,OACdD,IAASC,EAAM;AACnB,UAAMvB,IAAgBwB;AACtB,IAAIA,KAAcC,KACRJ,IAAAG,GACCF,IAAAG,KAELJ,IAAQC,IACND,IAAQrB,MACVsB,KAAUtB,IAAgBqB,GAClBA,IAAArB,KAGNsB,IAAStB,MACXqB,KAASrB,IAAgBsB,GAChBA,IAAAtB,IAKPqB,IAAA,KAAK,MAAMA,CAAK,GACfC,IAAA,KAAK,MAAMA,CAAM;AAEpB,UAAAvB,IAAS,SAAS,cAAc,QAAQ,GACxCQ,IAAUR,EAAO,WAAW,IAAI;AACtC,QAAI,CAACQ;AACI,aAAA;AAGT,IAAAR,EAAO,QAAQsB,GACftB,EAAO,SAASuB,GAEZI,MAAgB,UAClB,KAAK,aAAaA,GAAa3B,GAAQQ,GAASc,GAAOC,CAAM,GAG/Df,EAAQ,UAAUgB,GAAO,GAAG,GAAGF,GAAOC,CAAM;AAC5C,QAAIK,IAAW;AACX,QAAA;AACE,UAAAC;AACJ,UAAI3B,GAAuB;AACzB,cAAMO,IAAYD,EAAQ,aAAa,GAAG,GAAGc,GAAOC,CAAM;AACnD,QAAAM,IAAA,KAAK,gBAAgBpB,EAAU,IAAI;AAAA,MAC5C;AACA,MAAIoB,MACSD,IAAAC;AAAA;IAIf;AACO,WAAA;AAAA,MACL,OAAAL;AAAA,MACA,KAAKxB,EAAO,UAAU,WAAW;AAAA,MACjC,OAAO4B;AAAA,IAAA;AAAA,EAEX;AAAA,EAEO,eACLJ,GACAd,GACAT,GACAC,GACgC;AAChC,WAAO,IAAI,QAAQ,CAACzC,GAAS2C,MAAW;AACtC,MAAAoB,EAAM,SAAS,MAAM;AACnB,YAAI,CAACtB,GAAuB;AAClB,UAAAzC,EAAA;AAAA,YACN,OAAA+D;AAAA,YACA,KAAAd;AAAA,YACA,OAAO;AAAA,UAAA,CACU;AACnB;AAAA,QACF;AACA,cAAMoB,IAAU,KAAK,gBAAgBN,GAAOvB,GAAe,QAAW,QAAWC,CAAqB;AACtG,QAAI4B,MACFA,EAAQ,MAAMpB,IAEhBjD,EAAQqE,CAAO;AAAA,MAAA,GAEjBN,EAAM,UAAU,MAAM;AACpB,QAAApB,EAAO,2BAA2BM,CAAG;AAAA,MAAA,GAEvCc,EAAM,MAAMd;AAAA,IAAA,CACb;AAAA,EACH;AAAA,EAEO,gBACLc,GACAvD,GACAgC,GACAC,GACgC;AAChC,WAAO,IAAI,QAAQ,CAACzC,GAAS2C,MAAW;AACtC,UAAInC,EAAK,KAAK,QAAQ,OAAO,MAAM,IAAI;AAC9B,QAAAmC,EAAA,IAAI,MAAM,cAAc,CAAC;AAChC;AAAA,MACF;AACA,YAAM2B,KAAmB,OAAO,OAAO,OAAO,aAAa,CAAI,GAAA,iBACzDC,KAAmB,OAAO,OAAO,OAAO,aAAa,CAAI,GAAA;AAC/D,UAAIC,IAAe;AACb,YAAAC,IAAqB,KAAK,oBAAoBjE,CAAI;AAUpD,UATJuD,EAAM,SAAS,MAAM;AACA,QAAAU,EAAA,KAAK,CAACP,MAAgB;AACvC,gBAAMG,IAAU,KAAK,gBAAgBN,GAAOvB,GAAe,QAAW0B,GAAazB,CAAqB;AACxG,UAAI+B,KACFD,EAAgBR,EAAM,GAAG,GAE3B/D,EAAQqE,CAAO;AAAA,QAAA,CAChB;AAAA,MAAA,GAEC,EAAE7D,aAAgB;AACpB,eAAOmC,EAAO,gEAAgE;AAEhF,UAAI,OAAO2B,KAAoB,cAAc,OAAOC,KAAoB,YAAY;AACnE,QAAAC,IAAA,IACTT,EAAA,MAAMO,EAAgB9D,CAAI;AAChC;AAAA,MACF;AACA,WAAK,WAAWA,CAAI,EAAE,KAAK,CAACkE,MAAY;AACtC,QAAAX,EAAM,MAAMW;AAAA,MAAA,CACb;AAAA,IAAA,CACF;AAAA,EACH;AAAA,EAEO,YACLlC,GACAhC,GACAyC,GACAR,GACAC,GACgC;AAC1B,UAAAqB,IAAQ,IAAI;AAClB,WAAAA,EAAM,aAAa,eAAerB,IAAkB,oBAAoB,WAAW,GAC5EO,IACH,KAAK,eAAec,GAAOd,GAAKT,GAAeC,CAAqB,IACpE,KAAK,gBAAgBsB,GAAOvD,GAAcgC,GAAeC,CAAqB;AAAA,EACpF;AAAA,EAEO,iBAAiBkC,GAAe;AACrC,UAAMC,IAAQ,CAAC,KAAK,MAAM,MAAM,MAAM,IAAI;AAC1C,QAAID,MAAU;AACL,aAAA;AAEL,QAAAvE,IAAI,KAAK,MAAM,KAAK,IAAIuE,CAAK,IAAI,KAAK,IAAI,IAAI,CAAC;AAC/C,WAAAvE,IAAA,SAAS,KAAKA,GAAG,EAAE,GAChB,KAAK,MAAMuE,IAAQ,KAAK,IAAI,MAAMvE,CAAC,CAAC,IAAI,MAAMwE,EAAMxE;AAAA,EAC7D;AAAA,EAEO,cAAcyE,GAAsB;AACjC,IAAAA,KAAA,KAAKA,GAAM,YAAY;AACzB,UAAAC,IAAUD,EAAK,MAAM,wBAAwB,GAC7CD,IAAQ,CAAC,KAAK,MAAM,MAAM,MAAM,IAAI;AAC1C,QAAI,CAACE;AACH,aAAO,WAAWD,CAAI;AAExB,UAAMzE,IAAIwE,EAAM,QAAQE,EAAQ,EAAE;AAClC,WAAI1E,MAAM,KACD,WAAWyE,CAAI,IAEjB,WAAWC,EAAQ,EAAE,IAAI,KAAK,IAAI,MAAM1E,CAAC;AAAA,EAClD;AAAA,EAEO,gBAAgB2E,GAAsB;AAoB3C,YANiB,CAACC,MAAkB;AAClC,YAAMC,IAAID,IAAQ,KACZE,IAAIF,IAAQ,KACZ,IAAI;AACV,aAAO,SAASC,IAAI,MAAMC,IAAI,OAAO,IAAI;AAAA,IAAA,IAjBvB,CAACF,MAAkB;AACrC,UAAIG,IAAO;AACP,UAAAH,EAAM,WAAW;AACZ,eAAAG;AAET,eAAS/E,IAAI,GAAGA,IAAI4E,EAAM,QAAQ5E;AAEhC,QAAA+E,IAAOH,EAAM,WAAW5E,CAAC,MAAM+E,KAAQ,KAAKA,IAE5CA,IAAOA,IAAOA;AAET,aAAAA;AAAA,IAAA,GAQmBJ,EAAK,YAAA,CAAa,CAAC;AAAA,EACjD;AAAA,EAEO,aAAavE,GAAY4E,GAA0B;AAGxD,QAAI,CAACA;AACI,aAAA;AAEH,UAAAC,IAAgBD,EAAO,MAAM,GAAG,GAEhCE,IAAW9E,EAAK,MAChB+E,IAAeD,EAAS,QAAQ,SAAS,EAAE;AAEjD,aAASE,KAAaH;AAEpB,UADAG,IAAYA,EAAU,QAClBA,EAAU,OAAO,CAAC,MAAM;AAE1B,YAAIhF,EAAK,KAAK,YAAY,EAAE,QAAQgF,EAAU,YAAA,GAAehF,EAAK,KAAK,SAASgF,EAAU,MAAM,MAAM;AAC7F,iBAAA;AAAA,iBAEA,QAAQ,KAAKA,CAAS;AAE/B,YAAID,MAAiBC,EAAU,QAAQ,SAAS,EAAE;AACzC,iBAAA;AAAA,iBAGLF,MAAaE;AACR,eAAA;AAKN,WAAA;AAAA,EACT;AAAA,EAEO,aAAahF,GAAYiF,GAA2B;AACzD,QAAI,CAACA;AACI,aAAA;AAEH,UAAAd,IAAQ,KAAK,cAAcc,CAAO;AACxC,WAAOjF,EAAK,QAAQmE;AAAA,EACtB;AAAA,EAEO,yBAAyB5E,GAA4B;AAC1D,WAAOD,GAAyBC,CAAY;AAAA,EAC9C;AACF;AAEA,MAAe2F,IAAA,IAAIvE,GAAM,GCzVMwE,KAAgB,gBAAA1G,EAAA;AAAA,EAC7C,MAAM;AAAA,EACN,YAAY;AAAA,IACV,aAAA2G;AAAA,EACF;AAAA,EACA,OAAO;AAAA,IACL,cAAc;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,UAAU;AAAA,IACV,eAAe;AAAA,IACf,YAAY;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,iBAAiB;AAAA,EACnB;AAAA,EACA,OAAO,CAAC,gBAAgB,UAAU,QAAQ;AAAA,EAC1C,OAAO;AACE,WAAA;AAAA,MACL,oBAAoB;AAAA,MACpB,kBAAkB;AAAA,IAAA;AAAA,EAEtB;AAAA,EACA,UAAU;AAAA,IACR,iBAA0B;AACpB,aAAC,KAAK,WAIR,CAAC,CAAC,KAAK,WAAW,IAClB,KAAA,CAAC,KAAK,WAAW,gBAAgB,KACjC,CAAC,KAAK,WAAW,gBAAgB,IAL1B;AAAA,IAOX;AAAA,EACF;AAAA,EACA,OAAO;AAAA,IACL,YAAY;AAAA,MACV,UAAU;AAGR,aAAK,aAAa;AAAA,MACpB;AAAA,MACA,MAAM;AAAA,IACR;AAAA,EACF;AAAA,EACA,SAAS;AAAA,IACP,eAAeC,GAAgC;AACzC,UAAA/G,IAAO+G,EAAW,KAAK,EAAK;AAEhC,YAAMrF,IAAOqF,EAAW;AAExB,aAAIrF,EAAK,aACA1B,IAAA,GAAG0B,EAAK,YAAY1B,MAGtBA;AAAA,IACT;AAAA,IACA,gBAAgB+G,GAAwBvD,GAAyB;AAC/D,UAAIuD,EAAW,gBAAgB;AACvB,QAAAvD,EAAA,SAASuD,EAAW;AAC1B;AAAA,MACF;AACM,YAAAtD,IAAS,SAAS,cAAc,QAAQ;AAE3C,MAAAmD,EAAA;AAAA,QACCpD;AAAA,QACAC;AAAA,QACA,KAAK,WAAW;AAAA,QAChB,KAAK,iBAAiB;AAAA,QACtB,KAAK,oBAAoB;AAAA,MAAA,EAE1B,KAAK,CAACuD,MAAc;AACnB,QAAAD,EAAW,aAAaC,EAAU,OAClCD,EAAW,iBAAiBC,EAAU,KAC3BD,EAAA,WAAW,QAAQC,EAAU,OAC7BD,EAAA,WAAW,SAASC,EAAU,QACnCxD,EAAA,SAASuD,EAAW;MAAI,CAC/B;AAAA,IACL;AAAA,IACA,OAAOA,GAAwB;AAC7B,UAAIA,EAAW,QAAQ;AACrB,QAAAA,EAAW,OAAO;AAClB;AAAA,MACF;AACA,YAAM,EAAC,iBAAAvB,EAAe,IAAI,OAAO,OAAO,OAAO,aAAa,IACtD,EAAC,iBAAAC,EAAe,IAAI,OAAO,OAAO,OAAO,aAAa,IAEtDwB,IAAU,KAAK,MAAM,SACrBC,IAAS,SAAS,cAAcH,EAAW,YAAY,UAAU,OAAO;AAC9E,MAAIG,aAAkB,oBAAoBH,EAAW,gBAAA,KAC9C,KAAA,gBAAgBA,GAAYG,CAAM,GAEzCA,EAAO,WAAW,IAElBD,EAAQ,YAAYC,CAAM;AAC1B,YAAM/C,IAAO4C,EAAW,IAAA,KAAoBvB,EAAgBuB,EAAW,IAAI;AAC3E,MAAAG,EAAO,MAAM/C,GACb+C,EAAO,KAAK,GACZH,EAAW,cAAc,IACzBA,EAAW,SAAS,MAAM;AAExB,QAAAG,EAAO,MAAM,IACbD,EAAQ,YAAYC,CAAM,GAC1BzB,EAAgBtB,CAAG,GACnB4C,EAAW,cAAc,IACzBA,EAAW,SAAS;AAAA,MAAA;AAAA,IAExB;AAAA,IACA,iBAAiBA,GAAwB;AACnC,MAAA,KAAK,mBAGL,KAAK,aAAa,MAGjB,KAAA,MAAM,UAAUA,CAAU;AAAA,IACjC;AAAA,IACA,eAAe;AACT,MAAA,KAAK,aAAa,OAGlB,CAAC,KAAK,MAAM,SAGd,KAAK,MAAM,MAA2B;IAC1C;AAAA,IACA,mBAAmB;AACjB,WAAK,qBAAqB,IAC1B,KAAK,mBAAmB;AAAA,IAC1B;AAAA,IACA,kBAAkB;AACV,YAAA,EAAC,YAAAA,EAAc,IAAA;AACV,MAAAA,EAAA,cAAc,KAAK,WAAW,KAAK;AAC9C,YAAMI,IAAwB,KAAK,WAAW,KAAK,EAAI,GACjD,EAAC,OAAAjB,EAAS,IAAA,KAAK,MAAM;AAC3B,MAAAa,EAAW,aAAab,GACG,KAAK,WAAW,KAAK,EAAI,MACzBiB,MACzBJ,EAAW,gBAAgBI,GACtB,KAAA,MAAM,UAAUJ,CAAU;AAEjC,YAAMK,IAAU;AAChB,aAAO,WAAW,MAAM;AACtB,aAAK,UAAU,MAAM;AACf,UAAA,CAAC,KAAK,qBAGV,KAAK,qBAAqB;AAAA,QAAA,CAC3B;AAAA,SACAA,CAAO;AAAA,IACZ;AAAA,IACA,gBAAgBC,GAAqB;AACnC,MAAIA,KACA,KAAK,MAAM,MAA2B,QAEtCA,MAAc,MAChB,KAAK,cAAc;AAAA,IAEvB;AAAA,IACA,uBAAuB;AACrB,MAAI,EAAE,KAAK,aAAa,MAAQ,KAAK,wBAGrC,KAAK,mBAAmB;AAAA,IAC1B;AAAA,IACA,gBAAgB;AACd,aAAM,KAAK,aAAa,MAAQ,KAAK,sBAGnC,KAAK,MAAM,MAA2B,QAAQ,IAChD,KAAK,mBAAmB,IACxB,KAAK,gBAAgB,GACd,MALE;AAAA,IAMX;AAAA,IACA,eAAe;AACT,MAAA,KAAK,WAAW,UAAU,KAAK,WAAW,MAAM,QAAQ,KAAK,WAAW,MAAM,SAI7E,KAAA,MAAM,gBAAgB,KAAK,UAAU;AAAA,IAC5C;AAAA,EACF;AACF,CAAC,GA9SQC,KAAU;AAAA,EACb,KAAK;AAAA,EAAA,KAAA;AAAA;UAuBG,OAAM,kHAOZC,KAAM;AAAA,EACN,KAAkF;AAAA,EAAA,OAAA;AAAA;2BAY9EC,KAAA,CAAA,KAAA,GACAC,KAAA,CAAA,KAAA,wFAyB2BC,KAAM;AAAA,EAAA,KAAA;AAAA;qCAOrCC,KAAM;AAAA,EAAA,KAAA;AAAA;GAgBFC,KAAA,EAAA,OAAM;;YA3GhBC,EAuHM,aAAA;gBAtHsC,OAAc;AAAA,IAAA,OAAUC,EAAW;AAAA,MAAA,0BAAkGjH,EAAkB,WAAA,IAAA;AAAA,MAAAA,EAAA,WAAA,QAA6D,IAAA,+BAAA;AAAA,MAAA,mBAA0BA,EAAS,WAAA,KAAA,EAAA;AAAA,MAAA,EAAA,sBAAkCA,EAAQ,WAAA,YAAA;AAAA,MAA4C,EAAA,gBAAAA,EAAA,cAAA,GAAA;AAAA,MAAA,EAAA,eAAyCA,eAAW,GAAK;AAAA,MAAA,EAAA,yBAAAA,EAAA,mBAAA;AAAA;IAYxa,CAAA;AAAA,EAAA,GAAA;AAAA,IAINA,EAAA,WAAA,yDAA2B,GAAAH,EAAA,OAAA4G,IAAA;AAAA,MAAOS,EAAA,OAAA;AAAA,QAAA,OAAA;AAAA,QAChC,SAAA3H,EAAA,OAEOA,EAFP,KAEO,CAAA4H,MAAAnH,EAAA,OAAAA,EAAA,UAAA;AAAA,MAAA,GAAA;AAAA;UACPoH,EAEOC,GAAA,EAAA,MAAA,eAAA,CAAA;AAAA,QAAA,CAAA;AAAA;;;;IAGX,GAAA,GAAA,KACEC,EAAK,IAAC,EAAA;AAAA,IAC6BJ,EAAA,QAAA;AAAA,MAAA,OAAAD,EAAgD,CAAW,gBAAA;AAAA,QAAA,iBAAmCjH,aAAW,QAAO;AAAA,QAAA,iBAAA,CAAAA,EAAA,WAAA,QAAA;AAAA,QAKlJ,gBAAKA,EAAA,WAAA,QAAA,KAAAA,EAAA,WAAA,YAAA;AAAA,MAAA,CAAA,CAAA;AAAA;;MAIM,CAAA;AAAA,IAAA,GAAA;AAAA,iCAA4CH,EAAA,QAAA;AAAA,QAAE,KAAA;AAAA,QAAA,OAAA;AAAA,QACxD,SAEON,EAAA,OAAAA,EAFP,YAEOS,EADF;MAAA,GAAA;AAAA;MAKC,CAAA,KAAAsH,EAAkB,IAAM,EAAA;AAAA,MAAA/H,EAAA,QAAAA,EADhC,MAcO2H,EAAA,QAAA,EAAA,OAAA,uBAAA,GAAA,MAAA,EAAA;AAAA,MARGlH,EAAA,WAAA,QAAA,KAAcA,yCADtB,QAOI0G,IAAA;AAAA,QAAA1G,EAAA,kBAAAJ,KALmBC,EAAA,KAAA;AAAA,UACrB,KAAA;AAAA,UACC,MAAKG,EAAE,WAAU,IAAC;AAAA,UAAA,QAAA;AAAA,UAEnB,OAAwDA,EAAA,WAAA,KAAA;AAAA,QAAA,GAAA;AAAA,YAApB,OAAc;AAAA,YAAA,OAAA;AAAA;UAEpD,GAAA,MAAA,GAAA2G,EAAA;AAAA,QAAA,GAAA,GAAAY,EAAA,MAAA3H,EAAA,GAAoCC,EAAA,OAAA;AAAA,UAAE,KAAK;AAAA,UAAA,OAAA;AAAA;;MAE7C,CAAA,KACAyH,EAAsD,IAAtD,EAAA;AAAA,MAEiBJ,EAAA,QAAAM,IAAAC,EAAAzH,EAAA,WAAA,KAAA,GAAA,CAAA;AAAA,MAAAkH,EADjB,QAQOQ,IAAAD,EAAAzH,EAAA,WAAA,MAAA,GAAA,CAAA;AAAA,MAAAA,EAAA,aAAAJ,KANcC,EAAA,QAAA;AAAA,QAClB,KAAA;AAAA,QACA,OAAA;AAAA,QACA,SAAAN,EAAS,uBAAE,iBAAoBS,EAAA,UAAA;AAAA,QAAA,cAAAT,EAAA,OAAAA,EAAA,KAAA,CAAA4H,MAAAnH,EAAA;QAEhC,aAAmCT,EAAA,OAAAA,EAAA,KAAtB,OAAKS,EAAc;MAAA,GAAA;AAAA;MAElC,GAAA,EAAA,KAAMsH,EAAiB,IAAA,EAAA;AAAA,MAAOJ,EAAA,QAAA;AAAA,QAAA,OAAA;AAAA,iBAEpB3H,EAAQ,QAAAA,EAAA,MAAA,CAAA4H,MAAAnH,EAAA;MAAA,GAAA;AAAA,kCACHH,EAAA,SAAA;AAAA,UACX,KAAK;AAAA,UACJ,KAAA;AAAA,UACD,OAAK;AAAA,UACJ,UAAOG,EAAe,aAAA;AAAA,UACtB,MAAA;AAAA,UACA,OAAIA,EAAA,WAAA,KAAA,EAAA;AAAA,UACJ,SAAMT,yBAAE;UACR,QAAKA,yBAAE;UACP,UAAKA,EAAA,OAAAA,EAAA,KAAA,CAAA4H,MAAAnH,EAAA;UAAQ,SAAAT,EAAA,OAAAA,EAAA,KAAA,CAAA4H,MAAAnH,EAAA;UAAA,SAAA;AAAA;;;QAGJ,GAAA,MAAA,IAAQ2H,EAApB,KAAAL,EAAA,IAAA,EAAA;AAAA,QAAAtH,EACE,aAA4C,MAAAJ,EAAA,GAAAC,EAAA,QAAAgH,IAAA;AAAA;QAE9C,CAAA,KAAAS,EAAA,IAAA,EAAA;AAAA,QAGMJ,EAAW,QAAWU,IAASH,EAAWzH,EAAW,eAAMA,EAAA,UAAA,CAAA,GAAA,CAAA;AAAA,MAAA,CAAA;AAAA,MAGjEA,EAAA,WAAA,WACC,SADDA,EAAA,WACC,WADsC,UAAAJ,EACwC,GAAAC,EAAA,QAAAiH,IAAA;AAAA,QAAAI,EAAA,QAAAH,IAAAU,EAAAzH,EAAA,WAAA,WAAA,KAAA,GAAA,CAAA;AAAA;OAEjF,KAAAsH,EAAA,IAAA,EAAA;AAAA,MAAAtH,EAAA,WAAA,YAAA,KAAAJ,OAEQ,QAAe;AAAA,QAAA,KAAA;AAAA,iBACuF,CAAW,iBAAA;AAAA,UAAA,sBAAkDI,aAAW,SAAQ,KAAA;AAAA,UAAA,sBAAAA,EAAA,WAAA,SAAA,KAAA;AAAA;;;QAMtJkH,EAAA,QAAA;AAAA,UAAA,OAAA;AAAA;;MAExC,GAAA,CAAA,KAEUI,EAAc,IAAA,EAAA;AAAA,MAAAJ,EAAA,QADtBW,IAOI;AAAA,QAAA7H,EAAA,kBAAAJ,KALmBC,EAAA,KAAA;AAAA,UACrB,KAAA;AAAA,UACC,MAAKG,EAAE,WAAU,IAAC;AAAA,UAAA,QAAA;AAAA,UAEnB,OAAuCA,EAAA,WAAA,KAAA;AAAA,QAAA,GAAA;AAAA;;UAEzC,GAAA,MAAA,GAAA,CAAA,KAAA,CAAA;AAAA,QAAA,GAAA,GAAA8H,EAAA,MAAAlI,EAAA,GAAwCmI,EAAAV,GAAA;AAAA,UAAA,KAAA;AAAA;;;;;;oDC5GjBW,KAAgB,gBAAA1I,EAAA;AAAA,EAC7C,MAAM;AAAA,EACN,OAAO;AAAA,IACL,MAAM,EAAC,MAAM,OAAmB,UAAU,GAAI;AAAA,IAC9C,MAAM,EAAC,MAAM,QAAQ,UAAU,GAAI;AAAA,IACnC,UAAU,EAAC,MAAM,QAAQ,UAAU,GAAI;AAAA,EACzC;AACF,CAAC;SAdG2I,GAAQjI,GAAAT,GAAAC,GAAAC,GAAAC,GAAAC,GAAA;;;;;oDCMmBuI,KAAgB,gBAAA5I,EAAA;AAAA,EAC7C,MAAM;AAAA,EACN,OAAO;AAAA,IACL,OAAO;AAAA,EACT;AACF,CAAC;SAXG2I,GAAQjI,GAAAT,GAAAC,GAAAC,GAAAC,GAAAC,GAAA;;;;;oDCCNwI,KAAe7I,EAAgB;AAAA,EACjC,QAAQ,CAAC,SAAS;AAAA,EAClB,OAAO;AAAA,IACH,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACb;AAAA,IACD,UAAU;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA,IACZ;AAAA,EACJ;AAAA,EACD,OAAO;AACH,WAAO;EACV;AAAA,EACD,OAAO;AAAA,IACH,MAAMqC,GAAU;AACZ,MAAI,KAAK,OAAO,KAAK,IAAI,iBACrB,KAAK,IAAI,aAAa,QAAQA;AAAA,IAErC;AAAA,IACD,SAASyG,GAAY;AACjB,MAAIA,IACA,KAAK,gBAAe,IAGpB,KAAK,aAAa,KAAK,KAAK;AAAA,IAEnC;AAAA,EACJ;AAAA,EACD,UAAU;AACN,UAAM,EAAE,UAAAC,GAAU,OAAAnI,MAAU,KAAK;AACjC,IAAKmI,KACD,KAAK,aAAanI,CAAK;AAAA,EAE9B;AAAA,EACD,gBAAgB;AACZ,IAAK,KAAK,YACN,KAAK,gBAAe;AAAA,EAC3B;AAAA,EACD,SAAS;AAAA,IACL,aAAaA,GAAO;AAChB,YAAMoI,IAAO,KAAK;AAClB,MAAAA,EAAK,eAAe;AAAA,QAChB,OAAApI;AAAA,QACA,SAAS,KAAK;AAAA,MAC9B,GACY,KAAK,MAAM,EAAE,MAAAoI,KACb,KAAK,QAAQ,IAAI,KAAK,GAAG;AAAA,IAC5B;AAAA,IACD,kBAAkB;AACd,WAAK,QAAQ,OAAO,KAAK,GAAG;AAAA,IAC/B;AAAA,EACJ;AACL,CAAC;AAED,MAAMC,GAAQ;AAAA,EACV,cAAc;AACV,SAAK,OAAO,IACZ,KAAK,SAAS;AAAA,EACjB;AAAA,EACD,IAAIC,GAAK;AACL,IAAK,KAAK,SACN,KAAK,OAAO,KAEhB,KAAK,KAAK,KAAKA,CAAG;AAAA,EACrB;AAAA,EACD,OAAOA,GAAK;AACR,UAAMtI,IAAQ,KAAK,SAASsI,CAAG;AAC/B,IAAItI,MAAU,MACV,KAAK,KAAK,OAAOA,GAAO,CAAC;AAAA,EAEhC;AAAA,EACD,WAAW;AACP,WAAO,CAAC,CAAC,KAAK;AAAA,EACjB;AAAA,EACD,YAAY;AACR,WAAO,KAAK,KAAK,KAAK,CAAC,EAAE,MAAAoI,QAAW;AAAE,UAAIG,GAAIC;AAAI,eAASD,IAAKH,KAAS,OAA0B,SAASA,EAAK,kBAAkB,QAAQG,MAAO,SAAS,SAASA,EAAG,YAAYC,IAAK,SAAS,QAAQ,SAAS,SAAS,SAAS,KAAK,YAAY,QAAQA,MAAO,SAAS,SAASA,EAAG;AAAA,KAAS,KAAK;AAAA,EAC1S;AAAA,EACD,SAASF,GAAK;AACV,WAAO,KAAK,KAAK,QAAQA,CAAG;AAAA,EAC/B;AAAA,EACD,UAAU;AACN,WAAO,KAAK;AAAA,EACf;AAAA,EACD,iBAAiB;AACb,WAAO,KAAK,KAAK,KAAK,CAACG,GAAGC,MACfD,EAAE,KAAK,aAAa,QAAQC,EAAE,KAAK,aAAa,KAC1D;AAAA,EACJ;AACL;AAEA,MAAMC,IAAU,CAAC,MACN,EAAE,WAAW;AAGxB,SAASC,EAAeC,GAAKC,GAAM;AAC/B,SAAO,CAAC,CAACD,KAAO,OAAO,UAAU,eAAe,KAAKA,GAAKC,CAAI;AAClE;AACA,SAASC,GAAUxH,GAAKC,GAAeC,GAAU;AAC7C,QAAMC,IAAQH,EAAI,MAAM,CAAC;AACzB,MAAIE,KAAYC,EAAM,QAAQ;AAC1B,QAAIC,IAAIF,IAAWC,EAAM;AACzB,WAAOC,MAAM;AACT,MAAAD,EAAM,KAAK,MAAS;AAAA,EAE3B;AACD,SAAAA,EAAM,OAAOD,GAAU,GAAGC,EAAM,OAAOF,GAAe,CAAC,EAAE,EAAE,GACpDE;AACX;AACA,SAASsH,GAAYzH,GAAKC,GAAe;AACrC,QAAME,IAAQH,EAAI,MAAM,CAAC;AACzB,SAAIC,KAAiBE,EAAM,UAE3BA,EAAM,OAAOF,GAAe,CAAC,GACtBE;AACX;AACA,SAASuH,GAAY1H,GAAKE,GAAU0D,GAAO;AACvC,QAAMzD,IAAQH,EAAI,MAAM,CAAC;AACzB,SAAIE,MAAaC,EAAM,SACnBA,EAAM,KAAKyD,CAAK,IAGhBzD,EAAM,OAAOD,GAAU,GAAG0D,CAAK,GAE5BzD;AACX;AACA,MAAMwH,IAAS;AAAA,EACX,OAAO,CAAC,cAAc,WAAW;AAAA,EACjC,MAAM,CAAC,aAAa,WAAW;AAAA,EAC/B,KAAK,CAAC,YAAY,SAAS;AAAA,EAC3B,QAAQ,CAAC,eAAe,OAAO;AACnC;AACA,SAASC,GAAQC,GAAIC,GAAI;AACrB,SAAOD,KAAI;AACP,QAAIC,EAAGD,CAAE;AACL,aAAOA;AACX,IAAAA,IAAKA,EAAG;AAAA,EACX;AACL;AACA,SAASE,GAAMC,GAAKC,GAAKrE,GAAO;AAC5B,SAAIA,IAAQoE,IACDA,IAEPpE,IAAQqE,IACDA,IAEJrE;AACX;AACA,SAASsE,EAAiBC,GAAa;AACnC,SAAIA,EAAY,OAAO,EAAE,MAAM,OACpB,WAAWA,CAAW,IAE1B;AACX;AACA,SAASC,GAAiBC,GAAS;AAC/B,QAAMC,IAAQ,OAAO,iBAAiBD,CAAO;AAC7C,SAAO;AAAA,IACH,KAAKH,EAAiBI,EAAM,SAAS;AAAA,IACrC,OAAOJ,EAAiBI,EAAM,WAAW;AAAA,IACzC,QAAQJ,EAAiBI,EAAM,YAAY;AAAA,IAC3C,MAAMJ,EAAiBI,EAAM,UAAU;AAAA,EAC/C;AACA;AACA,SAASC,EAAiB,GAAGC,IAAY,QAAQ;AAC7C,QAAMC,IAAI,GAAGD,MACPE,IAAI,GAAGF;AACb,SAAO;AAAA,IACH,GAAGpB,EAAQ,CAAC,IAAI,EAAE,QAAQ,GAAGqB,KAAK,EAAEA;AAAA,IACpC,GAAGrB,EAAQ,CAAC,IAAI,EAAE,QAAQ,GAAGsB,KAAK,EAAEA;AAAA,EAC5C;AACA;AACA,SAASC,GAAc9B,GAAM;AACzB,QAAM+B,IAAQ,CAAC/B,CAAI;AACnB,SAAOA,GAAMA,IAAOA,EAAK;AACrB,IAAA+B,EAAM,QAAQ/B,CAAI;AAEtB,SAAO+B;AACX;AACA,SAASC,GAAmBC,GAAOC,GAAO;AACtC,QAAMC,IAAWL,GAAcG,CAAK,GAC9BG,IAAWN,GAAcI,CAAK;AACpC,MAAIC,EAAS,MAAMC,EAAS;AACxB,UAAM;AACV,WAASjK,IAAI,GAAGA,IAAIgK,EAAS,QAAQhK;AACjC,QAAIgK,EAAShK,MAAMiK,EAASjK;AACxB,aAAOgK,EAAShK,IAAI;AAEhC;AACA,SAASkK,EAAcrC,GAAMsC,GAAWhH,IAAS,EAAE,KAAK,GAAG,MAAM,KAAK;AAElE,MAAI0E,GAAM;AACN,UAAMuC,IAAa;AAAA,MACf,KAAKjH,EAAO,MAAM0E,EAAK;AAAA,MACvB,MAAM1E,EAAO,OAAO0E,EAAK;AAAA,IACrC;AACQ,WAAIA,EAAK,iBAAiBsC,EAAU,eACzBD,EAAcrC,EAAK,cAAcsC,GAAWC,CAAU,IAGtDA;AAAA,EAEd;AACD,SAAO,EAAE,KAAK,GAAG,MAAM,EAAC;AAC5B;AACA,SAASC,GAAUxC,GAAM;AACrB,QAAMyC,IAASzC,EAAK,iBAAiB,yBAAyB,GACxD0C,IAAa1C,EAAK,UAAU,EAAI;AAEtC,SADqB,CAAC,GAAG0C,EAAW,iBAAiB,yBAAyB,CAAC,EAClE,QAAQ,CAACC,GAAO/K,MAAU;AACnC,IAAI+K,EAAM,SAAS,UAAUF,EAAO7K,OAChC+K,EAAM,QAAQF,EAAO7K,GAAO;AAAA,EAExC,CAAK,GACM8K;AACX;AACA,SAASE,GAAoBC,GAAYjH,GAAOC,GAAQ;AAOpD,MANI,OAAOgH,KAAc,aACrBA,IAAa,CAACA,IAEb,MAAM,QAAQA,CAAU,MACzBA,IAAa,CAACA,GAAYA,CAAU,IAEpCA,EAAW,WAAW;AACtB,UAAM,IAAI,MAAM,0GAA0GA,GAAY;AAE1I,QAAM,CAACC,GAAeC,CAAa,IAAIF;AACvC,SAAO,CAACG,GAAmBF,GAAelH,GAAOC,CAAM,GAAGmH,GAAmBD,GAAenH,GAAOC,CAAM,CAAC;AAC9G;AACA,SAASmH,GAAmBH,GAAYjH,GAAOC,GAAQ;AACnD,MAAIoH,IAAUJ,GACVK,IAAUL,GACVM,IAAO;AACX,MAAI,OAAON,KAAe,UAAU;AAChC,UAAMO,IAAQ,6BAA6B,KAAKP,CAAU;AAC1D,QAAIO,MAAU;AACV,YAAM,IAAI,MAAM,8FAA8FP,GAAY;AAE9H,IAAAI,IAAUC,IAAU,WAAWL,CAAU,GACzCM,IAAOC,EAAM;AAAA,EAChB;AACD,MAAI,CAAC,SAASH,CAAO,KAAK,CAAC,SAASC,CAAO;AACvC,UAAM,IAAI,MAAM,8CAA8CL,GAAY;AAE9E,SAAIM,MAAS,QACTF,IAAWA,IAAUrH,IAAS,KAC9BsH,IAAWA,IAAUrH,IAAU,MAE5B;AAAA,IACH,GAAGoH;AAAA,IACH,GAAGC;AAAA,EACX;AACA;AAYA,SAASG,GAAetB,IAAQ,IAAI;AAChC,WAAS5J,IAAI,GAAGuB,IAAMqI,EAAM,QAAQ5J,IAAIuB,GAAKvB,KAAK;AAC9C,UAAM6H,IAAO+B,EAAM5J,IACb6I,IAAKhB,EAAK;AAChB,QAAI,CAACgB;AACD;AAEJ,IAAAhB,EAAK,aAAa,MAElBsD,EAAatC,CAAE;AAAA,EAClB;AACL;AACA,SAASsC,EAAatC,GAAIuC,IAAY,IAAIC,IAAW,IAAI;AACrD,EAAI,CAACxC,MAELA,EAAG,MAAM,YAAeuC,GACxBvC,EAAG,MAAM,qBAAwBwC;AACrC;AAcA,MAAMvF,IAAU,YAEVwF,KAAiBzM,EAAgB;AAAA,EACnC,QAAQ;AAAA,IACJ,cAAc;AAAA,MACV,MAAM;AAAA,MACN,SAAS;AAAA,IACZ;AAAA,EACJ;AAAA,EACD,UAAU;AACN,WAAO;AAAA,MACH,SAAS,KAAK;AAAA,IAC1B;AAAA,EACK;AAAA,EACD,OAAO;AAAA,IACH,MAAM,EAAE,MAAM,OAAO,UAAU,GAAM;AAAA,IACrC,MAAM,EAAE,MAAM,QAAQ,SAAS,IAAK;AAAA,IACpC,UAAU,EAAE,MAAM,QAAQ,SAAS,EAAG;AAAA,IACtC,YAAY,EAAE,MAAM,QAAQ,SAAS,EAAG;AAAA,IACxC,gBAAgB,EAAE,MAAM,QAAQ,SAAS,EAAG;AAAA,IAC5C,eAAe,EAAE,MAAM,SAAS,SAAS,GAAO;AAAA,IAChD,4BAA4B,EAAE,MAAM,SAAS,SAAS,GAAO;AAAA,IAC7D,mBAAmB,EAAE,MAAM,SAAS,SAAS,GAAM;AAAA,IACnD,sBAAsB,EAAE,MAAM,SAAS,SAAS,GAAO;AAAA,IACvD,YAAY,EAAE,MAAM,CAAC,QAAQ,QAAQ,KAAK,GAAG,SAAS,MAAO;AAAA,IAC7D,oBAAoB,EAAE,MAAM,QAAQ,SAAS,IAAK;AAAA,IAClD,UAAU,EAAE,MAAM,QAAQ,SAAS,OAAQ;AAAA,IAC3C,yBAAyB,EAAE,MAAM,QAAQ,SAAS,KAAM;AAAA,IACxD,OAAO,EAAE,MAAM,QAAQ,SAAS,GAAI;AAAA,IACpC,QAAQ,EAAE,MAAM,CAAC,SAAS,OAAO,QAAQ,GAAG,SAAS,KAAM;AAAA,IAC3D,WAAW,EAAE,MAAM,QAAQ,SAAS,SAAU;AAAA,IAC9C,OAAO,EAAE,MAAM,OAAO,SAAS,MAAM,CAAA,EAAI;AAAA,IACzC,UAAU,EAAE,MAAM,QAAQ,SAAS,GAAI;AAAA,IACvC,aAAa,EAAE,MAAM,QAAQ,SAAS,GAAI;AAAA,IAC1C,eAAe,EAAE,MAAM,QAAQ,SAAS,KAAM;AAAA,IAC9C,mBAAmB;AAAA,MACf,MAAM;AAAA,MACN,SAAS,CAAC,MAEmB,CAAC,SAAS,YAAY,UAAU,UAAU,QAAQ,EACnD,QAAQ,EAAE,OAAO,QAAQ,YAAW,CAAE,MAAM;AAAA,IAE3E;AAAA,IACD,qBAAqB;AAAA,MACjB,MAAM;AAAA,MACN,SAAS,CAAC,EAAE,MAAAgJ,SAAY;AAAA,QACpB,OAAOA,EAAK;AAAA,QACZ,QAAQA,EAAK;AAAA,MAC7B;AAAA,IACS;AAAA,EACJ;AAAA,EACD,OAAO,CAAC,cAAc,aAAa,YAAY,eAAe,eAAe,eAAe,aAAa;AAAA,EACzG,OAAO;AACH,QAAI0D,IAAS;AACb,QAAI,KAAK;AAGL,UAAI,KAAK;AACL,QAAAA,IAAS;AAAA,eAEJ,QAAQ,IAAI,aAAa;AAC9B,cAAM,IAAI,MAAM,+CAA+C;AAAA;AAGvE,WAAO;AAAA,MACH,SAAS;AAAA,MACT,KAAKA,IAAS,KAAK,eAAe;AAAA,MAClC,SAAS,IAAIzD,GAAS;AAAA,IAClC;AAAA,EACK;AAAA,EACD,UAAU;AACN,IAAI,KAAK,QACL,KAAK,KAAK,KAAK,IAAI,MAAK,IAE5B,KAAK,YAAY,KAAK,KACtB,KAAK,WAAW,KAAK,UAAU,iBAAiB,UAChD,KAAK,UAAU,KAAK,iBAAiB,QACrC,KAAK,kBAAkB,KAAK,6BAA6B,EAAE,YAAY,GAAG,WAAW,MAAM,KAAK,WAChG,KAAK,SAAS;AAAA,MACV,OAAO,KAAK;AAAA,MACZ,MAAM,KAAK;AAAA,MACX,KAAK,KAAK;AAAA,IACtB;AACQ,eAAW0D,KAAO,KAAK;AACnB,MAAInD,EAAe,KAAK,QAAQmD,CAAG,KAE/B7C,EAAO6C,GAAK,QAAQ,CAACC,MAAc,KAAK,UAAU,iBAAiBA,GAAW,KAAK,OAAOD,EAAI,CAAC;AAGvG,IAAI,KAAK,OACL,KAAK,IAAI,aAAa,IAAI;AAAA,EAEjC;AAAA,EACD,gBAAgB;AACZ,eAAWA,KAAO,KAAK;AACnB,MAAInD,EAAe,KAAK,QAAQmD,CAAG,KAE/B7C,EAAO6C,GAAK,QAAQ,CAACC,MAAc,KAAK,UAAU,oBAAoBA,GAAW,KAAK,OAAOD,EAAI,CAAC;AAG1G,IAAI,KAAK,OACL,KAAK,IAAI,gBAAgB,IAAI,GAE7B,KAAK,gBACL,aAAa,KAAK,YAAY,GAC9B,KAAK,eACL,aAAa,KAAK,WAAW,GAC7B,KAAK,cACL,aAAa,KAAK,UAAU,GAC5B,KAAK,sBACL,cAAc,KAAK,kBAAkB;AAAA,EAC5C;AAAA,EACD,SAAS;AAAA,IACL,YAAY,GAAG;AACX,YAAM,EAAE,UAAAE,GAAU,mBAAAC,MAAsB,KAAK;AAC7C,UAAK,CAACvD,EAAQ,CAAC,KAAK,EAAE,WAAW,KAAMuD,EAAkB,CAAC;AACtD,eAAO;AAEX,WAAK,WAAW,IAChB,KAAK,OAAOpC,EAAiB,CAAC;AAC9B,YAAMqC,IAAS,EAAE,QACX/D,IAAOe,GAAQgD,GAAQ,CAAC/C,MAAOA,EAAG,gBAAgB,IAAI;AAC5D,UAAIhB,KAAQA,EAAK,gBAAgB,KAAK,YAAYA,CAAI,KAAK,CAAC,KAAK,SAAS;AACtE,cAAM,EAAE,eAAAgE,EAAa,IAAK,KAAK,QACzB,EAAE,OAAApM,EAAK,IAAKoI,EAAK;AACvB,YAAIgE,KAAiB,CAACjD,GAAQgD,GAAQ,CAAC/C,MAAOA,EAAG,kBAAkB,IAAI;AACnE;AACJ,aAAK,QAAQ,SAAS,EAAE,OAAApJ,EAAK,GAMzBmM,EAAO,QAAQ,YAAW,MAAO,OACjC,EAAE,eAAc,GAEfF,MACG,KAAK,eAAe,IACpB,KAAK,YAAY,CAAC,IAGlB,KAAK,aAAa5F,EAAQ,MAAM,KAAK,YAAY,CAAC,GAAG,KAAK,UAAU;AAAA,MAG/E;AAAA,IACJ;AAAA,IACD,YAAY+B,GAAM;AACd,aAAOA,EAAK,aAAa,YAAY,KAAK;AAAA,IAC7C;AAAA,IACD,WAAW,GAAG;AACV,YAAM,EAAE,UAAA6D,GAAU,gBAAAI,MAAmB,KAAK;AAC1C,UAAI,CAAC,KAAK,WAAW,KAAK,UAAU;AAChC,cAAM3I,IAASoG,EAAiB,CAAC;AACjC,aAAK,SAAS;AAAA,UACV,GAAG,KAAK,KAAK,IAAIpG,EAAO;AAAA,UACxB,GAAG,KAAK,KAAK,IAAIA,EAAO;AAAA,QAC5C;AACgB,cAAM4I,IAAQ,KAAK,IAAI,KAAK,OAAO,CAAC,IAAI,KAAK,IAAI,KAAK,OAAO,CAAC;AAC9D,QAAI,CAACL,MAAa,CAACI,KAAmBA,KAAkBC,KAASD,MACzD,KAAK,eACL,aAAa,KAAK,WAAW,GACjC,KAAK,cAAchG,EAAQ,KAAK,QAAQ,CAAC,KAEpC4F,KAAYK,KAASL,KAAY,KAAK,QAAQ,cACnD,KAAK,YAAY,CAAC;AAAA,MAEzB;AAAA,IACJ;AAAA,IACD,YAAY;AACR,UAAI,CAAC,KAAK;AACN;AACJ,YAAM,EAAE,UAAAA,EAAQ,IAAK,KAAK;AAC1B,WAAK,WAAW,IACXA,KACD,KAAK,OAAM;AAAA,IAElB;AAAA,IACD,SAAS;AACL,MAAK,KAAK,YACF,KAAK,cACL,aAAa,KAAK,UAAU,GAChC,KAAK,QAAQ,SAAS,MAClB,KAAK,OACL,KAAK,IAAI;IAEpB;AAAA,IACD,iBAAiB,GAAG;AAChB,OAAItD,EAAQ,CAAC,KAAK,EAAE,QAAQ,KAAK,eAC7B,KAAK,WAAW,KAAK,OACrB,KAAK,YAAY,IACjB,KAAK,YAAY,EAAE,GAAG,GAAG,GAAG,KAC5B,KAAK,aAAY,GACjB,KAAK,cAAc,CAAC;AAAA,IAE3B;AAAA,IACD,YAAY,GAAG;AACX,QAAE,gBAAe;AACjB,YAAM4D,IAAS,KAAK,QAAQ,UAAS;AACrC,UAAIA,GAAQ;AACR,cAAM,EAAE,qBAAAC,GAAqB,aAAAC,GAAa,mBAAAC,GAAmB,UAAAC,EAAU,IAAG,KAAK,QACzE,EAAE,MAAAvE,EAAM,IAAGmE,GACX,EAAE,OAAAvM,EAAK,IAAKoI,EAAK,cACjBwE,IAASjD,GAAiBvB,CAAI,GAC9ByE,IAAwB,KAAK,UAAU,sBAAqB,GAC5DC,IAAaN,EAAoB,EAAE,OAAAxM,GAAO,MAAAoI,EAAM,CAAA;AACtD,aAAK,OAAOA,GACZ,KAAK,SAASwE,GACd,KAAK,QAAQE,EAAW,OACxB,KAAK,SAASA,EAAW,QACzB,KAAK,eAAe;AAAA,UAChB,GAAG,KAAK,OAAO,OAAO,KAAK,OAAO;AAAA,UAClC,GAAG,KAAK,IAAI,KAAK,OAAO,KAAK,KAAK,OAAO,MAAM;AAAA,QACnE,GACgB,KAAK,qBAAqB1E,EAAK,yBAC/B,KAAK,wBAAwByE,GAC7B,KAAK,QAAQ7M,GACb,KAAK,WAAWA;AAChB,cAAM8K,IAAaF,GAAUxC,CAAI;AACjC,aAAK,SAAS,KAAK,SAAS,cAAcuE,CAAQ,EAAE,YAAY7B,CAAU,GAC1E,KAAK,OAAO,MAAM,WAAW,SAC7B,KAAK,OAAO,MAAM,MAAM,GAAG,KAAK,mBAAmB,MAAM8B,EAAO,SAChE,KAAK,OAAO,MAAM,OAAO,GAAG,KAAK,mBAAmB,OAAOA,EAAO,UAClE,KAAK,OAAO,MAAM,QAAQ,GAAG,KAAK,WAClC,KAAK,OAAO,MAAM,SAAS,GAAG,KAAK,YACnC,KAAK,OAAO,MAAM,YAAY,cAC9B,KAAK,OAAO,MAAM,gBAAgB,QAC9BF,MACA,KAAK,gBAAgBtE,GACrBA,EAAK,MAAM,aAAa,UACxBA,EAAK,MAAM,UAAU,MAErB,KAAK,QACL,KAAK,IAAI,UAAU,IAAI,GACvB,KAAK,IAAI,SAAS,KAAK,QACvB,KAAK,IAAI,QAAQ,KAAK,gBAE1B,KAAK,iBAAiB,GAAG,KAAK,kBAAkB,GAChD,KAAK,aAAaqC,EAAcrC,GAAM,KAAK,SAAS,GAChDqE,KACA,KAAK,OAAO,UAAU,IAAI,GAAGA,EAAY,MAAM,GAAG,CAAC,GAEvD,KAAK,eAAe9D,EAAQ,CAAC,IAAIP,IAAO,KAAK,SAE7Cc,EAAO,KAAK,QAAQ,CAAC8C,MAAc,KAAK,aAAa,iBAAiBA,GAAW,KAAK,cAAc,CAAC,GAErG9C,EAAO,IAAI,QAAQ,CAAC8C,MAAc,KAAK,aAAa,iBAAiBA,GAAW,KAAK,aAAa,CAAC,GAEnG9C,EAAO,OAAO,QAAQ,CAAC8C,MAAc,KAAK,aAAa,iBAAiBA,GAAW,KAAK,gBAAgB,CAAC,GACzG,KAAK,UAAU,IACf,KAAK,MAAM,cAAc,EAAE,OAAO,GAAG,MAAA5D,GAAM,OAAApI,EAAK,CAAE;AAAA,MACrD;AAAA,IACJ;AAAA,IACD,eAAe,GAAG;AAGd,UAFA,EAAE,eAAc,GAChB,KAAK,eAAe,CAAC,GACjB,KAAK,KAAK;AACV,cAAM+M,IAAU,KAAK,KAAK,KAAK;AAC/B,aAAK,IAAI,eAAe,GAAGA,CAAO;AAAA,MACrC;AACD,OAAI,CAAC,KAAK,OAAO,KAAK,IAAI,OAAO,IAAI,OACjC,KAAK,aAAY,GACjB,KAAK,WAAU,IAEnB,KAAK,MAAM,aAAa,EAAE,OAAO,EAAG,CAAA;AAAA,IACvC;AAAA,IACD,gBAAgB;AACZ,YAAMC,IAAU,KAAK,KAAK,KAAK,QACzBC,IAAWjE,GAAY,KAAK,MAAM,KAAK,KAAK;AAClD,kBAAK,MAAM,eAAe;AAAA,QACtB,UAAU,KAAK;AAAA,MAC/B,CAAa,GACD,KAAK,MAAM,eAAeiE,CAAQ,GAC3BD;AAAA,IACV;AAAA,IACD,aAAaD,GAAS;AAClB,YAAME,IAAWhE,GAAY,KAAK,MAAM,KAAK,UAAU8D,CAAO;AAC9D,WAAK,MAAM,eAAe;AAAA,QACtB,UAAU,KAAK;AAAA,QACf,OAAOA;AAAA,MACvB,CAAa,GACD,KAAK,MAAM,eAAeE,CAAQ,GAClC,KAAK,cAAa;AAAA,IACrB;AAAA,IACD,gBAAgB;AACZ,MAAI,KAAK,uBACL,cAAc,KAAK,kBAAkB,GACrC,KAAK,qBAAqB,OAE1B,KAAK,IAAI,SAAS,IAAI,KAEtB,KAAK,YAAY;AAAA,QACb,GAAG;AAAA,QACH,GAAG;AAAA,MACvB,GACgB,KAAK,aAAY,MAGjB,KAAK,QAAQ,QAAS,EAAC,QAAQ,CAAC3E,MAAQ;AACpC,QAAAA,EAAI,KAAK,MAAM,YAAe;AAAA,MAClD,CAAiB,GACD,KAAK,eAAejC,EAAQ,KAAK,eAAe,KAAK,sBAAsB,CAAC;AAAA,IAEnF;AAAA,IACD,gBAAgB;AACZ,MAAI,KAAK,uBACL,cAAc,KAAK,kBAAkB,GACrC,KAAK,qBAAqB,OAE9BoF,GAAe,KAAK,QAAQ,QAAS,CAAA,GACjC,KAAK,kBACL,KAAK,cAAc,UACnB,KAAK,gBAAgB,OAErB,KAAK,iBACL,aAAa,KAAK,YAAY,GAC9B,KAAK,eAAe,OAExB,KAAK,QAAQ,SAAS,MACtB,KAAK,WAAW,IAChB,KAAK,UAAU;AAAA,IAClB;AAAA,IACD,iBAAiB,GAAGyB,GAAY;AAC5B,YAAM,EAAE,4BAAAC,GAA4B,uBAAAN,GAAuB,SAAAO,EAAO,IAAK;AACvE,WAAK,eAAe;AAAA,QAChB,GAAG,KAAK,OAAO,OAAO,KAAK,OAAO;AAAA,QAClC,GAAG,KAAK,IAAI,KAAK,OAAO,KAAK,KAAK,OAAO,MAAM;AAAA,MAC/D,GACY,KAAK,QAAQ;AAAA,QACT,GAAG,KAAK,KAAK,QAAQ,GAAG,KAAK;AAAA,QAC7B,GAAG,KAAK,KAAK,QAAQ,GAAG,KAAK;AAAA,MAC7C,GACY,KAAK,gBAAgBtD,EAAiB,CAAC,GAEvC,KAAK,gBAAgB;AAAA,QACjB,KAAK,KAAK,gBAAgB;AAAA,QAC1B,MAAM,KAAK,gBAAgB;AAAA,MAC3C,GAEY,KAAK,sBAAsB;AAAA,QACvB,KAAK,OAAO;AAAA,QACZ,MAAM,OAAO;AAAA,MAC7B,GACY,KAAK,YAAY,EAAE,GAAG,GAAG,GAAG,KAC5B,KAAK,eAAe,IACpB,KAAK,eAAe,IAChB,KAAK,MAAM,MACX,KAAK,aAAa,KACbqD,IAA6B,IAAIN,EAAsB,QAAQK,EAAW,OAAO,KAAK,QAAQ,GACnG,KAAK,aAAa,KACbC,IAA6BC,EAAQ,aAAaP,EAAsB,OAAOA,EAAsB,SAClGK,EAAW,OACX,KAAK,QAAQ,IAErB,KAAK,MAAM,MACX,KAAK,aAAa,KACbC,IAA6B,IAAIN,EAAsB,OAAOK,EAAW,MAAM,KAAK,SAAS,GAClG,KAAK,aAAa,KACbC,IACKC,EAAQ,cACRP,EAAsB,MAAMA,EAAsB,UACpDK,EAAW,MACX,KAAK,SAAS;AAAA,IAE7B;AAAA,IACD,aAAa,GAAGG,GAAeC,GAAQ;AACnC,UAAI,KAAK,IAAI,SAAS,IAAI;AACtB;AAEJ,MAAI,KAAK,iBACL,KAAK,cAAa,GAClB,aAAa,KAAK,YAAY,GAC9B,KAAK,eAAe;AAExB,YAAMnD,IAAQ,KAAK,QAAQ,QAAO;AAClC,WAAK,QAAQA,EAAM,QACnB,KAAK,QAAQ,SAAS,EAAE,OAAO,KAAK;AACpC,YAAM0C,IAAwB,KAAK,UAAU,sBAAqB,GAC5DU,IAAqBD,EAAO;AAClC,WAAK,wBAAwBT,GAC7B,KAAK,gBAAgBjC,GAAUyC,CAAa,GAC5C,KAAK,UAAU,YAAY,KAAK,aAAa;AAC7C,YAAMG,IAAY,KAAK,cAAc,sBAAqB;AAC1D,WAAK,qBAAqBA,GAC1B,KAAK,SAAS7D,GAAiB,KAAK,aAAa,GACjD,KAAK,QAAQ6D,EAAU,OACvB,KAAK,SAASA,EAAU,QAExB,KAAK,aAAa/C,EAAc,KAAK,eAAe,KAAK,SAAS,GAClE,KAAK,iBAAiB,GAAG+C,CAAS,GAGlC,KAAK,cAAc,KAAKA,EAAU,IAAID,EAAmB,GACzD,KAAK,cAAc,KAAKC,EAAU,IAAID,EAAmB,GAEzD,KAAK,UAAU;AAAA,IAClB;AAAA,IACD,cAAc,GAAG;AAEb,MAAI,KAAK,iBACLrE,EAAO,KAAK,QAAQ,CAAC8C,MAErB,KAAK,aAAa,oBAAoBA,GAAW,KAAK,cAAc,CAAC,GACrE9C,EAAO,IAAI,QAAQ,CAAC8C,MAEpB,KAAK,aAAa,oBAAoBA,GAAW,KAAK,aAAa,CAAC,GACpE9C,EAAO,OAAO,QAAQ,CAAC8C,MAEvB,KAAK,aAAa,oBAAoBA,GAAW,KAAK,gBAAgB,CAAC;AAE3E,YAAM7B,IAAQ,KAAK,QAAQ,QAAO;AAElC,MAAI,KAAK,UAAU,KAAK,eACpB,KAAK,OAAO,UAAU,OAAO,GAAG,KAAK,YAAY,MAAM,GAAG,CAAC,GAG3D,KAAK,sBACL,cAAc,KAAK,kBAAkB,GACzC,KAAK,qBAAqB;AAC1B,YAAMsD,IAAQ,MAAM;AAEhB,QAAI,KAAK,WACL,KAAK,OAAO,UACZ,KAAK,SAAS,OAEd,KAAK,qBAAqB,KAAK,kBAC/B,KAAK,cAAc,MAAM,aAAa,IACtC,KAAK,cAAc,MAAM,UAAU,KAEvChC,GAAetB,CAAK,GAEhB,KAAK,OAAO,CAAC,KAAK,IAAI,OAAO,IAAI,IACjC,KAAK,YAAY,KAAK,IAAI,OAAM,IAAK,KAAK,IAAI,kBAEzC,KAAK,YACV,KAAK,MAAM,eAAe,EAAE,OAAO,EAAG,CAAA,KAGtC,KAAK,MAAM,YAAY;AAAA,UACnB,OAAO;AAAA,UACP,UAAU,KAAK;AAAA,UACf,UAAU,KAAK;AAAA,QACvC,CAAqB,GACD,KAAK,MAAM,eAAepB,GAAU,KAAK,MAAM,KAAK,OAAO,KAAK,QAAQ,CAAC,IAE7E,KAAK,QAAQ,SAAS,MACtB,KAAK,WAAW,IAChB,KAAK,YAAY,IACjB,KAAK,UAAU;AAAA,MAC/B;AACY,MAAI,KAAK,sBAAsB,KAAK,0BAChC,KAAK,0BAA0BoB,GAAOsD,CAAK,IAG3CA;IAEP;AAAA,IACD,0BAA0BtD,GAAOuD,GAAI;AACjC,UAAI,KAAK,4BAA4B,KAAKvD,EAAM,WAAW,KAAK,CAAC,KAAK;AAClE,eAAO,QAAQ;AAEnB,YAAMwD,IAAYxD,EAAM,KAAK,OAAO;AACpC,UAAIyD,IAAU,GACVC,IAAU;AACd,YAAMC,IAAmB;AAAA,QACrB,KAAK,OAAO,cAAc,KAAK,oBAAoB;AAAA,QACnD,MAAM,OAAO,cAAc,KAAK,oBAAoB;AAAA,MACpE;AACY,UAAI,KAAK,OAAO,CAAC,KAAK,IAAI,OAAO,IAAI,KAAK,CAAC,KAAK,WAAW;AACvD,cAAMC,IAAO,KAAK,IAAI,QAAO;AAC7B,YAAI,CAACA;AACD;AACJ,cAAMC,IAAYD,EAAK,UACjBE,IAAWF,EAAK,QAAQ,eAAc,GACtCG,IAAWF,IAAYC,EAAS,SAASA,EAASD,GAAW,OAAOD,EAAK,eACzEI,IAAW/D,GAAmBuD,GAAWO,CAAQ,GACjDE,IAAe3D,EAAckD,GAAWQ,CAAQ,GAChDE,IAAe5D,EAAcyD,GAAUC,CAAQ;AACrD,QAAAP,IAAUS,EAAa,OAAOD,EAAa,OAAON,EAAiB,MACnED,IAAUQ,EAAa,MAAMD,EAAa,MAAMN,EAAiB;AAAA,MACpE,OACI;AACD,cAAMQ,IAAenE,EAAM,KAAK,UAAU,MACpCoE,IAAc;AAAA,UAChB,MAAM,KAAK,gBAAgB,aAAa,KAAK,cAAc,OAAOT,EAAiB;AAAA,UACnF,KAAK,KAAK,gBAAgB,YAAY,KAAK,cAAc,MAAMA,EAAiB;AAAA,QACpG;AACgB,QAAAF,IAAU,CAACW,EAAY,MACnB,KAAK,aAAa,KAAK,UAAU,IAAI,IAErCX,KACIU,EAAa,aAAaA,EAAa,eAAeX,EAAU,aAAaA,EAAU,eAG3FC,KAAWU,EAAa,aAAaX,EAAU,YAEnDE,IAAU,CAACU,EAAY,KACnB,KAAK,aAAa,KAAK,UAAU,IAAI,IAErCV,KACIS,EAAa,YAAYA,EAAa,gBAAgBX,EAAU,YAAYA,EAAU,gBAG1FE,KAAWS,EAAa,YAAYX,EAAU;AAAA,MAErD;AACD,YAAM/B,IAAW,KAAK,4BAA4B,OAAO,KAAK,0BAA0B,KAAK;AAC7F,MAAAF,EAAa,KAAK,QAAQ,eAAekC,OAAaC,WAAiB,GAAGjC,KAAY;AAGtF,YAAM4C,IAAU,CAAClL,MAAU;AACvB,SAAI,CAACA,KAASA,EAAM,iBAAiB,iBACjC,aAAamL,CAAY,GACzB/C,EAAa,KAAK,MAAM,GACxBgC;MAEpB,GAEkBe,IAAe,WAAWD,GAAS5C,IAAW,EAAE;AACtD,WAAK,OAAO,iBAAiB,iBAAiB4C,CAAO;AAAA,IACxD;AAAA,IACD,eAAe,GAAG;AACd,YAAM,EAAE,UAAAE,GAAU,sBAAAC,MAAyB,KAAK,QAC1CjL,IAASoG,EAAiB,CAAC,GAC3B8E,IAAY;AAAA,QACd,GAAGlL,EAAO,IAAI,KAAK,cAAc;AAAA,QACjC,GAAGA,EAAO,IAAI,KAAK,cAAc;AAAA,MACjD;AAKY,UAHAkL,EAAU,KAAK,OAAO,cAAc,KAAK,oBAAoB,KAC7DA,EAAU,KAAK,OAAO,cAAc,KAAK,oBAAoB,MAC7D,KAAK,YAAYA,GACbD,GAAsB;AACtB,cAAM,CAACzD,GAAeC,CAAa,IAAIH,GAAoB,KAAK,YAAY,KAAK,QAAQ,KAAK,KAAK,GAC7F6D,IAAY;AAAA,UACd,GAAG,KAAK,QAAQ,IAAI3D,EAAc;AAAA,UAClC,GAAG,KAAK,SAAS,IAAIA,EAAc;AAAA,QACvD,GACsB4D,IAAY;AAAA,UACd,GAAG,KAAK,QAAQ,IAAI3D,EAAc;AAAA,UAClC,GAAG,KAAK,SAAS,IAAIA,EAAc;AAAA,QACvD;AACgB,QAAI,KAAK,aAAa,KAAK,KAAK,aAAa,MACzCyD,EAAU,IAAItF,GAAM,KAAK,aAAa,IAAIuF,EAAU,GAAG,KAAK,aAAa,IAAIC,EAAU,GAAGF,EAAU,CAAC,IACrG,KAAK,aAAa,KAAK,KAAK,aAAa,MACzCA,EAAU,IAAItF,GAAM,KAAK,aAAa,IAAIuF,EAAU,GAAG,KAAK,aAAa,IAAIC,EAAU,GAAGF,EAAU,CAAC;AAAA,MAC5G;AACD,MAAIF,MAAa,MACbE,EAAU,IAAI,IAETF,MAAa,QAClBE,EAAU,IAAI,IAEd,KAAK,WACL,KAAK,OAAO,MAAM,YAAe,eAAeA,EAAU,OAAOA,EAAU;AAAA,IAElF;AAAA,IACD,eAAe;AACX,YAAM,EAAE,oBAAAG,GAAoB,mBAAArC,MAAsB,KAAK,QACjDvC,IAAQ,KAAK,QAAQ,eAAc,GACnCoE,IAAc;AAAA,QAChB,MAAM,KAAK,gBAAgB,aAAa,KAAK,cAAc;AAAA,QAC3D,KAAK,KAAK,gBAAgB,YAAY,KAAK,cAAc;AAAA,MACzE,GACkBS,IAAgB;AAAA,QAClB,MAAM,KAAK,WAAW,OAAO,KAAK,UAAU,IAAIT,EAAY;AAAA,QAC5D,KAAK,KAAK,WAAW,MAAM,KAAK,UAAU,IAAIA,EAAY;AAAA,MAC1E,GACkBT,IAAmB;AAAA,QACrB,KAAK,OAAO,cAAc,KAAK,oBAAoB;AAAA,QACnD,MAAM,OAAO,cAAc,KAAK,oBAAoB;AAAA,MACpE;AACY,WAAK,WAAW;AAChB,eAASvN,IAAI,GAAGuB,IAAMqI,EAAM,QAAQ5J,IAAIuB,GAAKvB,KAAK;AAC9C,cAAM,EAAE,MAAA6H,EAAI,IAAK+B,EAAM5J,IACjBP,IAAQoI,EAAK,aAAa,OAC1BpE,IAAQoE,EAAK,aACbnE,IAASmE,EAAK,cACd1E,IAAS;AAAA,UACX,OAAO,KAAK,QAAQM,IAAQA,IAAQ,IAAI,KAAK,QAAQ;AAAA,UACrD,QAAQ,KAAK,SAASC,IAASA,IAAS,IAAI,KAAK,SAAS;AAAA,QAC9E,GACsB2K,IAAY;AAAA,UACd,GAAG;AAAA,UACH,GAAG;AAAA,QACvB;AACgB,YAAI,EAAE,YAAAK,EAAU,IAAK9E,EAAM5J;AAE3B,QAAK0O,MACD9E,EAAM5J,GAAG,aAAa0O,IAAaxE,EAAcrC,GAAM,KAAK,SAAS;AAGzE,cAAM8G,IAAW3O,IAAI4J,EAAM,SAAS,KAAKA,EAAM5J,IAAI,IAC7C4O,IAAW5O,IAAI,KAAK4J,EAAM5J,IAAI;AAOpC,YAJI2O,KAAY,CAACA,EAAS,eACtBA,EAAS,aAAazE,EAAcyE,EAAS,MAAM,KAAK,SAAS,IAGjElP,MAAU,KAAK,OAAO;AAMtB,UAAI0M,MACA,KAAK,gBAAgBtE,GACrBA,EAAK,MAAM,aAAa,UACxBA,EAAK,MAAM,UAAU;AAEzB;AAAA,QACH;AACD,QAAI2G,MACA3G,EAAK,MAAM,qBAAwB,GAAG2G,QAEtC,KAAK,MAAM,IACP,KAAK,MAAM,IAEP/O,IAAQ,KAAK,UACXgP,EAAc,OAAOlB,EAAiB,OAAOpK,EAAO,SAASuL,EAAW,QACtED,EAAc,MAAMlB,EAAiB,OAAOmB,EAAW,MAAMvL,EAAO,UACpEsL,EAAc,MAAMlB,EAAiB,MAAMpK,EAAO,UAAUuL,EAAW,QAG3EL,EAAU,IAAI,KAAK,QAAQ,KAAK,aAAa,GACzCK,EAAW,OAAOL,EAAU,IAAI,KAAK,sBAAsB,QAAQlL,EAAO,SAASwL,MAInFN,EAAU,IAAIM,EAAS,WAAW,OAAOD,EAAW,MACpDL,EAAU,IAAIM,EAAS,WAAW,MAAMD,EAAW,MAEnD,KAAK,aAAa,SAClB,KAAK,WAAWjP,MAGfA,IAAQ,KAAK,UAChBgP,EAAc,OAAOlB,EAAiB,OAAOpK,EAAO,SAASuL,EAAW,QACtED,EAAc,MAAMlB,EAAiB,MAAMpK,EAAO,UAAUuL,EAAW,OACvED,EAAc,MAAMlB,EAAiB,MAAMpK,EAAO,UAAUuL,EAAW,MAAMhL,OAGjF2K,EAAU,IAAI,EAAE,KAAK,QAAQ,KAAK,aAAa,IAC3CK,EAAW,OAAOL,EAAU,IAAI,KAAK,sBAAsB,OAAOlL,EAAO,SAASyL,MAIlFP,EAAU,IAAIO,EAAS,WAAW,OAAOF,EAAW,MACpDL,EAAU,IAAIO,EAAS,WAAW,MAAMF,EAAW,MAEvD,KAAK,WAAWjP,KAIhBA,IAAQ,KAAK,SAASgP,EAAc,OAAOlB,EAAiB,OAAOpK,EAAO,SAASuL,EAAW,QAC9FL,EAAU,IAAI,EAAE,KAAK,QAAQ,KAAK,aAAa,IAC/C,KAAK,WAAW5O,KAEXA,IAAQ,KAAK,SAClBgP,EAAc,OAAOlB,EAAiB,QAAQmB,EAAW,OAAOvL,EAAO,UACvEkL,EAAU,IAAI,KAAK,QAAQ,KAAK,aAAa,GACzC,KAAK,YAAY,SACjB,KAAK,WAAW5O,MAKvB,KAAK,MAAM,MACZA,IAAQ,KAAK,SAASgP,EAAc,MAAMlB,EAAiB,MAAMpK,EAAO,UAAUuL,EAAW,OAC7FL,EAAU,IAAI,EAAE,KAAK,SAAS,KAAK,aAAa,IAChD,KAAK,WAAW5O,KAEXA,IAAQ,KAAK,SAClBgP,EAAc,MAAMlB,EAAiB,OAAOmB,EAAW,MAAMvL,EAAO,WACpEkL,EAAU,IAAI,KAAK,SAAS,KAAK,aAAa,GAC1C,KAAK,YAAY,SACjB,KAAK,WAAW5O,MAI5BoI,EAAK,MAAM,YAAe,eAAewG,EAAU,OAAOA,EAAU;AAAA,MACvE;AACD,MAAI,KAAK,YAAY,SACjB,KAAK,WAAW,KAAK;AAAA,IAE5B;AAAA,IACD,aAAa;AACT,YAAMA,IAAY,KAAK,WACjBQ,IAAY;AAAA,QACd,GAAG;AAAA,QACH,GAAG;AAAA,MACnB,GACkBC,IAAQ;AAAA,QACV,GAAG;AAAA,QACH,GAAG;AAAA,MACnB,GACkBC,IAAe;AAAA,QACjB,GAAG;AAAA,QACH,GAAG;AAAA,MACnB;AACY,MAAIV,EAAU,KAAK,KAAK,aAAa,IAAI,KAAK,SAAS,KACnDQ,EAAU,IAAI,GACdC,EAAM,IAAIC,EAAa,IAAI,KAAK,KAAK,KAAK,aAAa,IAAI,KAAK,SAAS,IAAIV,EAAU,KAAK,KAAK,MAAM,KAElGA,EAAU,KAAK,KAAK,aAAa,IAAI,KAAK,QAAQ,KACvDQ,EAAU,IAAI,GACdC,EAAM,IAAIC,EAAa,IAAI,KAAK,KAAK,KAAK,aAAa,IAAI,KAAK,QAAQ,IAAIV,EAAU,KAAK,KAAK,KAAK,KAEhGA,EAAU,KAAK,KAAK,aAAa,IAAI,KAAK,SAAS,KACxDQ,EAAU,IAAI,IACdC,EAAM,IAAIC,EAAa,IAAI,KAAK,KAAKV,EAAU,IAAI,KAAK,SAAS,IAAI,KAAK,aAAa,KAAK,KAAK,MAAM,KAElGA,EAAU,KAAK,KAAK,aAAa,IAAI,KAAK,QAAQ,MACvDQ,EAAU,IAAI,IACdC,EAAM,IAAIC,EAAa,IAAI,KAAK,KAAKV,EAAU,IAAI,KAAK,QAAQ,IAAI,KAAK,aAAa,KAAK,KAAK,KAAK,IAErG,KAAK,uBACL,cAAc,KAAK,kBAAkB,GACrC,KAAK,qBAAqB,QAE1BQ,EAAU,MAAM,KAAKA,EAAU,MAAM,OACrC,KAAK,qBAAqB,OAAO,YAAY,MAAM;AAC/C,cAAM1L,IAAS;AAAA,UACX,MAAM,IAAI2L,EAAM,IAAID,EAAU;AAAA,UAC9B,KAAK,IAAIC,EAAM,IAAID,EAAU;AAAA,QACrD;AACoB,QAAI,KAAK,6BACL,KAAK,QAAQ,SAAS1L,EAAO,MAAMA,EAAO,GAAG,KAG7C,KAAK,gBAAgB,aAAaA,EAAO,KACzC,KAAK,gBAAgB,cAAcA,EAAO,OAE9C,KAAK,UAAU,KAAKA,EAAO,MAC3B,KAAK,UAAU,KAAKA,EAAO,KAC3B,KAAK,aAAY;AAAA,MACpB,GAAE,CAAC;AAAA,IAEX;AAAA,EACJ;AACL,CAAC,GASK6L,KAAYnQ,EAAgB;AAAA,EAC9B,MAAM;AAAA,EACN,QAAQ,CAAC6I,EAAY;AAAA,EACrB,OAAO;AAAA,IACH,KAAK;AAAA,MACD,MAAM;AAAA,MACN,SAAS;AAAA,IACZ;AAAA,EACJ;AAAA,EACD,SAAS;AACL,QAAIM,GAAIC;AACR,WAAOpD,EAAE,KAAK,MAAMoD,KAAMD,IAAK,KAAK,QAAQ,aAAa,QAAQC,MAAO,SAAS,SAASA,EAAG,KAAKD,CAAE,CAAC;AAAA,EACxG;AACL,CAAC,GAEKiH,KAAYpQ,EAAgB;AAAA,EAC9B,MAAM;AAAA,EACN,QAAQ,CAACyM,EAAc;AAAA,EACvB,OAAO;AAAA,IACH,KAAK;AAAA,MACD,MAAM;AAAA,MACN,SAAS;AAAA,IACZ;AAAA,IACD,SAAS;AAAA,MACL,MAAM,CAAC,QAAQ,QAAQ;AAAA,MACvB,SAAS;AAAA,IACZ;AAAA,EACJ;AAAA,EACD,SAAS;AACL,QAAItD,GAAIC;AACR,WAAI,KAAK,OAAO,OACLpD,EAAE,KAAK,KAAK,KAAK,KAAK,IAAI,CAAC5E,GAAMR,MAAU;AAC9C,UAAI+L;AACJ,UAAIvL,KAAQ,MAGP;AAAA,YAAI,OAAO,KAAK,WAAY;AAC7B,UAAAuL,IAAM,KAAK,QAAQvL,CAAI;AAAA,iBAElB,OAAOA,KAAS,YACrBoI,EAAepI,GAAM,KAAK,OAAO,KACjC,OAAOA,EAAK,KAAK,YAAY;AAC7B,UAAAuL,IAAMvL,EAAK,KAAK;AAAA,iBAEX,OAAOA,KAAS;AACrB,UAAAuL,IAAMvL;AAAA;AAGN,gBAAM,IAAI,MAAM,+EAA+E;AAEnG,eAAO4E,EAAEmK,IAAW;AAAA,UAChB,KAAAxD;AAAA,UACA,OAAA/L;AAAA,QACpB,GAAmB;AAAA,UACC,SAAS,MAAM;AAAE,gBAAIuI,GAAIC;AAAI,oBAAQA,KAAMD,IAAK,KAAK,QAAQ,UAAU,QAAQC,MAAO,SAAS,SAASA,EAAG,KAAKD,GAAI,EAAE,MAAA/H,GAAM,OAAAR,EAAK,CAAE;AAAA,UAAI;AAAA,QAC3J,CAAiB;AAAA;AAAA,IACJ,CAAA,CAAC,IAECoF,EAAE,KAAK,MAAMoD,KAAMD,IAAK,KAAK,QAAQ,aAAa,QAAQC,MAAO,SAAS,SAASA,EAAG,KAAKD,CAAE,CAAC;AAAA,EACxG;AACL,CAAC;AAEkBnJ,EAAgB;AAAA,EAC/B,OAAO;AAAA,IACH,KAAK;AAAA,MACD,MAAM;AAAA,MACN,SAAS;AAAA,IACZ;AAAA,EACJ;AAAA,EACD,UAAU;AACN,SAAK,IAAI,iBAAiB;AAAA,EAC7B;AAAA,EACD,SAAS;AACL,QAAImJ,GAAIC;AACR,WAAOpD,EAAE,KAAK,MAAMoD,KAAMD,IAAK,KAAK,QAAQ,aAAa,QAAQC,MAAO,SAAS,SAASA,EAAG,KAAKD,CAAE,CAAC;AAAA,EACxG;AACL,CAAC;AC/hCD,MAAMkH,EAAW;AAAA,EA4GR,YAAYC,GAAqBC,GAAkB;AAhCnD,IAAAnR,EAAA,kBAA0B;AAC1B,IAAAA,EAAA,oBAA4B;AAC5B,IAAAA,EAAA,eAA+B,CAAA;AAC/B,IAAAA,EAAA,qBAAuB;AAEvB,IAAAA,EAAA,qBAA6B;AAC7B,IAAAA,EAAA,uBAA+B;AAC/B,IAAAA,EAAA,gBAAqB,EAAE,MAAM,MAAM,OAAO,GAAM;AAEhD,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AACA,IAAAA,EAAA;AAGL,SAAK,WAAW,MAChB,KAAK,aAAa,MAClB,KAAK,eAAe,MACpB,KAAK,QAAQ,IACb,KAAK,cAAc,IACnB,KAAK,cAAc,MACnB,KAAK,gBAAgB,MAErB,KAAK,MAAMkR,GACN,KAAA,OAAOA,EAAK,gBAAgB,OAAOA,EAAK,OAAQ,KAAK,gBAAgBA,CAAI,GAC9E,KAAK,mBAAoB,MAAMA,EAAK,QAAkB,IAAgC,IAA3BA,EAAK,UAG3D,KAAA,gBAAgBC,EAAQ,iBAAiB,KACzC,KAAA,OAAO,CAAC,CAACA,EAAQ,MACtB,KAAK,aAAaD,EAAK,cAAc,EAAE,OAAO,GAAG,QAAQ,KACzD,KAAK,WAAW,QAAQ,KAAK,WAAW,SAAS,GACjD,KAAK,WAAW,SAAS,KAAK,WAAW,UAAU,GAC9C,KAAA,QAAQA,EAAK,SAAS,IAC3B,KAAK,UAAUC,GACf,KAAK,UAAUA,EAAQ,SACvB,KAAK,SAASA,EAAQ,QACjB,KAAA,KAAK,KAAK,OAAO,IAAI,MAAM,IAAI,OAAO,WAC3C,KAAK,iBAAiBD,EAAK,gBAC3B,KAAK,aAAaA,EAAK,YACvB,KAAK,aAAaA,EAAK,YACvB,KAAK,wBAAwBC,EAAQ,iBAAiB,SAAYA,EAAQ,eAAe,IACzF,KAAK,SAAS;AAAA,EAChB;AAAA,EAxIA,OAAc,WACZC,GACAD,GACAE,GACkC;AAClC,UAAM7J,IAAa,IAAIyJ,EAAWG,GAAeD,CAAO,GAClDG,IAAU9J,EAAW,OAAO4J,EAAc,GAAa;AAC7D,WAAIC,IACK7J,IAEF8J;AAAA,EACT;AAAA,EAEA,OAAc,QAAQF,GAA8BD,GAAuC;AACzF,WAAOF,EAAW,WAAWG,GAAeD,GAAS,EAAK;AAAA,EAC5D;AAAA,EAEA,OAAc,YAAYC,GAA8BD,GAA8B;AACpF,WAAOF,EAAW,WAAWG,GAAeD,GAAS,EAAI;AAAA,EAC3D;AAAA,EAEA,OAAc,aAAaI,GAAiCJ,GAAyC;AACnG,UAAMK,IAAuC,CAAA;AAC7C,eAAWJ,KAAiBG;AAC1B,MAAAC,EAAS,KAAKP,EAAW,QAAQG,GAAeD,CAAO,CAAC;AAEnD,WAAA,QAAQ,IAAIK,CAAQ;AAAA,EAC7B;AAAA,EAEA,OAAc,iBAAiBD,GAAiCJ,GAAgC;AAC9F,UAAMM,IAAiC,CAAA;AACvC,eAAWL,KAAiBG;AAC1B,MAAAE,EAAY,KAAKR,EAAW,YAAYG,GAAeD,CAAO,CAAC;AAE1D,WAAAM;AAAA,EACT;AAAA,EAEA,OAAc,WAAWA,GAA4C;AACnE,UAAMF,IAAkC,CAAA;AACxC,eAAW/J,KAAciK;AACR,MAAAF,EAAA,KAAK/J,EAAW,MAAO,CAAA;AAEjC,WAAA+J;AAAA,EACT;AAAA,EAEA,OAAc,SAAS/J,GAA6C;AAClE,WAAO,IAAI,QAAQ,CAAC7F,GAAS2C,MAAW;AAClC,UAAA,CAACkD,EAAW,MAAM;AACT,QAAAA,EAAA,OAAO,IAAI,EAAE;AAAA,UACtB,MAAM;AACJ,YAAA7F,EAAQ6F,CAAU;AAAA,UACpB;AAAA,UACA,CAACkK,MAAQ;AAEP,YAAA/P,EAAQ6F,CAAU;AAAA,UACpB;AAAA,QAAA;AAEF;AAAA,MACF;AACA,MAAAH,EAAM,WAAWG,EAAW,IAAI,EAAE,KAAK,CAACnB,MAAY;AAClD,QAAAmB,EAAW,OAAOnB,CAAO,EAAE,KAAK,MAAM;AACpC,UAAA1E,EAAQ6F,CAAU;AAAA,WACjBlD,CAAM;AAAA,SACRA,CAAM;AAAA,IAAA,CACV;AAAA,EACH;AAAA,EAEA,OAAc,UAAUmN,GAAkD;AACxE,UAAMD,IAAuC,CAAA;AAC7C,eAAWhK,KAAciK;AACvB,MAAAD,EAAS,KAAKP,EAAW,SAASzJ,CAAU,CAAC;AAExC,WAAA,QAAQ,IAAIgK,CAAQ;AAAA,EAC7B;AAAA,EAiEO,gBAAgBN,GAAgC;AACrD,UAAM/O,IAAkB,CAAA;AACxB,IAAAA,EAAK,eAAe+O,EAAK;AACnB,UAAA3P,IAAI,IAAI;AACd,WAAIY,EAAK,gBACLZ,EAAA,QAAQY,EAAK,YAAY,GAE7BA,EAAK,mBAAmBZ,GACxBY,EAAK,OAAO+O,EAAK,MACjB/O,EAAK,OAAO+O,EAAK,MACjB/O,EAAK,OAAO+O,EAAK,MACV/O;AAAA,EACT;AAAA,EAEO,cAAuB;AACrB,WAAA,CAAC,MAAM,KAAK,gBAAgB;AAAA,EACrC;AAAA,EAIO,SAASwE,GAA+B;AAC7C,QAAIA,MAAU,QAAW;AACvB,WAAK,mBAAmBA;AACxB;AAAA,IACF;AACA,WAAO,KAAK;AAAA,EACd;AAAA,EAIO,IAAIA,GAAoD;AAC7D,WAAIA,MAAU,SACL,KAAK,OAAOA,CAAK,IAEnB,KAAK,YAAY;AAAA,EAC1B;AAAA,EAEO,MAAc;AACf,WAAA,KAAK,YACA,KAAK,cAAc,KAAK,YAAa,KAAK,KAAa,MAE5D,KAAK,qBACA,KAAK,kBAAkB;AAAA,EAGlC;AAAA,EAEO,OAAe;AAChB,WAAC,KAAK,OAGHU,EAAM,iBAAiB,KAAK,KAAK,IAAI,IAFnC;AAAA,EAGX;AAAA,EAEO,MAAc;AACf,WAAA,KAAK,QAAQ,KAAK,KAAK,KAAK,QAAQ,GAAG,MAAM,KACvC,KAAK,KAAK,KAAa,MAAM,GAAG,EAAE,QAErC;AAAA,EAET;AAAA,EAEO,KAAKsK,GAA8B;AAClC,UAAApR,IAAM,KAAK;AACjB,QAAI,KAAK;AACP,aAAO,KAAK,cAAcoR,IAAa,KAAKpR,MAAQ,MAAM,MAAMA,IAAM;AAExE,UAAME,IAAO,KAAK,QAAQ,KAAK,KAAK;AACpC,WAAIkR,KACEpR,MAAQ,MACHE,EAAK,OAAO,GAAGA,EAAK,UAAUF,EAAI,SAAS,EAAE,IAGjDE;AAAA,EACT;AAAA,EAEO,cAAuB;AAC5B,QAAI,KAAK,YAAY;AACnB,YAAMmR,IAAM,KAAK,YACXC,IAAY;AAClB,aAAOD,EAAI,MAAMC,KAAaD,EAAI,MAAMC,KAAaD,EAAI,MAAMC;AAAA,IACjE;AACO,WAAA;AAAA,EACT;AAAA,EAEO,QAAgB;AACrB,QAAI,KAAK,YAAY;AACnB,YAAMD,IAAM,KAAK;AACV,aAAA,SAASA,EAAI,KAAK,OAAOA,EAAI,KAAK,OAAOA,EAAI,KAAK;AAAA,IAC3D;AACI,QAAA,KAAK;AACA,aAAA;AAEH,UAAArR,IAAM,KAAK,OACXuR,IAAU,KAAK;AAErB,WAAIA,EAAQ,QACHA,EAAQ,QAEVzK,EAAM,gBAAgB9G,CAAG;AAAA,EAClC;AAAA,EAEO,UAAmB;AACxB,WAAO,KAAK,QAAQ,KAAK,KAAK,SAAS,iBAAiB,CAAC,CAAC,KAAK,KAAK,KAAK,MAAM,oBAAoB;AAAA,EACrG;AAAA,EAEO,UAAmB;AACxB,WAAO,KAAK,QAAQ,KAAK,KAAK,KAAK,QAAQ,OAAO,MAAM;AAAA,EAC1D;AAAA,EAEO,kBAA2B;AACzB,WAAA,KAAK,OAAO,aAAa;AAAA,EAClC;AAAA,EAEO,UAAmB;AACxB,WAAO,KAAK,QAAQ,KAAK,KAAK,KAAK,QAAQ,OAAO,MAAM;AAAA,EAC1D;AAAA,EAEO,kBAA2B;AACzB,WAAA,KAAK,OAAO,aAAa;AAAA,EAClC;AAAA,EAEO,SAAkB;AACvB,WAAO,KAAK,QAAQ,KAAK,KAAK,KAAK,QAAQ,MAAM,MAAM;AAAA,EACzD;AAAA,EAEO,OAAOqE,GAAmC;AAC/C,gBAAK,WAAWA,GACT,IAAI,QAAQ,CAACjD,GAAS2C,MAAW;AAClC,UAAA,KAAK,WAAW;AAClB,aAAK,cAAc;AAAA,UACjB,MAAM;AACJ,YAAA3C,EAAQ,IAAI;AAAA,UACd;AAAA,UACA,CAAC+P,MAAQ;AACP,YAAA/P,EAAQ,IAAI;AAAA,UACd;AAAA,QAAA;AAEF;AAAA,MACF;AACA,MAAAA,EAAQ,IAAI;AAAA,IAAA,CACb;AAAA,EACH;AAAA,EAEO,aAAaqE,GAAgC;AAClD,IAAI,CAACA,MAGL,KAAK,aAAaA,EAAQ,KAC1B,KAAK,QAAQA,EAAQ,OACjBA,EAAQ,SAASA,EAAQ,MAAM,SAASA,EAAQ,MAAM,WACnD,KAAA,WAAW,QAAQA,EAAQ,MAAM,OACjC,KAAA,WAAW,SAASA,EAAQ,MAAM,SAEzC,KAAK,eAAe,KAAK,YACzB,KAAK,aAAaA,EAAQ;AAAA,EAC5B;AAAA,EAEO,cAA6B;AAClC,WAAO,IAAI,QAAQ,CAACrE,GAAS2C,MAAW;AACtC,MAAA+C,EACG,YAAY,KAAK,eAAe,KAAK,MAAM,KAAK,UAAoB,KAAK,qBAAqB,EAC9F,KAAK,CAACrB,MAAY;AACjB,aAAK,aAAaA,CAAO,GACzBrE,EAAQ,IAAI;AAAA,MAAA,CACb,EACA,MAAM2C,CAAM;AAAA,IAAA,CAChB;AAAA,EACH;AAAA,EAEO,OAAgB;AACf,UAAA/D,IAAM,KAAK;AAEV,WADSG,GAAeH,CAAG;AAAA,EAEpC;AAAA,EAEO,gBAAgBwR,GAA+B;AACpD,UAAMC,IAAQ,KAAK;AACnB,WAAKA,KAGLD,IAAYA,KAAa,IACbA,IAAA;AAAA,MACV,QAAQA,EAAU,UAAU;AAAA,MAC5B,MAAMA,EAAU,QAAQ;AAAA,MACxB,MAAMA,EAAU,QAAQ,6BAA6B,KAAK,UAAU;AAAA,IAAA,GAElEC,EAAM,OACDD,EAAU,OACRC,EAAM,OACRD,EAAU,OACRC,EAAM,SACR,KAAK,OAAO,QAAQ,KAAK,OAAO,QAAQA,EAAM,SAEhDD,EAAU,UAfR;AAAA,EAgBX;AAAA,EAEO,QAAuB;AACtB,UAAAE,IAAM,KAAK,OAAQ;AACrB,WAAAA,EAAA,MAAM,KAAK,OACfA,EAAI,aAAa,KAAK,YAClBA,EAAA,MAAM,KAAK,OACXA,EAAA,OAAO,KAAK,QACZA,EAAA,eAAe,KAAK,KAAK,cACzBA,EAAA,WAAW,KAAK,QAChBA,EAAA,OAAO,KAAK,KAAK,MACjBA,EAAA,OAAO,KAAK,KAAK,MACjBA,EAAA,MAAM,KAAK,OACXA,EAAA,QAAQ,KAAK,SACjBA,EAAI,OAAO,KAAK,MACZA,EAAA,WAAW,KAAK,YACpBA,EAAI,SAAS,KAAK,QACZ,WAAWA,KACR,OAAA,eAAeA,GAAK,SAAS;AAAA,MAClC,KAAK,MACI,KAAK;AAAA,IACd,CACD,GAEHA,EAAI,aAAa,KAAK,YACfA;AAAA,EACT;AAAA,EAEO,WAAiB;AACtB,UAAM9K,IAAYE,EAAM,aAAa,KAAK,MAAM,KAAK,MAAM,GACrD6K,IAAY7K,EAAM,aAAa,KAAK,MAAM,KAAK,OAAiB;AAClE,IAAA,CAACF,KAAa,CAAC+K,IACjB,KAAK,QAAQ;AAAA,MACX,MAAM,CAAC/K;AAAA,MACP,MAAM,CAAC+K;AAAA,IAAA,IAGT,KAAK,QAAQ;AAAA,EAEjB;AACF;ACzaA,MAAMC,GAAY;AAAA,EACT,YACLC,GACAC,GACAC,GACAC,GACW;AACL,UAAAP,IAAmB,IAAI,MAAMI,CAAO;AAC1C,WAAAJ,EAAM,QAAQ,IACVK,MACFL,EAAM,OAAOK,IAEfL,EAAM,UAAUM,GAChBN,EAAM,WAAWO,GACVP;AAAA,EACT;AAAA,EAEO,OAAOrQ,GAAc2C,GAAaiO,GAAwB;AACzD,UAAAC,IAAiB,CAACC,MACfA,KAAU,OAAOA,IAAS;AAG/B,IAAA,CAACF,EAAS,UAAU,CAACC,KAAkBA,EAAeD,EAAS,MAAM,IACvE5Q,EAAQ4Q,CAAQ,IAETjO,EAAA,KAAK,YAAY,qCAAqCiO,EAAS,QAAQ,MAAMA,EAAS,SAASA,CAAQ,CAAC;AAAA,EAEnH;AAAA,EAEO,QACLG,GACA9N,GACA+N,IAAmC,MACnCC,GACuB;AACvB,WAAO,IAAI,QAAQ,CAACjR,GAAS2C,MAAW;AAElC,UAAAgO,IAAU,IAAI;AAClB,YAAMO,IAAY;AAEV,MAAAP,EAAA,KAAKI,GAAQ9N,GAAK,EAAI,GAG9B0N,EAAQO,KAAa,MAAM;AASrB,YARA,CAACP,KAAWA,EAAQ,eAAe,KAQnCA,EAAQ,WAAW,KAAK,EAAEA,EAAQ,eAAeA,EAAQ,YAAY,QAAQ,OAAO,MAAM;AAC5F;AAII,cAAAQ,IAAkBR,EAAQ;AAChC,YAAIS,IAAoBT,EAAQ;AAC1B,cAAAU,IAAcV,EAAQ,kBAAkB,cAAc;AAC5D,YAAIU,KAAeA,EAAY,QAAQ,kBAAkB,MAAM;AAC9C,UAAAD,IAAA,KAAK,MAAMA,CAAY;AAAA;AAElC,cAAA;AACa,YAAAA,IAAA,KAAK,MAAMA,CAAY;AAAA;UAGxC;AAEF,cAAMR,IAAyB;AAAA,UAC7B,MAAMQ;AAAA,UAEN,QAAQT,EAAQ,WAAW,OAAO,MAAMA,EAAQ;AAAA,UAChD,YAAYA,EAAQ,WAAW,OAAO,eAAeA,EAAQ;AAAA,UAC7D,SAASQ;AAAA,UACT,SAAAR;AAAA,QAAA;AAGG,aAAA,OAAO3Q,GAAS2C,GAAQiO,CAAQ,GAGpCD,IAAkB;AAAA,MAAA,GAIrBA,EAAQ,UAAU,MAAM;AACtB,QAAI,CAACA,MAILhO,EAAO,KAAK,YAAY,mBAAmB,gBAAgBgO,CAAO,CAAC,GAGlEA,IAAkB;AAAA,MAAA,GAIrBA,EAAQ,UAAU,MAAM;AAGtB,QAAAhO,EAAO,KAAK,YAAY,iBAAiB,MAAMgO,CAAO,CAAC,GAGtDA,IAAkB;AAAA,MAAA,GAIrBA,EAAQ,YAAY,MAAM;AACxB,QAAAhO,EAAO,KAAK,YAAY,oBAAoB,gBAAgBgO,CAAO,CAAC,GAGnEA,IAAkB;AAAA,MAAA,GAajB,OAAOM,KAAgB,cACzBA,EAAYN,CAAO,GAGrBA,EAAQ,KAAKK,CAAQ;AAAA,IAAA,CACtB;AAAA,EACH;AAAA,EAEO,KAAK/N,GAAa+N,GAA2BC,GAA2B;AAC7E,WAAO,KAAK,QAAQ,QAAQhO,GAAK+N,GAAUC,CAAW;AAAA,EACxD;AAAA,EAEO,OAAOhO,GAAa+N,GAA2BC,GAA2B;AAC/E,WAAO,KAAK,QAAQ,UAAUhO,GAAK+N,GAAUC,CAAW;AAAA,EAC1D;AAAA,EAEO,IAAIhO,GAAa+N,GAA2BC,GAA2B;AAC5E,WAAO,KAAK,QAAQ,OAAOhO,GAAK+N,GAAUC,CAAW;AAAA,EACvD;AACF;AAEA,MAAeK,IAAA,IAAId,GAAY;ACpJ/B,MAAMe,GAAa;AAAA,EACV,WAAWC,GAAqBC,GAAiC;AAEtE,QADID,EAAA,iBAAiB,UAAU,kBAAkB,GAC7CC;AACF,iBAAW7F,KAAO6F;AACZ,QAAAA,EAAQ,eAAe7F,CAAG,KACxB4F,EAAA,iBAAiB5F,GAAM6F,EAAgB7F,EAAI;AAI9C,WAAA4F;AAAA,EACT;AAAA,EAEO,SACLvO,GACAwO,GACAT,GACAU,GACAT,GACuB;AACvB,WAAOK,EAAK,KAAKrO,GAAK+N,GAAU,CAACQ,MAAQ;AAClC,WAAA,WAAWA,GAAKC,CAAO,GAC5BD,EAAI,OAAO,iBAAiB,YAAYE,GAAkB,EAAK,GAC3D,OAAOT,KAAgB,cACzBA,EAAYO,CAAG;AAAA,IACjB,CACD;AAAA,EACH;AAAA,EAEO,eACLvO,GACAwO,GACAE,GACAV,GACuB;AACnB,WAAA,OAAOU,KAAe,aACXA,IAAA,KAAK,UAAUA,CAAU,IAEjCL,EAAK,OAAOrO,GAAK0O,GAAY,CAACH,MAAQ;AACvC,MAAAA,EAAA,iBAAiB,gBAAgB,kBAAkB,GAClD,KAAA,WAAWA,GAAKC,CAAO,GACxB,OAAOR,KAAgB,cACzBA,EAAYO,CAAG;AAAA,IACjB,CACD;AAAA,EACH;AAAA,EAEO,eACLvO,GACAwO,GACAE,GACAV,GACuB;AACnB,WAAA,OAAOU,KAAe,aACXA,IAAA,KAAK,UAAUA,CAAU,IAEjCL,EAAK,IAAIrO,GAAK0O,GAAY,CAACH,MAAQ;AACpC,MAAAA,EAAA,iBAAiB,gBAAgB,kBAAkB,GAClD,KAAA,WAAWA,GAAKC,CAAO,GACxB,OAAOR,KAAgB,cACzBA,EAAYO,CAAG;AAAA,IACjB,CACD;AAAA,EACH;AAAA,EAaO,mBAAmB3L,GAAwBkK,GAAgB7J,GAAkB;AAClF,QAAIkK,IAAYL,EAAI;AACpB,QAAIA,EAAI,YAAYA,EAAI,SAAS;AAC3B,UAAA;AAEU,QAAAK,IADKL,EAAI,SAAS,KAAK,SAAS,KAAK,MAAMA,EAAI,SAAS,IAAI,EAAE;AAAA;MAI5E;AAEE,IAAClK,EAAW,UACdA,EAAW,QAAQ,KAErBA,EAAW,MAAM,SAASuK,GAC1BvK,EAAW,OAAO,OAAO,QACzBA,EAAW,OAAO,QAAQuK,GACtBlK,KACF,OAAO,WAAW,MAAM;AAClB,MAACL,EAAW,UACdA,EAAW,QAAQ,KAErBA,EAAW,MAAM,SAAS,IACtB,CAACA,EAAW,MAAM,QAAQ,CAACA,EAAW,MAAM,SAC9CA,EAAW,QAAQ;AAAA,OAEpBK,CAAO;AAAA,EAEd;AAAA,EAEO,OACLjD,GACAwO,GACA3B,GACA8B,GACAC,GACAZ,GACA;AACA,QAAIa,IAAwB,MAAM;AAAA,IAAA;AAGlC,IAAID,MACFC,IAAwB,MAAM;AAC5B,UAAIC,IAAW;AACf,iBAAWlM,KAAciK;AACvB,QAAAiC,KAAYlM,EAAW;AAEd,MAAAgM,EAAAE,IAAWjC,EAAY,MAAM;AAAA,IAAA;AAG5C,UAAMD,IAAqD,CAAA;AAC3D,QAAImC,IAAqB;AACzB,eAAWnM,KAAciK,GAAa;AAChC,UAAAkB;AACA,MAAA,OAAOY,KAAmB,aAC5BZ,IAAWY,EAAe/L,CAAU,KAEpCmL,IAAW,IAAI,YACNA,EAAA,OAAO,QAAQnL,EAAW,IAAY,GAC/CmL,EAAS,OAAO,YAAYnL,EAAW,KAAM,CAAA;AAE/C,YAAM8J,IAAU,KAAK;AAAA,QACnB1M;AAAA,QACAwO;AAAA,QACAT;AAAA,QACA,CAACiB,MAAkB;AACjB,gBAAMC,IAAoBD,EAAc,SAAS,MAAOA,EAAc;AAEtE,UAAApM,EAAW,SAASqM,KAAoB,MAAM,UAAUA,CAAgB,GAClDJ;QACxB;AAAA,QACA,CAACN,MAAQ;AACP,UAAA3L,EAAW,MAAM2L,GACb,OAAOP,KAAgB,cACzBA,EAAYO,CAAG;AAAA,QAEnB;AAAA,MAAA;AAEO,MAAA3B,EAAA;AAAA,QACP,IAAI,QAAQ,CAAC7P,GAAS2C,MAAW;AACvB,UAAAgN,EAAA;AAAA,YACN,CAACiB,MAAa;AACZ,qBAAO/K,EAAW,KACPA,EAAA,OAAO,OAAO+K,EAAS,MAClC/K,EAAW,OAAO,QAAQ,IAC1BA,EAAW,SAAS,GAAG,GACnBA,EAAW,aACbA,EAAW,SAAS,GACpB,OAAOA,EAAW,WAEpB7F,EAAQ4Q,CAAQ;AAAA,YAClB;AAAA,YACA,CAACb,MAAQ;AACF,mBAAA,mBAAmBlK,GAAYkK,CAAG,GACvC/P,EAAQ+P,CAAG,GACXiC;AAAA,YACF;AAAA,UAAA;AAAA,QACF,CACD;AAAA,MAAA;AAAA,IAEL;AAEA,WAAO,IAAI,QAAQ,CAAChS,GAAS2C,MAAW;AACtC,cAAQ,IAAIkN,CAAQ,EAAE,KAAK,CAACsC,MAAc;AACpC,YAAAH,MAAuBnC,EAAS,QAAQ;AAE1C,UAAAlN,EAAOwP,CAAS;AAChB;AAAA,QACF;AACA,QAAAnS,EAAQmS,CAAS;AAAA,SAChBxP,CAAM;AAAA,IAAA,CACV;AAAA,EACH;AAAA,EAEO,aACLM,GACAwO,GACA5L,GACA8L,GACAV,GACA;AACA,WAAO,IAAI,QAAQ,CAACjR,GAAS2C,MAAW;AACtC,MAAIkD,EAAW,OACbA,EAAW,IAAI,SAEb8L,MAAe,WACjBA,IAAa9L,EAAW,OAAO,OAE7B8L,KACF,KAAK,eAAe1O,GAAKwO,GAASE,GAAY,CAACH,MAAQ;AACjD,QAAA,OAAOP,KAAgB,cACzBA,EAAYO,CAAG;AAAA,MAElB,CAAA,EAAE;AAAA,QACD,CAACY,MAAW;AACV,UAAApS,EAAQoS,CAAM;AAAA,QAChB;AAAA,QACA,CAACrC,MAAQ;AACF,eAAA,mBAAmBlK,GAAYkK,CAAG,GACvCpN,EAAOoN,CAAG;AAAA,QACZ;AAAA,MAAA;AAAA,IAEJ,CACD;AAAA,EACH;AAAA,EAEO,aACL9M,GACAwO,GACA5L,GACA8L,GACAV,GACA;AACA,WAAO,IAAI,QAAQ,CAACjR,GAAS2C,MAAW;AACtC,UAAIkD,EAAW;AAEb,eAAAA,EAAW,WAAW,MAAM;AAC1B,eAAK,aAAa5C,GAAKwO,GAAS5L,GAAY8L,CAAU;AAAA,QAAA,GAEjD3R,EAAQ,MAAS;AAE1B,MAAI2R,MAAe,WACJA,IAAA9L,EAAW,OAAO,QAAQ,CAAA,GACvC8L,EAAW,eAAe9L,EAAW,aAC1B8L,EAAA,WAAW9L,EAAW,SAE/B8L,KACF,KAAK,eAAe1O,GAAKwO,GAASE,GAAY,CAACH,MAAQ;AACjD,QAAA,OAAOP,KAAgB,cACzBA,EAAYO,CAAG;AAAA,MAElB,CAAA,EAAE;AAAA,QACD,CAACZ,MAAa;AACD,UAAA/K,EAAA,OAAO,OAAO+K,EAAS,MAClC/K,EAAW,OAAO,QAAQ,IAC1B7F,EAAQ4Q,CAAQ;AAAA,QAClB;AAAA,QACA,CAACb,MAAQ;AACF,eAAA,mBAAmBlK,GAAYkK,CAAG,GACvCpN,EAAOoN,CAAG;AAAA,QACZ;AAAA,MAAA;AAAA,IAEJ,CACD;AAAA,EACH;AAAA,EAEO,YACLsC,GACApP,GACA4C,GACA4L,GACAC,GACAY,GACAC,GACA;AACA,UAAMC,IAAyBF,IAAeA,EAAazM,CAAU,IAAI,CAAA;AACzE,WAAO,IAAI,QAAQ,CAAC7F,GAAS2C,MAAW;AACtC,UAAI,CAAC0P;AACH,eAAO1P,EAAO,IAAI,MAAM,4CAA4C,CAAC;AAIvE,YAAMnC,IAAOqF,EAAW,MAClB4M,IAAS,IAAIJ,EAAI,OAAO7R,GAAM;AAAA,QAClC,UAAUyC;AAAA,QACV,SAAAwO;AAAA,QACA,aAAae,EAAW,cAAcA,EAAW,cAAc,CAAC,GAAG,KAAM,KAAM,KAAO,GAAK;AAAA,QAC3F,UAAUA,EAAW,WACjBA,EAAW,WACX;AAAA,UACE,UAAUhS,EAAK;AAAA,UACf,UAAUA,EAAK;AAAA,QACjB;AAAA,QACJ,QAAQ6P,GAAY;AAClB,UAAA1N,EAAO0N,CAAK;AAAA,QAEd;AAAA,QACA,WAAWqC,GAAuBC,GAAoB;AAEpD,UAAAjB,EADc,EAAE,QAAQgB,GAAe,OAAOC,EAAW,CACnC;AAAA,QACxB;AAAA,QACA,YAAY;AACV,UAAA3S,EAAQyS,CAAM;AAAA,QAChB;AAAA,QACA,iBAAiB,SAAUG,GAAU;AAC7B,gBAAApB,IAAsBoB,EAAI;AAChC,UAAApB,EAAI,kBAAkBe,MAA0B;AAAA,QAClD;AAAA,MAAA,CACD;AACD,MAAA1M,EAAW,YAAY4M,GAEvBA,EAAO,MAAM;AAAA,IAAA,CACd;AAAA,EACH;AAAA,EAEO,UACLJ,GACApP,GACAwO,GACA3B,GACA+B,GACAS,GACAC,GACA;AACA,QAAIT,IAAwB,MAAM;AAAA,IAAA;AAGlC,IAAID,MACFC,IAAwB,MAAM;AAC5B,UAAIC,IAAW;AACf,iBAAWlM,KAAciK;AACvB,QAAAiC,KAAYlM,EAAW;AAEd,MAAAgM,EAAAE,IAAWjC,EAAY,MAAM;AAAA,IAAA;AAG5C,UAAMD,IAAW,CAAA;AACjB,eAAWhK,KAAciK,GAAa;AACpC,YAAMH,IAAU,KAAK;AAAA,QACnB0C;AAAA,QACApP;AAAA,QACA4C;AAAA,QACA4L;AAAA,QACA,CAACQ,MAAiC;AAChC,gBAAMC,IAAoBD,EAAc,SAAS,MAAOA,EAAc;AAEtE,UAAApM,EAAW,SAASqM,KAAoB,MAAM,UAAUA,CAAgB,GAClDJ;QACxB;AAAA,QACAQ;AAAA,QACAC;AAAA,MAAA;AAEM,MAAA5C,EAAA;AAAA,QACN,CAACiB,MAAa;AAEZ,UAAA/K,EAAW,SAAS,GAAG;AAAA,QACzB;AAAA,QACA,CAACkK,MAAQ;AACF,eAAA,mBAAmBlK,GAAYkK,CAAG;AAAA,QACzC;AAAA,MAAA,GAEFF,EAAS,KAAKF,CAAO;AAAA,IACvB;AACO,WAAA,QAAQ,IAAIE,CAAQ;AAAA,EAC7B;AAAA,EAEO,gBAAgBwC,GAAUpP,GAAawO,GAAiB5L,GAAwB;AACrF,WAAO,IAAI,QAAQ,CAAC7F,GAAS2C,MAAW;AACtC,UAAI,CAAC0P;AACH,eAAO1P,EAAO,cAAc;AAE1B,UAAA,CAACkD,EAAW;AACd,eAAO7F,EAAQ,MAAS;AAGpB,YAAA6S,IAAQ,CAACC,MACN,IAAI,QAAQ,CAACC,GAAKC,MAAQ;AAC/B,QAAAnN,EAAW,UAAU,MAAMiN,GAAiB,CAAC/C,MAAa;AACxD,cAAIA,GAAK;AACF,iBAAA,mBAAmBlK,GAAYkK,CAAG,GACvCiD,EAAIjD,CAAG;AACP;AAAA,UACF;AACA,UAAAgD,EAAI,MAAS;AAAA,QAAA,CACd;AAAA,MAAA,CACF;AAEG,MAAAF,EAAA,EAAK,EAAE,KAAK,MAAM;AACtB,eAAO,WAAW,MAAM;AACtB,UAAAA,EAAM,EAAI,EAAE,KAAK7S,GAAS2C,CAAM;AAAA,WAC/B,GAAI;AAAA,MAAA,CACR;AAAA,IAAA,CACF;AAAA,EACH;AACF;AAEA,MAAesQ,IAAA,IAAI1B,GAAa;ACrZhC,IAAI2B,KAAU;AAAA,EACZ,KAAK;AACP;ACgIA,IAAIC,IAAc;AAElB,MAA+BC,KAAgB,gBAAAnU,EAAA;AAAA,EAC7C,MAAM;AAAA,EACN,YAAY;AAAA,IACV,aAAA2G;AAAA,IACA,gBAAAyN;AAAA,IACA,aAAAC;AAAA,IACA,iBAAAC;AAAA,IACA,WAAAlE;AAAA,IACA,WAAAD;AAAA,EACF;AAAA,EACA,YAAY;AAAA,IAEV,mBAAmB;AAAA,MACjB,YAAYnG,GAAiB;AACzB,QAAAA,EAAW,iBAAiB;AAAA,MAChC;AAAA,IACF;AAAA,EACF;AAAA,EACA,OAAO;AAAA,IACL,QAAQ;AAAA,IACR,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,IACA,cAAc;AAAA,IACd,SAAS;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,IACT,WAAW;AAAA,IACX,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,SAAS;AAAA,IACT,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,UAAU;AAAA,IAEV,MAAM;AAAA,IACN,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,MACR,MAAM,CAAC,QAAQ,OAAO;AAAA,IACxB;AAAA,IACA,OAAO;AAAA,IACP,eAAe;AAAA,IACf,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,eAAe;AAAA,MACb,MAAM;AAAA,IACR;AAAA,IACA,WAAW;AAAA,IACX,uBAAuB;AAAA,IACvB,eAAe;AAAA,EACjB;AAAA,EACA,OAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,OAAO;AACE,WAAA;AAAA,MACL,aAAa,CAAC;AAAA,MACd,gBAAgB,CAAC;AAAA,MACjB,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,oBAAoB;AAAA,MACpB,iBAAiB;AAAA,MACjB,UAAU;AAAA,MACV,aAAa;AAAA,IAAA;AAAA,EAEjB;AAAA,EACA,UAAU;AAAA,IACR,kBAAuC;AACrC,aAAO,KAAK;AAAA,IACd;AAAA,IACA,aAAsB;AAChB,aAAC,KAAK,cAGL,KAAK,WAGH,KAAK,YAAY,SAAS,KAAK,WAF7B,KAHA,KAAK,YAAY,WAAW;AAAA,IAMvC;AAAA,IACA,mBAA2B;AACzB,aAAI,KAAK,WACA,KAAK,WAEP,UAAU,KAAK,cAAc,UAAU;AAAA,IAChD;AAAA,IACA,cAAuB;AACjB,aAAA,OAAO,KAAK,aAAc,WACrB,KAAK,cAAc,UAErB,CAAC,CAAC,KAAK;AAAA,IAChB;AAAA,IACA,aAAsB;AACb,aAAA,CAAC,CAAC,KAAK;AAAA,IAChB;AAAA,IACA,cAAuB;AACjB,aAAA,OAAO,KAAK,YAAa,WACpB,KAAK,aAAa,UAEvB,KAAK,aAAa,SACb,MAAM,QAAQ,KAAK,WAAW,IAEhC,CAAC,CAAC,KAAK;AAAA,IAChB;AAAA,IACA,aAAsB;AACpB,aAAO,KAAK;AAAA,IACd;AAAA,IACA,cAAc;AACL,aAAA;AAAA,QACL,WAAW,KAAK;AAAA,QAChB,OAAO,KAAK;AAAA,QACZ,UAAU,KAAK;AAAA,QACf,YAAY;AAAA,MAAA;AAAA,IAEhB;AAAA,EACF;AAAA,EACA,OAAO;AAAA,IACL,eAAe;AAAA,MACb,UAAU;AACR,aAAK,WAAW;AAAA,MAClB;AAAA,MACA,MAAM;AAAA,IACR;AAAA,EACF;AAAA,EACA,UAAU;AACR,SAAK,WAAW,IAAI,KAAO,EAAA,QAAA,EAAU,SAAS,EAAE,IAAI,KAAK,OAAS,EAAA,SAAS,EAAE,EAAE,MAAM,CAAC,GACtF,KAAK,WAAW;AAAA,EAClB;AAAA,EACA,SAAS;AAAA,IACP,gBAAgBpD,GAAwBvD,GAAwC;AAC9E,aAAO,IAAI,QAAQ,CAACtC,GAAS2C,MAAW;AAChC,cAAAJ,IAAS,SAAS,cAAc,QAAQ;AAE3C,QAAAmD,EAAA;AAAA,UACCpD;AAAA,UACAC;AAAA,UACAsD,EAAW;AAAA,UACX,KAAK,iBAAiB;AAAA,UACtB,KAAK;AAAA,QAAA,EAEN,KAAK,CAACC,MAAc;AACnB,UAAAD,EAAW,aAAaC,EAAU,OAClCD,EAAW,iBAAiBC,EAAU,KAC3BD,EAAA,WAAW,QAAQC,EAAU,OAC7BD,EAAA,WAAW,SAASC,EAAU,QACjC9F;WACP2C,CAAM;AAAA,MAAA,CACZ;AAAA,IACH;AAAA,IACA,UAAUkD,GAA8B;AAClC,UAAA,CAACA,EAAW;AACd;AAEF,YAAM,EAAC,iBAAAvB,EAAe,IAAI,OAAO,OAAO,OAAO,aAAa,IACtD,EAAC,iBAAAC,EAAe,IAAI,OAAO,OAAO,OAAO,aAAa,IACtDjC,IAAQ,SAAS,cAAc,OAAO;AACtC,MAAAA,EAAA,MAAMgC,EAAgBuB,EAAW,IAAI,GAC3C,KAAK,gBAAgBA,GAAYvD,CAAK,EAAE,KAAK,MAAM;AACjD,QAAAiC,EAAgBjC,EAAM,GAAG;AAAA,MAAA,CAC1B,GACDA,EAAM,KAAK;AAAA,IACb;AAAA,IACA,2BACEkR,GACAlD,GAC4B;AACxB,UAAA;AAMJ,aALIkD,aAA2BlE,IACzB,IAAA,KAAK,YAAY,QAAQkE,CAAe,IAExC,IAAA,KAAK,eAAe,QAAQA,CAAe,GAE7C,MAAM,KACDA,IAEFlD,IAAM,KAAK,eAAe,KAAK,KAAK,YAAY;AAAA,IACzD;AAAA,IACA,yBAAyBkD,GAA4D;AAC5E,aAAA,KAAK,2BAA2BA,GAAiB,EAAI;AAAA,IAC9D;AAAA,IACA,sBAAsBA,GAAyD;AACtE,aAAA,KAAK,2BAA2BA,GAAiB,EAAK;AAAA,IAC/D;AAAA,IACA,mBAAmBC,GAA4B;AAC7C,YAAM/Q,IAAkB,KAAK;AACzB,aAAAA,MAAoB,MAAQA,MAAoB,KAC3C+Q,IAEF,CAAC9C,MAA4B;AAClC,QAAAA,EAAQ,kBAAkBjO,GACtB,OAAO+Q,KAAiB,cAC1BA,EAAa9C,CAAO;AAAA,MACtB;AAAA,IAEJ;AAAA,IACA,OACE1N,GACAwO,GACAiC,GACA9B,GACA6B,GACc;AACd,YAAME,IAAiC,CAAA,GACjCC,IAAqC,CAAA;AAC3C,iBAAWJ,KAAmBE,GAAkB;AACxC,cAAA7N,IAAa,KAAK,sBAAsB2N,CAAe;AACzD,QAAC3N,EAAW,UACd8N,EAAiB,KAAK9N,CAAU,GAChC+N,EAAkB,KAAK,KAAK,yBAAyB/N,CAAU,CAAC;AAAA,MAEpE;AACA,aAAI,KAAK,YACAoN,EAAS;AAAA,QACdC,GAAQ;AAAA,QACRjQ;AAAA,QACAwO;AAAA,QACAkC;AAAA,QACA,CAACE,MAAoB;AACnB,eAAK,kBAAkBA;AAAA,QACzB;AAAA,QACA,KAAK,cAAc,KAAO,SAAY,KAAK;AAAA,QAC3C,KAAK;AAAA,MAAA,IAGF,IAAI,QAAQ,CAAC7T,GAAS2C,MAAW;AAEnC,QAAAsQ,EAAA;AAAA,UACChQ;AAAA,UACAwO;AAAA,UACAkC;AAAA,UACA/B;AAAA,UACA,CAACiC,MAAoB;AACnB,iBAAK,kBAAkBA;AAAA,UACzB;AAAA,UACA,KAAK,mBAAmBJ,CAAY;AAAA,QAAA,EAErC;AAAA,UACC,CAACV,MAAa;AACZ,qBAAS3S,IAAI,GAAGA,IAAI2S,EAAI,QAAQ3S;AAC1B,cAAA2S,EAAA3S,GAAG,aAAawT,EAAkBxT;AAEnC,iBAAA,MAAM,UAAU2S,CAAG,GACxB/S,EAAQ+S,CAAG;AAAA,UACb;AAAA,UACA,CAAChD,MAAa;AACZ,qBAAS3P,IAAI,GAAGA,IAAI2P,EAAI,QAAQ3P;AAC1B,cAAA2P,EAAA3P,GAAG,aAAawT,EAAkBxT;AAEnC,iBAAA,MAAM,gBAAgB2P,CAAG,GAC9BpN,EAAOoN,CAAG;AAAA,UACZ;AAAA,QAAA;AAAA,MACF,CACH;AAAA,IACH;AAAA,IACA,aACE9M,GACAwO,GACA+B,GACA7B,GACA8B,GACc;AACV,MAAA,KAAK,YAAY,SAAS,MAC5B,KAAK,kBAAkB;AAEnB,YAAA5N,IAAa,KAAK,sBAAsB2N,CAAe,GACvD/D,IAAgB,KAAK,yBAAyB+D,CAAe;AACnE,aAAI,KAAK,YACAP,EAAS,gBAAgBC,GAAQ,KAAKjQ,GAAKwO,GAAS5L,CAAU,IAEhE,IAAI,QAAQ,CAAC7F,GAAS2C,MAAW;AAEnC,QAAAsQ,EAAA;AAAA,UACChQ;AAAA,UACAwO;AAAA,UACA5L;AAAA,UACA8L;AAAA,UACA,KAAK,mBAAmB8B,CAAY;AAAA,QAAA,EAErC;AAAA,UACC,CAACV,MAAa;AACZ,YAAAA,EAAI,aAAatD,GACZ,KAAA,MAAM,iBAAiBsD,CAAG,GAC/B/S,EAAQ+S,CAAG;AAAA,UACb;AAAA,UACA,CAAChD,MAAa;AACZ,YAAAA,EAAI,aAAaN,GACZ,KAAA,MAAM,uBAAuBM,CAAG,GACrCpN,EAAOoN,CAAG;AAAA,UACZ;AAAA,QAAA;AAAA,MACF,CACH;AAAA,IACH;AAAA,IACA,aACE9M,GACAwO,GACA5L,GACA8L,GACA8B,GACc;AACD,MAAA5N,IAAA,KAAK,sBAAsBA,CAAU;AAC5C,YAAA4J,IAAgB,KAAK,yBAAyB5J,CAAU;AAC9D,aAAO,IAAI,QAAQ,CAAC7F,GAAS2C,MAAW;AAEnC,QAAAsQ,EAAA;AAAA,UACChQ;AAAA,UACAwO;AAAA,UACA5L;AAAA,UACA8L;AAAA,UACA,KAAK,mBAAmB8B,CAAY;AAAA,QAAA,EAErC;AAAA,UACC,CAACV,MAAa;AACZ,YAAAA,EAAI,cAActD,GACb,KAAA,MAAM,iBAAiBsD,CAAG,GAC/B/S,EAAQ+S,CAAG;AAAA,UACb;AAAA,UACA,CAAChD,MAAQ;AACP,YAAAA,EAAI,cAAcN,GACb,KAAA,MAAM,uBAAuBM,CAAG,GACrCpN,EAAOoN,CAAG;AAAA,UACZ;AAAA,QAAA;AAAA,MACF,CACH;AAAA,IACH;AAAA,IACA,WAAWD,GAAyC;AAClD,aAAI,CAAC,KAAK,aAAa,KAAK,SAAS,KAC5B,QAAQ,QAAQ,EAAK,IAEvB,KAAK;AAAA,QACV,KAAK;AAAA,QACL,KAAK;AAAA,QACLA;AAAA,QACA,KAAK;AAAA,MAAA;AAAA,IAET;AAAA,IACA,iBAAiBjK,GAAsD;AACrE,aAAI,CAAC,KAAK,aAAa,KAAK,SAAS,KAC5B,QAAQ,QAAQ,EAAK,IAEvB,KAAK;AAAA,QACV,KAAK;AAAA,QACL,KAAK;AAAA,QACLA;AAAA,QACA,KAAK;AAAA,MAAA;AAAA,IAET;AAAA,IACA,iBAAiBA,GAAsC;AACrD,aAAI,CAAC,KAAK,aAAa,KAAK,SAAS,KAC5B,QAAQ,QAAQ,EAAK,IAEvB,KAAK;AAAA,QACV,KAAK;AAAA,QACL,KAAK;AAAA,QACLA;AAAA,QACA,KAAK;AAAA,MAAA;AAAA,IAET;AAAA,IACA,WAAWiO,GAAsBC,GAA+B;AAC9D,aAEED,EAAM,SAASC,EAAM,QACrBD,EAAM,SAASC,EAAM,QACrBD,EAAM,SAASC,EAAM,QACrBD,EAAM,aAAaC,EAAM,YAEzBD,EAAM,iBAAiBC,EAAM;AAAA,IAEjC;AAAA,IACA,mBAAmBvT,GAA8B;AACpC,iBAAAqF,KAAc,KAAK;AAC5B,YAAI,KAAK,WAAWrF,GAAMqF,EAAW,IAAqB;AACjD,iBAAA;AAGJ,aAAA;AAAA,IACT;AAAA,IACA,YAAY3F,GAAgC;AAI1C,UAHI,KAAK,aAAa,MAAQ,KAAK,aAAa,MAG5C,KAAK,eAAe,CAAC,KAAK;AAC5B;AAEF,YAAM4P,IAA4B,CAAA,GAC5BkE,IAAwB,CAAA;AAE9B,eAAS5T,IAAI,GAAGA,IAAIF,EAAM,QAAQE;AAChC,QAAI,KAAK,eAAe,KAAK,mBAAmBF,EAAME,EAAmB,KAIpEF,EAAME,GAAG,KAAK,WAAW,GAAG,KACjB4T,EAAA,KAAK9T,EAAME,EAAE;AAGvB,MAAAF,IAAA8T,GAEN,KAAK,eACL,KAAK,YACL9T,EAAM,SAAS,KAAK,WAAW,KAAK,YAAY,WAEhDA,IAAQA,EAAM,MAAM,GAAG,KAAK,WAAW,KAAK,YAAY,MAAM;AAEhE,iBAAWM,KAAQN;AACL,QAAA4P,EAAA;AAAA,UACV,IAAIR;AAAA,YACF;AAAA,cACE,MAAA9O;AAAA,YACF;AAAA,YACA;AAAA,cACE,MAAM,KAAK;AAAA,cACX,SAAS,KAAK;AAAA,cACd,QAAQ,KAAK;AAAA,cACb,eAAe,KAAK;AAAA,cACpB,cAAc,KAAK;AAAA,cACnB,iBAAiB,KAAK;AAAA,YACxB;AAAA,UACF;AAAA,QAAA;AAIJ,iBAAWqF,KAAciK;AACvB,QAAIjK,EAAW,KAAK,QAAQ,KAAK,OAAO,QAEtC,KAAK,UAAUA,CAAU;AAG7B,MAAI,KAAK,cAEP,KAAK,YAAY,OAAO,KAAK,YAAY,QAAQ,GAAG,GAAGiK,CAAW,IAElE,KAAK,cAAcA,GAGrBR,EAAW,UAAUQ,CAAW,EAAE,KAAK,CAACmE,MAAiC;AACvE,cAAMC,IAAoB5E,EAAW,WAAW,KAAK,WAAW;AAChE,aAAK,iBAAiB4E,GAEjB,KAAA,MAAM,wBAAwB,KAAK,cAAc,GACjD,KAAA,MAAM,UAAUD,CAAc;AAAA,MAAA,CACpC,GACD,KAAK,WAAWnE,CAAW;AAAA,IAC7B;AAAA,IACA,aAAa3M,GAAoB;AAC3B,UAAAjD,IAA4BiD,EAAM,OAA4B;AAE9D,MADC,KAAA,MAAM,UAAUA,CAAK,GACrBjD,EAAM,OAGN,KAAK,gBACAA,IAAA,CAACA,EAAM,EAAE,IAEnB,KAAK,YAAYA,CAAK,GAClB,KAAK,MAAM,cACX,KAAK,MAAM,UAAkB,QAAQ;AAAA,IAG3C;AAAA,IACA,KAAKiD,GAAwB;AAK3B,MAJAA,EAAM,gBAAgB,GACtBA,EAAM,eAAe,GACPgQ,IAAA,GACd,KAAK,aAAa,IACd,OAAK,aAAa,MAAQ,KAAK,aAAa,QAG5C,CAAChQ,EAAM,gBAGXuC,EAAM,yBAAyBvC,EAAM,YAAY,EAAE,KAAK,CAACjD,MAAU;AAEjE,QADK,KAAA,MAAM,QAAQiD,CAAK,GACpB,GAACjD,KAAS,CAACA,EAAM,QAGhB,KAAK,gBACAA,IAAA,CAACA,EAAM,EAAE,IAEnB,KAAK,YAAYA,CAAK;AAAA,MAAA,CACvB;AAAA,IACH;AAAA,IACA,UAAUiD,GAAwB;AAC5B,MAAA,CAACA,EAAM,iBAGX,KAAK,aAAa,IAClBA,EAAM,gBAAgB,GACtBA,EAAM,eAAe,GACrBgQ,KACAhQ,EAAM,aAAa,aAAa;AAAA,IAClC;AAAA,IACA,SAASA,GAAwB;AAC3B,MAAA,CAACA,EAAM,iBAGX,KAAK,aAAa,IAClBA,EAAM,gBAAgB,GACtBA,EAAM,eAAe,GACrBA,EAAM,aAAa,aAAa;AAAA,IAClC;AAAA,IACA,UAAUA,GAAwB;AAC5B,MAAA,CAACA,EAAM,iBAGXgQ,KACIA,MAAgB,MAClB,KAAK,aAAa;AAAA,IAEtB;AAAA,IACA,iBAAiBtN,GAA8B;AAG7C,UAFK,KAAA,MAAM,gBAAgBA,CAAU,GAEjC,CAAC,KAAK,aAAa,KAAK,SAAS,IAAO;AAC1C,cAAMzF,IAAI,KAAK,YAAY,QAAQyF,CAAU;AAE7C,QAAIzF,MAAM,OACR,KAAK,YAAY,OAAOA,GAAG,CAAC,EAAE,IAC9B,KAAK,eAAe,OAAOA,GAAG,CAAC,EAAE,IAC5B,KAAA,MAAM,wBAAwB,KAAK,cAAc;AAGxD;AAAA,MACF;AACA,WAAK,iBAAiByF,CAAU;AAAA,IAClC;AAAA,IACA,aAAaA,GAA8B;AACzC,YAAMzF,IAAI,KAAK,YAAY,QAAQyF,CAAU;AAE7C,MAAIzF,MAAM,OACH,KAAA,YAAYA,GAAG,QAAQ,IACvB,KAAA,eAAeA,GAAG,QAAQ,IAC1B,KAAA,MAAM,wBAAwB,KAAK,cAAc;AAAA,IAE1D;AAAA,IACA,iBAAiBoT,GAAmC;AAClD,YAAMpT,IAAI,KAAK,YAAY,QAAQoT,CAAe;AAC9C,UAAA3N,IAAa,KAAK,YAAYzF,IAC9BqP,IAAgB,KAAK,eAAerP;AAEnC,WAAA,MAAM,wBAAwB,KAAK,cAAc,GACjD,KAAA,MAAM,UAAUyF,CAAU,GAE/BA,IAAa,KAAK,YAAY,OAAOzF,GAAG,CAAC,EAAE,IAC3CqP,IAAgB,KAAK,eAAe,OAAOrP,GAAG,CAAC,EAAE,IAE5C,KAAA,iBAAiByF,CAAU,EAAE;AAAA,QAChC,MAAM;AAAA,QAEN;AAAA,QACA,MAAM;AACJ,eAAK,YAAY,OAAOzF,GAAG,GAAGyF,CAAU,GACxC,KAAK,eAAe,OAAOzF,GAAG,GAAGqP,CAAa;AAAA,QAChD;AAAA,MAAA;AAAA,IAEJ;AAAA,IACA,gBAAgB5J,GAA8B;AAC5C,YAAMzF,IAAI,KAAK,YAAY,QAAQyF,CAAU;AAC7C,WAAK,YAAYzF,KAAKyF,GACjB,KAAA,eAAezF,KAAKyF,EAAW,MAAM,GAErC,KAAA,MAAM,wBAAwB,KAAK,cAAc,GACjD,KAAA,MAAM,UAAUA,CAAU,GAE1B,KAAA,iBAAiBA,CAAU,EAAE;AAAA,QAChC,MAAM;AAAA,QAEN;AAAA,QACA,MAAM;AACJ,UAAAA,EAAW,aAAaA,EAAW,eAC9B,KAAA,eAAezF,KAAKyF,EAAW,MAAM,GAErC,KAAA,MAAM,wBAAwB,KAAK,cAAc;AAAA,QACxD;AAAA,MAAA;AAAA,IAEJ;AAAA,IACA,aAAmB;AACb,UAAA,KAAK,mBAAmB,KAAK,eAAe;AACzC,aAAA,MAAM,qBAAqB,KAAK,WAAW;AAChD;AAAA,MACF;AAEI,UAAA+J,IAAkC,KAAK,iBAAiB;AAC5D,MAAAA,IAAiB,MAAM,QAAQA,CAAc,IAAIA,IAAiB,CAACA,CAAc;AAEjF,YAAMuE,IAAyC,CAAA,GACzCC,IAAqC,CAAA;AAE3C,eAAShU,IAAI,GAAGA,IAAIwP,EAAe,QAAQxP,KAAK;AAC9C,cAAMiU,IAAgB,KAAK,eAAe,QAAQzE,EAAexP,EAAE;AACnE,QAAIiU,MAAkB,MACTF,EAAA;AAAA,UACT7E,EAAW,QAAQM,EAAexP,IAAI;AAAA,YACpC,MAAM,KAAK;AAAA,YACX,SAAS,KAAK;AAAA,YACd,QAAQ,KAAK;AAAA,YACb,eAAe,KAAK;AAAA,YACpB,cAAc,KAAK;AAAA,YACnB,iBAAiB,KAAK;AAAA,UAAA,CACvB;AAAA,QAAA,GAEegU,EAAAhU,KAAK,KAAK,eAAeiU,OAEhCF,EAAA;AAAA,UACT7E,EAAW,QAAQM,EAAexP,IAAI;AAAA,YACpC,MAAM,KAAK;AAAA,YACX,SAAS,KAAK;AAAA,YACd,QAAQ,KAAK;AAAA,YACb,eAAe,KAAK;AAAA,YACpB,cAAc,KAAK;AAAA,YACnB,iBAAiB,KAAK;AAAA,UAAA,CACvB;AAAA,QAAA,GAEegU,EAAA,KAAKxE,EAAexP,EAAE;AAAA,MAE5C;AAEA,WAAK,iBAAiBgU,GACtB,QAAQ,IAAID,CAAU,EAAE,KAAK,CAACrE,MAAgB;AAC5C,aAAK,cAAcA,GAEd,KAAA,MAAM,qBAAqB,KAAK,WAAW,GAC3C,KAAA,MAAM,wBAAwB,KAAK,cAAc;AAAA,MAAA,CACvD;AAAA,IACH;AAAA,IACA,YAAkB;AAChB,MAAI,KAAK,eACA,OAAA,aAAa,KAAK,WAAW,GAEtC,KAAK,YAAY,IACjB,KAAK,kBAAkB;AAAA,IACzB;AAAA,IACA,QAAQwE,GAA2B;AACjC,WAAK,kBAAkB,IACnB,KAAK,eACP,aAAa,KAAK,WAAW,GAE1B,KAAA,cAAc,OAAO,WAAW,MAAM;AACzC,aAAK,YAAY;AAAA,MAAA,GAChB,KAAK,qBAAqB,GAAG,GAChC,KAAK,KAAKA,EAAS,UAAUA,EAAS,QAAQ;AAAA,IAChD;AAAA,IACA,KAAKC,GAAcC,GAAY;AAC7B,UAAID,MAASC,GAAI;AACf,cAAM5E,IAAiBlK,EAAM,UAAU,KAAK,gBAAgB6O,GAAMC,CAAE;AACpE,aAAK,UAAU,MAAM;AACd,eAAA,MAAM,wBAAwB5E,CAAc,GAC5C,KAAA;AAAA,YACH;AAAA,YACA;AAAA,cACE,UAAU2E;AAAA,cACV,UAAUC;AAAA,YACZ;AAAA,YACA5E;AAAA,UAAA;AAAA,QACF,CACD;AAAA,MACH;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAjxBgB,MAAAxJ,KAAC,CAAiB,IAAA,GAACqO,KAAA;AAAA,EAAA,KAAA;AAAA;GAoDPC,KAAM;AAAA,EAAA,KAAA;AAAA;GAITC,KAAA,EAAA,OAAM;;qCAzF9BhO,EAgHM,aAAA;AA9GE,SAAApH,EAAA,GAAAC,EAAA,OAAA;AAAA,IAAA,IAAA,SAAAG,EAAA;AAAA;0BAAsG,aAAQ,YAAA;AAAA,MAAA;AAAA,QAAqG,oBAAAA,EAAA,aAAA;AAAA,QAAA,sBAAyCA,EAAS,aAAA;AAAA,QAAA,2BAA+BA,EAAe,aAAA;AAAA,QAA0B,cAAAA,EAAA;AAAA,QAAmC,qBAAAA,EAAA;AAAA,QAA0C,gBAAAA,EAAA;AAAA,QAAA,eAAAA,EAA8C,aAAQ;AAAA,QAAA,eAAAA,EAAA,aAAA;AAAA,yBAA2F,EAAKA,EAAA,aAAA,MAAAA,EAAA,aAAA,MAAAA,EAAA,eAAA,CAAAA,EAAA;AAAA,MAAA;AAAA,MAerjB,WAAQA,EAAA;AAAA,IAAA,CACR;AAAA,IACA,YAAST,EAAE,OAAAA,EAAA,KAAA,IAAA0V,MAAAjV,EAAA,YAAAA,EAAA,SAAA,GAAAiV,CAAA;AAAA,IACX,aAAI1V,0BAAES,EAAI,aAAAA,EAAA,UAAA,GAAAiV,CAAA;AAAA,IAAA,aAAA1V,EAAA,OAAAA,EAAA,KAAA,IAAA0V,MAAAjV,EAAA,aAAAA,EAAA,UAAA,GAAAiV,CAAA;AAAA,IAEX,QAA4B1V,EAAA,QAAAA,EAAA,MAAA,IAAA0V,MAAAjV,EAAA,QAAAA,EAAA,KAAA,GAAAiV,CAAA;AAAA,EAAA,GAC5B;AAAA,IAAAC,EACOlV,EAAC,QAAA,cAAA;AAAA,IAC4BkH,EAAA,OAAA;AAAA,MAAA,OAAAD,EAA+B,CAAW,wDAAA;AAAA,QAA0B,cAAA,CAAA,CAAAjH,EAAA;AAAA,QAAgC,aAAA,CAAAA,EAAA;AAAA,QAAA,gBAAAA,EAAA;AAAA;MAOtI,CAAA,CAAA;AAAA,IAAA,GACA;AAAA,MAAAkV,EAEQlV,EAAe,QAAA,cAAA;AAAA,MAAAkH,EADvB,UAOM4N,IAAA,MAAA,GAAA;AAAA,MAAA9U,EAAA,mBAAAJ,KALEC,EAAA,OAAA;AAAA,QAAA,KAAA;AAAA,QAGN,OAA4EoH,EAAA,CAAA,oBAAA,EAAA,yBAAAjH,EAAA,mBAAA,IAAA,CAAA,CAAA;AAAA,MAAA,GAAA;AAAA,QAApCkH,EAAA,OAAA;AAAA,UAAA,OAAA;AAAA,UACxC,OAAmFiO,EAAA,EAAA,OAAAnV,EAAA,kBAAA,KAAA;AAAA,QAAA,GAA9E,MAAM,CAAA;AAAA,QAA8BkH,EAAA,OAAA;AAAA,UAAA,OAAA;AAAA;;eAKjCI,EAAiB,IAAA,EAAA;AAAA,OAAA1H,EAAA,GAAAmI,EAAAqN,EAAApV,EAAX,aAAW,cAAA,aAAA,GAAA;AAAA,QACxB,MAAMA,EAAA;AAAA,QACN,iBAAST,EAAY,OAAQA,EAAA,KAAA,CAAA4H,MAAAnH,EAAA,cAAAmH;AAAA,QAC7B,MAAqBnH,EAAA,SAAA,SAAA,MAAA;AAAA,QACrB,aAAW,UAAEA,EAAQ,WAAA;AAAA,QACrB,uBAAiBA,EAAA;AAAA,QACjB,eAAYA,EAAE,aAAqB,SAAA,MAAA;AAAA,QACnC,mBAAUA,EAAA,aAAA;AAAA,QACV,gBAAQ;AAAA,QAAA,aAAAT,EAAA,OAAAA,EAAA,KAAA,CAAA4H,MAAAnH,EAAA;qBAET,OAwCmBT,EAAA,KAAA,CAAA4H,MAAAnH,EAAA,QAAAmH,CAAA;AAAA,MAAA,GAAA;AAAA,QAxCG,SAAAkO,EAAC,MAAU;AAAA,UAAUjO,EAAAkO,IAAA;AAAA,YAAC,MAAK;AAAA,YAAA,KAAA;AAAA;;;eAIvC1V,EAAA,EAAO,GAAGC,EAAAC,GAAA,MAAAC,GAAAC,EAAA,aAAA,CAAA8J,GAAA5J,OACXN,EAAA,GAAgDmI,EAAAqN,EAAApV,EAAA,aAAA,cAAA,iBAAA,GAAA;AAAA,gBACpD,KAAK8J,EAAO;AAAA,gBAAA,OAAA;AAAA;;gBAEqB,SAAAuL,EAAa,MAAO;AAAA,kBAAAH,EAAclV,EAAO,QAAA,uBAAA;AAAA,oBAAA,YAAA8J;AAAA,oBAC3E,UAgBOA;AAAA,kBAAA,CAAA;AAAA,oBAhBsD9J,EAAO,QAAA,gBAAA;AAAA,oBAgB7D,YAAA8J;AAAA,oBAfL,UAAAA;AAAA,kBAAA,GACG,MAAA;AAAA,oBAAA1C,EACAmO,GAAoB;AAAA,sBACpB,iBAAWvV,EAAA;AAAA,sBACX,eAAU8J;AAAA,sBACV,WAAU9J,EAAA;AAAA,sBACV,YAAY,aAAS;AAAA,sBACrB,UAAUA,EAAQ,aAAA;AAAA,sBAClB,cAAgBA,EAAA;AAAA,sBAChB,UAAAA,EAAA;AAAA,sBACD,kBAAQA,EAAA;AAAA,sBACP,oBAAMA,EAAA;AAAA,sBACN,OAAA;AAAA,sBACA,UAAAT,EAAY,wCAAE4H,CAAa;AAAA,sBAAA,UAAA5H,EAAA,OAAAA,EAAA,KAAA,CAAA4H,MAAAnH,EAAA,gBAAAmH,CAAA;AAAA;oBAG8C,GAAA,MAAA,GAAA,CAAA,iBAAA,eAAA,aAAA,YAAA,YAAA,cAAA,YAAA,kBAAA,kBAAA,CAAA;AAAA,kBAAA,CAAA;AAAA,oBAAXnH,EAAO,QAAA,sBAAA;AAAA,oBAAA,YAAA8J;AAAA;;;;cAE5D,GAAA,MAAA,CAAA,OAAU,CAAI,EAC5B,GAAA,GAAA;AAAA,cAAA9J,EACE,oCACEA,EAKO,QAAA,oBAAA,EAAA,KAAA,EAAA,GAAA,MAAA;AAAA,gBAAAkH,EAJL,OAGO6N,IAHP;AAAA,kBACgD7N,EAAA,QAAA8N,IAAA;AAAA,oBAAA9N,EAC9C,QAAqDR,IAAA;AAAA,sBAAAU,EAAAC,GAAA,EAAA,MAAA,0BAAA,CAAA;AAAA;;;;;;;;;QAS3D,GAAA;AAAA,MAAA,GAAA,IAAA,CAAA,QAAA,QADR,aAWE,uBAAA,eAAA,iBAAA,CAAA;AAAA,MAAArH,EAAA,aAAA,MAAAJ,EAAA,GATeC,EAAA,SAAA;AAAA,QACf,KAAK;AAAA,QACJ,KAAA;AAAA,QACD,OAAK;AAAA,QACJ,UAAUG,EAAW,aAAA,MAAAA,EAAA,eAAA,CAAAA,EAAA;AAAA,QACtB,MAAK;AAAA,QACJ,UAAQA,EAAA;AAAA,QACR,OAAO;AAAA,QACP,QAAMA,EAAA,UAAA;AAAA,QAAA,SAAAA,EAAA;AAAA;SAEkB,MAAA,IAAA2G,EAAA,KAAAW,EAAA,IAAA,EAAA;AAAA,MAE7B4N,EAA2BlV,EAAA,QAAA,aAAA;AAAA,IAAA,GAAA,CAAA;AAAA;;;oDC1GhBwV,KAAA;AAAA,EACb,aAAAvP;AAAA,EACA,gBAAAyN;AAAA,EACA,aAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,cAAA6B;AACF;AC0BA,MAAMC,KAAiB;AAAA,EACrB,QAAQC,GAAU;AACT,WAAA,QAAQH,EAAU,EAAE,QAAQ,CAAC,CAACrW,GAAMyW,CAAS,MAAM;AACpD,MAAAD,EAAA,UAAUxW,GAAMyW,CAAS;AAAA,IAAA,CAC9B;AAAA,EACH;AACF;"}